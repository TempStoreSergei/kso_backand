/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGPYTHON
#define SWIGPYTHON
#endif

#define SWIG_PYTHON_DIRECTOR_NO_VTABLE
#define SWIGPYTHON_BUILTIN


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#if defined(__GNUC__) && defined(_WIN32) && !defined(SWIG_PYTHON_NO_HYPOT_WORKAROUND)
/* Workaround for '::hypot' has not been declared', see https://bugs.python.org/issue11566 */
# include <math.h>
#endif

#if defined(_DEBUG) && defined(SWIG_PYTHON_INTERPRETER_NO_DEBUG)
/* Use debug wrappers with the Python release dll */
# undef _DEBUG
# include <Python.h>
# define _DEBUG 1
#else
# include <Python.h>
#endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2
#define SWIG_POINTER_NO_NULL       0x4

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = (unsigned char)((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = (unsigned char)((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (unsigned char)(d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (unsigned char)(d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13



/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyInt_FromSize_t(x) PyLong_FromSize_t(x)
#define PyString_Check(name) PyBytes_Check(name)
#define PyString_FromString(x) PyUnicode_FromString(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)
#define PyString_AsString(str) PyBytes_AsString(str)
#define PyString_Size(str) PyBytes_Size(str)	
#define PyString_InternFromString(key) PyUnicode_InternFromString(key)
#define Py_TPFLAGS_HAVE_CLASS Py_TPFLAGS_BASETYPE
#define PyString_AS_STRING(x) PyUnicode_AS_STRING(x)
#define _PyLong_FromSsize_t(x) PyLong_FromSsize_t(x)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


/* Warning: This function will allocate a new string in Python 3,
 * so please call SWIG_Python_str_DelForPy3(x) to free the space.
 */
SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03030000
  return (char *)PyUnicode_AsUTF8(str);
#elif PY_VERSION_HEX >= 0x03000000
  char *newstr = 0;
  str = PyUnicode_AsUTF8String(str);
  if (str) {
    char *cstr;
    Py_ssize_t len;
    if (PyBytes_AsStringAndSize(str, &cstr, &len) != -1) {
      newstr = (char *) malloc(len+1);
      if (newstr)
        memcpy(newstr, cstr, len+1);
    }
    Py_XDECREF(str);
  }
  return newstr;
#else
  return PyString_AsString(str);
#endif
}

#if PY_VERSION_HEX >= 0x03030000 || PY_VERSION_HEX < 0x03000000
#  define SWIG_Python_str_DelForPy3(x)
#else
#  define SWIG_Python_str_DelForPy3(x) free( (void*) (x) )
#endif


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

// SWIGPY_USE_CAPSULE is no longer used within SWIG itself, but some user
// interface files check for it.
# define SWIGPY_USE_CAPSULE
# define SWIGPY_CAPSULE_NAME ("swig_runtime_data" SWIG_RUNTIME_VERSION ".type_pointer_capsule" SWIG_TYPE_TABLE_NAME)

#if PY_VERSION_HEX < 0x03020000
#define PyDescr_TYPE(x) (((PyDescrObject *)(x))->d_type)
#define PyDescr_NAME(x) (((PyDescrObject *)(x))->d_name)
#define Py_hash_t long
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred())
    PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    PyObject *old_str = PyObject_Str(value);
    const char *tmp = SWIG_Python_str_AsChar(old_str);
    PyErr_Clear();
    Py_XINCREF(type);
    if (tmp)
      PyErr_Format(type, "%s %s", tmp, mesg);
    else
      PyErr_Format(type, "%s", mesg);
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

SWIGRUNTIME int
SWIG_Python_TypeErrorOccurred(PyObject *obj)
{
  PyObject *error;
  if (obj)
    return 0;
  error = PyErr_Occurred();
  return error && PyErr_GivenExceptionMatches(error, PyExc_TypeError);
}

SWIGRUNTIME void
SWIG_Python_RaiseOrModifyTypeError(const char *message)
{
  if (SWIG_Python_TypeErrorOccurred(NULL)) {
    /* Use existing TypeError to preserve stacktrace and enhance with given message */
    PyObject *newvalue;
    PyObject *type = NULL, *value = NULL, *traceback = NULL;
    PyErr_Fetch(&type, &value, &traceback);
#if PY_VERSION_HEX >= 0x03000000
    newvalue = PyUnicode_FromFormat("%S\nAdditional information:\n%s", value, message);
#else
    newvalue = PyString_FromFormat("%s\nAdditional information:\n%s", PyString_AsString(value), message);
#endif
    Py_XDECREF(value);
    PyErr_Restore(type, newvalue, traceback);
  } else {
    /* Raise TypeError using given message */
    PyErr_SetString(PyExc_TypeError, message);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    define SWIG_PYTHON_USE_GIL
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  const char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;

#ifdef __cplusplus
}
#endif


/* -----------------------------------------------------------------------------
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

#if PY_VERSION_HEX < 0x02070000 /* 2.7.0 */
# error "This version of SWIG only supports Python >= 2.7"
#endif

#if PY_VERSION_HEX >= 0x03000000 && PY_VERSION_HEX < 0x03020000
# error "This version of SWIG only supports Python 3 >= 3.2"
#endif

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)

#ifdef SWIGPYTHON_BUILTIN
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(self, ptr, type, flags)
#else
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(NULL, ptr, type, flags)
#endif

#define SWIG_InternalNewPointerObj(ptr, type, flags)	SWIG_Python_NewPointerObj(NULL, ptr, type, flags)

#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(NULL, ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule(clientdata)
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

#if defined(SWIGPYTHON_BUILTIN)

SWIGINTERN void
SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {
  PyObject *s = PyString_InternFromString(key);
  PyList_Append(seq, s);
  Py_DECREF(s);
}

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, name, obj);
  Py_DECREF(obj);
  if (public_interface)
    SwigPyBuiltin_AddPublicSymbol(public_interface, name);
}

#else

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, name, obj);
  Py_DECREF(obj);                            
}

#endif

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
}

/* Unpack the argument tuple */

SWIGINTERN Py_ssize_t
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    if (min <= 1 && max >= 1) {
      Py_ssize_t i;
      objs[0] = args;
      for (i = 1; i < max; ++i) {
	objs[i] = 0;
      }
      return 2;
    }
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      Py_ssize_t i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

SWIGINTERN int
SWIG_Python_CheckNoKeywords(PyObject *kwargs, const char *name) {
  int no_kwargs = 1;
  if (kwargs) {
    assert(PyDict_Check(kwargs));
    if (PyDict_Size(kwargs) > 0) {
      PyErr_Format(PyExc_TypeError, "%s() does not take keyword arguments", name);
      no_kwargs = 0;
    }
  }
  return no_kwargs;
}

/* A functor is a function object with one single object argument */
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#define SWIG_BUILTIN_TP_INIT	    (SWIG_POINTER_OWN << 2)
#define SWIG_BUILTIN_INIT	    (SWIG_BUILTIN_TP_INIT | SWIG_POINTER_OWN)

#ifdef __cplusplus
extern "C" {
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
  PyTypeObject *pytype;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  int fail = data ? data->implicitconv : 0;
  if (fail)
    PyErr_SetString(PyExc_TypeError, "Implicit conversion is prohibited for explicit constructors.");
  return fail;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
      data->newraw = PyObject_GetAttrString(data->klass, "__new__");
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, "__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
      data->delargs = !(flags & (METH_O));
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    data->pytype = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData *data) {
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
#ifdef SWIGPYTHON_BUILTIN
  PyObject *dict;
#endif
} SwigPyObject;


#ifdef SWIGPYTHON_BUILTIN

SWIGRUNTIME PyObject *
SwigPyObject_get___dict__(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;

  if (!sobj->dict)
    sobj->dict = PyDict_New();

  Py_INCREF(sobj->dict);
  return sobj->dict;
}

#endif

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, SwigPyObject_long(v)) == 0) {
      PyObject *ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
	res = PyUnicode_Format(ofmt,args);
#else
	res = PyString_Format(ofmt,args);
#endif
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_repr(SwigPyObject *v)
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", (name ? name : "unknown"), (void *)v);
  if (v->next) {
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
# if PY_VERSION_HEX >= 0x03000000
    PyObject *joined = PyUnicode_Concat(repr, nrep);
    Py_DecRef(repr);
    Py_DecRef(nrep);
    repr = joined;
# else
    PyString_ConcatAndDel(&repr,nrep);
# endif
  }
  return repr;  
}

/* We need a version taking two PyObject* parameters so it's a valid
 * PyCFunction to use in swigobject_methods[]. */
SWIGRUNTIME PyObject *
SwigPyObject_repr2(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  return SwigPyObject_repr((SwigPyObject*)v);
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  res = PyBool_FromLong( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) ? 1 : 0);
  return res;  
}


SWIGRUNTIME PyTypeObject* SwigPyObject_TypeOnce(void);

#ifdef SWIGPYTHON_BUILTIN
static swig_type_info *SwigPyObject_stype = 0;
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
    SwigPyClientData *cd;
    assert(SwigPyObject_stype);
    cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
    assert(cd);
    assert(cd->pytype);
    return cd->pytype;
}
#else
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyObject_TypeOnce();
  return type;
}
#endif

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
#ifdef SWIGPYTHON_BUILTIN
  PyTypeObject *target_tp = SwigPyObject_type();
  if (PyType_IsSubtype(op->ob_type, target_tp))
    return 1;
  return (strcmp(op->ob_type->tp_name, "SwigPyObject") == 0);
#else
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
#endif
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;

      /* PyObject_CallFunction() has the potential to silently drop
         the active exception.  In cases of unnamed temporary
         variable or where we just finished iterating over a generator
         StopIteration will be active right now, and this needs to
         remain true upon return from SwigPyObject_dealloc.  So save
         and restore. */
      
      PyObject *type = NULL, *value = NULL, *traceback = NULL;
      PyErr_Fetch(&type, &value, &traceback);

      if (data->delargs) {
        /* we need to create a temporary object to carry the destroy operation */
        PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
        res = SWIG_Python_CallFunctor(destroy, tmp);
        Py_DECREF(tmp);
      } else {
        PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
        PyObject *mself = PyCFunction_GET_SELF(destroy);
        res = ((*meth)(mself, v));
      }
      if (!res)
        PyErr_WriteUnraisable(destroy);

      PyErr_Restore(type, value, traceback);

      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (!SwigPyObject_Check(next)) {
    PyErr_SetString(PyExc_TypeError, "Attempt to append a non SwigPyObject");
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
  if (!PyArg_UnpackTuple(args, "own", 0, 1, &val)) {
    return NULL;
  } else {
    SwigPyObject *sobj = (SwigPyObject *)v;
    PyObject *obj = PyBool_FromLong(sobj->own);
    if (val) {
      if (PyObject_IsTrue(val)) {
        SwigPyObject_acquire(v,args);
      } else {
        SwigPyObject_disown(v,args);
      }
    } 
    return obj;
  }
}

static PyMethodDef
swigobject_methods[] = {
  {"disown",  SwigPyObject_disown,  METH_NOARGS,  "releases ownership of the pointer"},
  {"acquire", SwigPyObject_acquire, METH_NOARGS,  "acquires ownership of the pointer"},
  {"own",     SwigPyObject_own,     METH_VARARGS, "returns/sets ownership of the pointer"},
  {"append",  SwigPyObject_append,  METH_O,       "appends another 'this' object"},
  {"next",    SwigPyObject_next,    METH_NOARGS,  "returns the next 'this' object"},
  {"__repr__",SwigPyObject_repr2,   METH_NOARGS,  "returns object representation"},
  {0, 0, 0, 0}  
};

SWIGRUNTIME PyTypeObject*
SwigPyObject_TypeOnce(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";

  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03050000 /* 3.5 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_matrix_multiply */
#elif PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#else
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#endif
  };

  static PyTypeObject swigpyobject_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      "SwigPyObject",                       /* tp_name */
      sizeof(SwigPyObject),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyObject_dealloc,     /* tp_dealloc */
      0,                                    /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
      0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
      (cmpfunc)SwigPyObject_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyObject_repr,          /* tp_repr */
      &SwigPyObject_as_number,              /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      0,                                    /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigobject_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      (richcmpfunc)SwigPyObject_richcompare,/* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      swigobject_methods,                   /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
      0,                                    /* tp_del */
      0,                                    /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                    /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
      0,                                    /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
      0,                                    /* tp_print */
#endif
#ifdef COUNT_ALLOCS
      0,                                    /* tp_allocs */
      0,                                    /* tp_frees */
      0,                                    /* tp_maxalloc */
      0,                                    /* tp_prev */
      0                                     /* tp_next */
#endif
    };
    swigpyobject_type = tmp;
    type_init = 1;
    if (PyType_Ready(&swigpyobject_type) < 0)
      return NULL;
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((const char *)v->pack, (const char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* SwigPyPacked_TypeOnce(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyPacked_TypeOnce();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == SwigPyPacked_TypeOnce()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
SwigPyPacked_TypeOnce(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX>=0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      "SwigPyPacked",                       /* tp_name */
      sizeof(SwigPyPacked),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyPacked_dealloc,     /* tp_dealloc */
      0,                                    /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX>=0x03000000
      0, /* tp_reserved in 3.0.1 */
#else
      (cmpfunc)SwigPyPacked_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyPacked_repr,          /* tp_repr */
      0,                                    /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyPacked_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigpacked_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      0,                                    /* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      0,                                    /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
      0,                                    /* tp_del */
      0,                                    /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                    /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
      0,                                    /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
      0,                                    /* tp_print */
#endif
#ifdef COUNT_ALLOCS
      0,                                    /* tp_allocs */
      0,                                    /* tp_frees */
      0,                                    /* tp_maxalloc */
      0,                                    /* tp_prev */
      0                                     /* tp_next */
#endif
    };
    swigpypacked_type = tmp;
    type_init = 1;
    if (PyType_Ready(&swigpypacked_type) < 0)
      return NULL;
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

static PyObject *Swig_This_global = NULL;

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  if (Swig_This_global == NULL)
    Swig_This_global = SWIG_Python_str_FromChar("this");
  return Swig_This_global;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  PyObject *obj;

  if (SwigPyObject_Check(pyobj))
    return (SwigPyObject *) pyobj;

#ifdef SWIGPYTHON_BUILTIN
  (void)obj;
# ifdef PyWeakref_CheckProxy
  if (PyWeakref_CheckProxy(pyobj)) {
    pyobj = PyWeakref_GET_OBJECT(pyobj);
    if (pyobj && SwigPyObject_Check(pyobj))
      return (SwigPyObject*) pyobj;
  }
# endif
  return NULL;
#else

  obj = 0;

#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
  if (PyInstance_Check(pyobj)) {
    obj = _PyInstance_Lookup(pyobj, SWIG_This());      
  } else {
    PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
    if (dictptr != NULL) {
      PyObject *dict = *dictptr;
      obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
    } else {
#ifdef PyWeakref_CheckProxy
      if (PyWeakref_CheckProxy(pyobj)) {
	PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
      }
#endif
      obj = PyObject_GetAttr(pyobj,SWIG_This());
      if (obj) {
	Py_DECREF(obj);
      } else {
	if (PyErr_Occurred()) PyErr_Clear();
	return 0;
      }
    }
  }
#else
  obj = PyObject_GetAttr(pyobj,SWIG_This());
  if (obj) {
    Py_DECREF(obj);
  } else {
    if (PyErr_Occurred()) PyErr_Clear();
    return 0;
  }
#endif
  if (obj && !SwigPyObject_Check(obj)) {
    /* a PyObject is called 'this', try to get the 'real this'
       SwigPyObject from it */ 
    return SWIG_Python_GetSwigThis(obj);
  }
  return (SwigPyObject *)obj;
#endif
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  int res;
  SwigPyObject *sobj;
  int implicit_conv = (flags & SWIG_POINTER_IMPLICIT_CONV) != 0;

  if (!obj)
    return SWIG_ERROR;
  if (obj == Py_None && !implicit_conv) {
    if (ptr)
      *ptr = 0;
    return (flags & SWIG_POINTER_NO_NULL) ? SWIG_NullReferenceError : SWIG_OK;
  }

  res = SWIG_ERROR;

  sobj = SWIG_Python_GetSwigThis(obj);
  if (own)
    *own = 0;
  while (sobj) {
    void *vptr = sobj->ptr;
    if (ty) {
      swig_type_info *to = sobj->ty;
      if (to == ty) {
        /* no type cast needed */
        if (ptr) *ptr = vptr;
        break;
      } else {
        swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
        if (!tc) {
          sobj = (SwigPyObject *)sobj->next;
        } else {
          if (ptr) {
            int newmemory = 0;
            *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
            if (newmemory == SWIG_CAST_NEW_MEMORY) {
              assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
              if (own)
                *own = *own | SWIG_CAST_NEW_MEMORY;
            }
          }
          break;
        }
      }
    } else {
      if (ptr) *ptr = vptr;
      break;
    }
  }
  if (sobj) {
    if (own)
      *own = *own | sobj->own;
    if (flags & SWIG_POINTER_DISOWN) {
      sobj->own = 0;
    }
    res = SWIG_OK;
  } else {
    if (implicit_conv) {
      SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
      if (data && !data->implicitconv) {
        PyObject *klass = data->klass;
        if (klass) {
          PyObject *impconv;
          data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
          impconv = SWIG_Python_CallFunctor(klass, obj);
          data->implicitconv = 0;
          if (PyErr_Occurred()) {
            PyErr_Clear();
            impconv = 0;
          }
          if (impconv) {
            SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
            if (iobj) {
              void *vptr;
              res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
              if (SWIG_IsOK(res)) {
                if (ptr) {
                  *ptr = vptr;
                  /* transfer the ownership to 'ptr' */
                  iobj->own = 0;
                  res = SWIG_AddCast(res);
                  res = SWIG_AddNewMask(res);
                } else {
                  res = SWIG_AddCast(res);		    
                }
              }
            }
            Py_DECREF(impconv);
          }
        }
      }
      if (!SWIG_IsOK(res) && obj == Py_None) {
        if (ptr)
          *ptr = 0;
        if (PyErr_Occurred())
          PyErr_Clear();
        res = SWIG_OK;
      }
    }
  }
  return res;
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    swig_cast_info *tc;

    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
    if (!desc)
      return SWIG_ERROR;
    tc = SWIG_TypeCheck(desc,ty);
    if (tc) {
      int newmemory = 0;
      *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
      assert(!newmemory); /* newmemory handling not yet implemented */
    } else {
      return SWIG_ERROR;
    }
    return SWIG_OK;
  }
}

/* Convert a packed pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      if (PyObject_SetAttr(inst, SWIG_This(), swig_this) == -1) {
        Py_DECREF(inst);
        inst = 0;
      }
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *empty_args = PyTuple_New(0);
    if (empty_args) {
      PyObject *empty_kwargs = PyDict_New();
      if (empty_kwargs) {
        inst = ((PyTypeObject *)data->newargs)->tp_new((PyTypeObject *)data->newargs, empty_args, empty_kwargs);
        Py_DECREF(empty_kwargs);
        if (inst) {
          if (PyObject_SetAttr(inst, SWIG_This(), swig_this) == -1) {
            Py_DECREF(inst);
            inst = 0;
          } else {
            Py_TYPE(inst)->tp_flags &= ~Py_TPFLAGS_VALID_VERSION_TAG;
          }
        }
      }
      Py_DECREF(empty_args);
    }
#else
    PyObject *dict = PyDict_New();
    if (dict) {
      PyDict_SetItem(dict, SWIG_This(), swig_this);
      inst = PyInstance_NewRaw(data->newargs, dict);
      Py_DECREF(dict);
    }
#endif
  }
  return inst;
}

SWIGRUNTIME int
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
  PyObject **dictptr = _PyObject_GetDictPtr(inst);
  if (dictptr != NULL) {
    PyObject *dict = *dictptr;
    if (dict == NULL) {
      dict = PyDict_New();
      *dictptr = dict;
    }
    return PyDict_SetItem(dict, SWIG_This(), swig_this);
  }
#endif
  return PyObject_SetAttr(inst, SWIG_This(), swig_this);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args, "swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      SwigPyObject_append((PyObject*) sthis, obj[1]);
    } else {
      if (SWIG_Python_SetSwigThis(obj[0], obj[1]) != 0)
        return NULL;
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {
  SwigPyClientData *clientdata;
  PyObject * robj;
  int own;

  if (!ptr)
    return SWIG_Py_Void();

  clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
  own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
  if (clientdata && clientdata->pytype) {
    SwigPyObject *newobj;
    if (flags & SWIG_BUILTIN_TP_INIT) {
      newobj = (SwigPyObject*) self;
      if (newobj->ptr) {
        PyObject *next_self = clientdata->pytype->tp_alloc(clientdata->pytype, 0);
        while (newobj->next)
	  newobj = (SwigPyObject *) newobj->next;
        newobj->next = next_self;
        newobj = (SwigPyObject *)next_self;
#ifdef SWIGPYTHON_BUILTIN
        newobj->dict = 0;
#endif
      }
    } else {
      newobj = PyObject_New(SwigPyObject, clientdata->pytype);
#ifdef SWIGPYTHON_BUILTIN
      newobj->dict = 0;
#endif
    }
    if (newobj) {
      newobj->ptr = ptr;
      newobj->ty = type;
      newobj->own = own;
      newobj->next = 0;
      return (PyObject*) newobj;
    }
    return SWIG_Py_Void();
  }

  assert(!(flags & SWIG_BUILTIN_TP_INIT));

  robj = SwigPyObject_New(ptr, type, own);
  if (robj && clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
    PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
    Py_DECREF(robj);
    robj = inst;
  }
  return robj;
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
    type_pointer = PyCapsule_Import(SWIGPY_CAPSULE_NAME, 0);
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

SWIGRUNTIME void
SWIG_Python_DestroyModule(PyObject *obj)
{
  swig_module_info *swig_module = (swig_module_info *) PyCapsule_GetPointer(obj, SWIGPY_CAPSULE_NAME);
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
  Swig_This_global = NULL;
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule("swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} }; /* Sentinel */
  PyObject *module = Py_InitModule("swig_runtime_data" SWIG_RUNTIME_VERSION, swig_empty_runtime_method_table);
#endif
  PyObject *pointer = PyCapsule_New((void *) swig_module, SWIGPY_CAPSULE_NAME, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, "type_pointer_capsule" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
    descriptor = (swig_type_info *) PyCapsule_GetPointer(obj, NULL);
  } else {
    swig_module_info *swig_module = SWIG_GetModule(0);
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
      obj = PyCapsule_New((void*) descriptor, NULL, NULL);
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      PyObject *old_str = PyObject_Str(value);
      const char *tmp = SWIG_Python_str_AsChar(old_str);
      const char *errmesg = tmp ? tmp : "Invalid error message";
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, errmesg);
      } else {
	PyErr_Format(type, "%s %s", errmesg, mesg);
      }
      SWIG_Python_str_DelForPy3(tmp);
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : "";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
          SWIG_Python_str_DelForPy3(cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
#if SWIG_POINTER_EXCEPTION
    if (flags) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
#endif
  }
  return result;
}

#ifdef SWIGPYTHON_BUILTIN
SWIGRUNTIME int
SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {
  PyTypeObject *tp = obj->ob_type;
  PyObject *descr;
  PyObject *encoded_name;
  descrsetfunc f;
  int res = -1;

# ifdef Py_USING_UNICODE
  if (PyString_Check(name)) {
    name = PyUnicode_Decode(PyString_AsString(name), PyString_Size(name), NULL, NULL);
    if (!name)
      return -1;
  } else if (!PyUnicode_Check(name))
# else
  if (!PyString_Check(name))
# endif
  {
    PyErr_Format(PyExc_TypeError, "attribute name must be string, not '%.200s'", name->ob_type->tp_name);
    return -1;
  } else {
    Py_INCREF(name);
  }

  if (!tp->tp_dict) {
    if (PyType_Ready(tp) < 0)
      goto done;
  }

  descr = _PyType_Lookup(tp, name);
  f = NULL;
  if (descr != NULL)
    f = descr->ob_type->tp_descr_set;
  if (!f) {
    if (PyString_Check(name)) {
      encoded_name = name;
      Py_INCREF(name);
    } else {
      encoded_name = PyUnicode_AsUTF8String(name);
      if (!encoded_name)
        return -1;
    }
    PyErr_Format(PyExc_AttributeError, "'%.100s' object has no attribute '%.200s'", tp->tp_name, PyString_AsString(encoded_name));
    Py_DECREF(encoded_name);
  } else {
    res = f(descr, obj, value);
  }
  
  done:
  Py_DECREF(name);
  return res;
}
#endif


#ifdef __cplusplus
}
#endif

#ifdef __cplusplus
extern "C" {
#endif

SWIGINTERN Py_hash_t
SwigPyObject_hash(PyObject *obj) {
  SwigPyObject *sobj = (SwigPyObject *)obj;
  void *ptr = sobj->ptr;
  return (Py_hash_t)ptr;
}

SWIGINTERN Py_hash_t
SWIG_PyNumber_AsPyHash(PyObject *obj) {
  Py_hash_t result = -1;
#if PY_VERSION_HEX < 0x03020000
  if (PyInt_Check(obj))
    result = PyInt_AsLong(obj);
  else if (PyLong_Check(obj))
    result = PyLong_AsLong(obj);
#else
  if (PyNumber_Check(obj))
    result = PyNumber_AsSsize_t(obj, NULL);
#endif
  else
    PyErr_Format(PyExc_TypeError, "Wrong type for hash function");
  return PyErr_Occurred() ? -1 : result;
}

SWIGINTERN int
SwigPyBuiltin_BadInit(PyObject *self, PyObject *SWIGUNUSEDPARM(args), PyObject *SWIGUNUSEDPARM(kwds)) {
  PyErr_Format(PyExc_TypeError, "Cannot create new instances of type '%.300s'", self->ob_type->tp_name);
  return -1;
}

SWIGINTERN void
SwigPyBuiltin_BadDealloc(PyObject *obj) {
  SwigPyObject *sobj = (SwigPyObject *)obj;
  if (sobj->own) {
    PyErr_Format(PyExc_TypeError, "Swig detected a memory leak in type '%.300s': no callable destructor found.", obj->ob_type->tp_name);
  }
}

typedef struct {
  PyCFunction get;
  PyCFunction set;
} SwigPyGetSet;

SWIGINTERN PyObject *
SwigPyBuiltin_GetterClosure (PyObject *obj, void *closure) {
  SwigPyGetSet *getset;
  PyObject *tuple, *result;
  if (!closure)
    return SWIG_Py_Void();
  getset = (SwigPyGetSet *)closure;
  if (!getset->get)
    return SWIG_Py_Void();
  tuple = PyTuple_New(0);
  assert(tuple);
  result = (*getset->get)(obj, tuple);
  Py_DECREF(tuple);
  return result;
}

SWIGINTERN PyObject *
SwigPyBuiltin_FunpackGetterClosure (PyObject *obj, void *closure) {
  SwigPyGetSet *getset;
  PyObject *result;
  if (!closure)
    return SWIG_Py_Void();
  getset = (SwigPyGetSet *)closure;
  if (!getset->get)
    return SWIG_Py_Void();
  result = (*getset->get)(obj, NULL);
  return result;
}

SWIGINTERN int
SwigPyBuiltin_SetterClosure (PyObject *obj, PyObject *val, void *closure) {
  SwigPyGetSet *getset;
  PyObject *tuple, *result;
  if (!closure) {
    PyErr_Format(PyExc_TypeError, "Missing getset closure");
    return -1;
  }
  getset = (SwigPyGetSet *)closure;
  if (!getset->set) {
    PyErr_Format(PyExc_TypeError, "Illegal member variable assignment in type '%.300s'", obj->ob_type->tp_name);
    return -1;
  }
  tuple = PyTuple_New(1);
  assert(tuple);
  Py_INCREF(val);
  PyTuple_SET_ITEM(tuple, 0, val);
  result = (*getset->set)(obj, tuple);
  Py_DECREF(tuple);
  Py_XDECREF(result);
  return result ? 0 : -1;
}

SWIGINTERN int
SwigPyBuiltin_FunpackSetterClosure (PyObject *obj, PyObject *val, void *closure) {
  SwigPyGetSet *getset;
  PyObject *result;
  if (!closure) {
    PyErr_Format(PyExc_TypeError, "Missing getset closure");
    return -1;
  }
  getset = (SwigPyGetSet *)closure;
  if (!getset->set) {
    PyErr_Format(PyExc_TypeError, "Illegal member variable assignment in type '%.300s'", obj->ob_type->tp_name);
    return -1;
  }
  result = (*getset->set)(obj, val);
  Py_XDECREF(result);
  return result ? 0 : -1;
}

SWIGINTERN void
SwigPyStaticVar_dealloc(PyDescrObject *descr) {
  PyObject_GC_UnTrack(descr);
  Py_XDECREF(PyDescr_TYPE(descr));
  Py_XDECREF(PyDescr_NAME(descr));
  PyObject_GC_Del(descr);
}

SWIGINTERN PyObject *
SwigPyStaticVar_repr(PyGetSetDescrObject *descr) {
#if PY_VERSION_HEX >= 0x03000000

  return PyUnicode_FromFormat("<class attribute '%S' of type '%s'>", PyDescr_NAME(descr), PyDescr_TYPE(descr)->tp_name);
#else
  return PyString_FromFormat("<class attribute '%s' of type '%s'>", PyString_AsString(PyDescr_NAME(descr)), PyDescr_TYPE(descr)->tp_name);
#endif
}

SWIGINTERN int
SwigPyStaticVar_traverse(PyObject *self, visitproc visit, void *arg) {
  PyDescrObject *descr;
  descr = (PyDescrObject *)self;
  Py_VISIT((PyObject*) PyDescr_TYPE(descr));
  return 0;
}

SWIGINTERN PyObject *
SwigPyStaticVar_get(PyGetSetDescrObject *descr, PyObject *obj, PyObject *SWIGUNUSEDPARM(type)) {
  if (descr->d_getset->get != NULL)
    return descr->d_getset->get(obj, descr->d_getset->closure);
#if PY_VERSION_HEX >= 0x03000000
  PyErr_Format(PyExc_AttributeError, "attribute '%.300S' of '%.100s' objects is not readable", PyDescr_NAME(descr), PyDescr_TYPE(descr)->tp_name);
#else
  PyErr_Format(PyExc_AttributeError, "attribute '%.300s' of '%.100s' objects is not readable", PyString_AsString(PyDescr_NAME(descr)), PyDescr_TYPE(descr)->tp_name);
#endif
  return NULL;
}

SWIGINTERN int
SwigPyStaticVar_set(PyGetSetDescrObject *descr, PyObject *obj, PyObject *value) {
  if (descr->d_getset->set != NULL)
    return descr->d_getset->set(obj, value, descr->d_getset->closure);
#if PY_VERSION_HEX >= 0x03000000
  PyErr_Format(PyExc_AttributeError, "attribute '%.300S' of '%.100s' objects is not writable", PyDescr_NAME(descr), PyDescr_TYPE(descr)->tp_name);
#else
  PyErr_Format(PyExc_AttributeError, "attribute '%.300s' of '%.100s' objects is not writable", PyString_AsString(PyDescr_NAME(descr)), PyDescr_TYPE(descr)->tp_name);
#endif
  return -1;
}

SWIGINTERN int
SwigPyObjectType_setattro(PyObject *typeobject, PyObject *name, PyObject *value) {
  PyObject *attribute;
  PyTypeObject *type;
  descrsetfunc local_set;

  assert(PyType_Check(typeobject));
  type = (PyTypeObject *)typeobject;
  attribute = _PyType_Lookup(type, name);
  if (attribute != NULL) {
    /* Implement descriptor functionality, if any */
    local_set = attribute->ob_type->tp_descr_set;
    if (local_set != NULL)
      return local_set(attribute, (PyObject *)type, value);
#if PY_VERSION_HEX >= 0x03000000
    PyErr_Format(PyExc_AttributeError, "cannot modify read-only attribute '%.50s.%.400S'", type->tp_name, name);
#else 
    PyErr_Format(PyExc_AttributeError, "cannot modify read-only attribute '%.50s.%.400s'", type->tp_name, PyString_AS_STRING(name));
#endif
  } else {
#if PY_VERSION_HEX >= 0x03000000
    PyErr_Format(PyExc_AttributeError, "type '%.50s' has no attribute '%.400S'", type->tp_name, name);
#else
    PyErr_Format(PyExc_AttributeError, "type '%.50s' has no attribute '%.400s'", type->tp_name, PyString_AS_STRING(name));
#endif
  }

  return -1;
}

SWIGINTERN PyTypeObject*
SwigPyStaticVar_Type(void) {
  static PyTypeObject staticvar_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(&PyType_Type, 0)
#else
      PyObject_HEAD_INIT(&PyType_Type)
      0,                                        /* ob_size */
#endif
      "swig_static_var_getset_descriptor",      /* tp_name */
      sizeof(PyGetSetDescrObject),              /* tp_basicsize */
      0,                                        /* tp_itemsize */
      (destructor)SwigPyStaticVar_dealloc,      /* tp_dealloc */
      0,                                        /* tp_print */
      0,                                        /* tp_getattr */
      0,                                        /* tp_setattr */
      0,                                        /* tp_compare */
      (reprfunc)SwigPyStaticVar_repr,           /* tp_repr */
      0,                                        /* tp_as_number */
      0,                                        /* tp_as_sequence */
      0,                                        /* tp_as_mapping */
      0,                                        /* tp_hash */
      0,                                        /* tp_call */
      0,                                        /* tp_str */
      PyObject_GenericGetAttr,                  /* tp_getattro */
      0,                                        /* tp_setattro */
      0,                                        /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_CLASS, /* tp_flags */
      0,                                        /* tp_doc */
      SwigPyStaticVar_traverse,                 /* tp_traverse */
      0,                                        /* tp_clear */
      0,                                        /* tp_richcompare */
      0,                                        /* tp_weaklistoffset */
      0,                                        /* tp_iter */
      0,                                        /* tp_iternext */
      0,                                        /* tp_methods */
      0,                                        /* tp_members */
      0,                                        /* tp_getset */
      0,                                        /* tp_base */
      0,                                        /* tp_dict */
      (descrgetfunc)SwigPyStaticVar_get,        /* tp_descr_get */
      (descrsetfunc)SwigPyStaticVar_set,        /* tp_descr_set */
      0,                                        /* tp_dictoffset */
      0,                                        /* tp_init */
      0,                                        /* tp_alloc */
      0,                                        /* tp_new */
      0,                                        /* tp_free */
      0,                                        /* tp_is_gc */
      0,                                        /* tp_bases */
      0,                                        /* tp_mro */
      0,                                        /* tp_cache */
      0,                                        /* tp_subclasses */
      0,                                        /* tp_weaklist */
      0,                                        /* tp_del */
      0,                                        /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                        /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
      0,                                        /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
      0,                                        /* tp_print */
#endif
#ifdef COUNT_ALLOCS
      0,                                        /* tp_allocs */
      0,                                        /* tp_frees */
      0,                                        /* tp_maxalloc */
      0,                                        /* tp_prev */
      0                                         /* tp_next */
#endif
    };
    staticvar_type = tmp;
    type_init = 1;
    if (PyType_Ready(&staticvar_type) < 0)
      return NULL;
  }
  return &staticvar_type;
}

SWIGINTERN PyTypeObject*
SwigPyObjectType(void) {
  static char swigpyobjecttype_doc[] = "Metaclass for SWIG wrapped types";
  static PyTypeObject swigpyobjecttype_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(&PyType_Type, 0)
#else
      PyObject_HEAD_INIT(&PyType_Type)
      0,                                        /* ob_size */
#endif
      "SwigPyObjectType",                       /* tp_name */
      PyType_Type.tp_basicsize,                 /* tp_basicsize */
      0,                                        /* tp_itemsize */
      0,                                        /* tp_dealloc */
      0,                                        /* tp_print */
      0,                                        /* tp_getattr */
      0,                                        /* tp_setattr */
      0,                                        /* tp_compare */
      0,                                        /* tp_repr */
      0,                                        /* tp_as_number */
      0,                                        /* tp_as_sequence */
      0,                                        /* tp_as_mapping */
      0,                                        /* tp_hash */
      0,                                        /* tp_call */
      0,                                        /* tp_str */
      0,                                        /* tp_getattro */
      SwigPyObjectType_setattro,                /* tp_setattro */
      0,                                        /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_CLASS, /* tp_flags */
      swigpyobjecttype_doc,                     /* tp_doc */
      0,                                        /* tp_traverse */
      0,                                        /* tp_clear */
      0,                                        /* tp_richcompare */
      0,                                        /* tp_weaklistoffset */
      0,                                        /* tp_iter */
      0,                                        /* tp_iternext */
      0,                                        /* tp_methods */
      0,                                        /* tp_members */
      0,                                        /* tp_getset */
      0,                                        /* tp_base */
      0,                                        /* tp_dict */
      0,                                        /* tp_descr_get */
      0,                                        /* tp_descr_set */
      0,                                        /* tp_dictoffset */
      0,                                        /* tp_init */
      0,                                        /* tp_alloc */
      0,                                        /* tp_new */
      0,                                        /* tp_free */
      0,                                        /* tp_is_gc */
      0,                                        /* tp_bases */
      0,                                        /* tp_mro */
      0,                                        /* tp_cache */
      0,                                        /* tp_subclasses */
      0,                                        /* tp_weaklist */
      0,                                        /* tp_del */
      0,                                        /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                        /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
      0,                                        /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
      0,                                        /* tp_print */
#endif
#ifdef COUNT_ALLOCS
      0,                                        /* tp_allocs */
      0,                                        /* tp_frees */
      0,                                        /* tp_maxalloc */
      0,                                        /* tp_prev */
      0                                         /* tp_next */
#endif
    };
    swigpyobjecttype_type = tmp;
    type_init = 1;
    swigpyobjecttype_type.tp_base = &PyType_Type;
    if (PyType_Ready(&swigpyobjecttype_type) < 0)
      return NULL;
  }
  return &swigpyobjecttype_type;
}

SWIGINTERN PyGetSetDescrObject *
SwigPyStaticVar_new_getset(PyTypeObject *type, PyGetSetDef *getset) {

  PyGetSetDescrObject *descr;
  descr = (PyGetSetDescrObject *)PyType_GenericAlloc(SwigPyStaticVar_Type(), 0);
  assert(descr);
  Py_XINCREF(type);
  PyDescr_TYPE(descr) = type;
  PyDescr_NAME(descr) = PyString_InternFromString(getset->name);
  descr->d_getset = getset;
  if (PyDescr_NAME(descr) == NULL) {
    Py_DECREF(descr);
    descr = NULL;
  }
  return descr;
}

SWIGINTERN void
SwigPyBuiltin_InitBases (PyTypeObject *type, PyTypeObject **bases) {
  Py_ssize_t base_count = 0;
  PyTypeObject **b;
  PyObject *tuple;
  Py_ssize_t i;

  if (!bases[0]) {
    bases[0] = SwigPyObject_type();
    bases[1] = NULL;
  }
  type->tp_base = bases[0];
  Py_INCREF((PyObject *)bases[0]);
  for (b = bases; *b != NULL; ++b)
    ++base_count;
  tuple = PyTuple_New(base_count);
  for (i = 0; i < base_count; ++i) {
    Py_INCREF((PyObject *)bases[i]);
    PyTuple_SET_ITEM(tuple, i, (PyObject *)bases[i]);
  }
  type->tp_bases = tuple;
}

SWIGINTERN PyObject *
SwigPyBuiltin_ThisClosure (PyObject *self, void *SWIGUNUSEDPARM(closure)) {
  PyObject *result;
  result = (PyObject *)SWIG_Python_GetSwigThis(self);
  Py_XINCREF(result);
  return result;
}

SWIGINTERN void
SwigPyBuiltin_SetMetaType (PyTypeObject *type, PyTypeObject *metatype)
{
#if PY_VERSION_HEX >= 0x03000000
    type->ob_base.ob_base.ob_type = metatype;
#else
    type->ob_type = metatype;
#endif
}


/* Start of callback function macros for use in PyTypeObject */

typedef PyObject *(*SwigPyWrapperFunction)(PyObject *, PyObject *);

#define SWIGPY_UNARYFUNC_CLOSURE(wrapper)		\
SWIGINTERN PyObject *					\
wrapper##_unaryfunc_closure(PyObject *a) {		\
  return SwigPyBuiltin_unaryfunc_closure(wrapper, a);	\
}
SWIGINTERN PyObject *
SwigPyBuiltin_unaryfunc_closure(SwigPyWrapperFunction wrapper, PyObject *a) {
  return wrapper(a, NULL);
}

#define SWIGPY_DESTRUCTOR_CLOSURE(wrapper)			\
SWIGINTERN void							\
wrapper##_destructor_closure(PyObject *a) {			\
    SwigPyBuiltin_destructor_closure(wrapper, #wrapper, a);	\
}
SWIGINTERN void
SwigPyBuiltin_destructor_closure(SwigPyWrapperFunction wrapper, const char *wrappername, PyObject *a) {
  SwigPyObject *sobj;
  sobj = (SwigPyObject *)a;
  Py_XDECREF(sobj->dict);
  if (sobj->own) {
    PyObject *o;
    PyObject *type = 0, *value = 0, *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    o = wrapper(a, NULL);
    if (!o) {
      PyObject *deallocname = PyString_FromString(wrappername);
      PyErr_WriteUnraisable(deallocname);
      Py_DECREF(deallocname);
    }
    PyErr_Restore(type, value, traceback);
    Py_XDECREF(o);
  }
  if (PyType_IS_GC(a->ob_type)) {
    PyObject_GC_Del(a);
  } else {
    PyObject_Del(a);
  }
}

#define SWIGPY_INQUIRY_CLOSURE(wrapper)			\
SWIGINTERN int						\
wrapper##_inquiry_closure(PyObject *a) {		\
  return SwigPyBuiltin_inquiry_closure(wrapper, a);	\
}
SWIGINTERN int
SwigPyBuiltin_inquiry_closure(SwigPyWrapperFunction wrapper, PyObject *a) {
  PyObject *pyresult;
  int result;
  pyresult = wrapper(a, NULL);
  result = pyresult && PyObject_IsTrue(pyresult) ? 1 : 0;
  Py_XDECREF(pyresult);
  return result;
}

#define SWIGPY_GETITERFUNC_CLOSURE(wrapper)		\
SWIGINTERN PyObject *					\
wrapper##_getiterfunc_closure(PyObject *a) {		\
  return SwigPyBuiltin_getiterfunc_closure(wrapper, a);	\
}
SWIGINTERN PyObject *
SwigPyBuiltin_getiterfunc_closure(SwigPyWrapperFunction wrapper, PyObject *a) {
  return wrapper(a, NULL);
}

#define SWIGPY_BINARYFUNC_CLOSURE(wrapper)			\
SWIGINTERN PyObject *						\
wrapper##_binaryfunc_closure(PyObject *a, PyObject *b) {	\
  return SwigPyBuiltin_binaryfunc_closure(wrapper, a, b);	\
}
SWIGINTERN PyObject *
SwigPyBuiltin_binaryfunc_closure(SwigPyWrapperFunction wrapper, PyObject *a, PyObject *b) {
  PyObject *tuple, *result;
  tuple = PyTuple_New(1);
  assert(tuple);
  Py_INCREF(b);
  PyTuple_SET_ITEM(tuple, 0, b);
  result = wrapper(a, tuple);
  Py_DECREF(tuple);
  return result;
}

typedef ternaryfunc ternarycallfunc;

#define SWIGPY_TERNARYFUNC_CLOSURE(wrapper)				\
SWIGINTERN PyObject *							\
wrapper##_ternaryfunc_closure(PyObject *a, PyObject *b, PyObject *c) {	\
  return SwigPyBuiltin_ternaryfunc_closure(wrapper, a, b, c);		\
}
SWIGINTERN PyObject *
SwigPyBuiltin_ternaryfunc_closure(SwigPyWrapperFunction wrapper, PyObject *a, PyObject *b, PyObject *c) {
  PyObject *tuple, *result;
  tuple = PyTuple_New(2);
  assert(tuple);
  Py_INCREF(b);
  PyTuple_SET_ITEM(tuple, 0, b);
  Py_INCREF(c);
  PyTuple_SET_ITEM(tuple, 1, c);
  result = wrapper(a, tuple);
  Py_DECREF(tuple);
  return result;
}

#define SWIGPY_TERNARYCALLFUNC_CLOSURE(wrapper)					\
SWIGINTERN PyObject *								\
wrapper##_ternarycallfunc_closure(PyObject *a, PyObject *b, PyObject *c) {	\
  return SwigPyBuiltin_ternarycallfunc_closure(wrapper, a, b, c);		\
}
SWIGINTERN PyObject *
SwigPyBuiltin_ternarycallfunc_closure(SwigPyWrapperFunction wrapper, PyObject *a, PyObject *b, PyObject *c) {
  (void) c;
  return wrapper(a, b);
}

#define SWIGPY_LENFUNC_CLOSURE(wrapper)			\
SWIGINTERN Py_ssize_t					\
wrapper##_lenfunc_closure(PyObject *a) {		\
  return SwigPyBuiltin_lenfunc_closure(wrapper, a);	\
}
SWIGINTERN Py_ssize_t
SwigPyBuiltin_lenfunc_closure(SwigPyWrapperFunction wrapper, PyObject *a) {
  PyObject *resultobj;
  Py_ssize_t result;
  resultobj = wrapper(a, NULL);
  result = PyNumber_AsSsize_t(resultobj, NULL);
  Py_DECREF(resultobj);
  return result;
}

#define SWIGPY_SSIZESSIZEARGFUNC_CLOSURE(wrapper)				\
SWIGINTERN PyObject *								\
wrapper##_ssizessizeargfunc_closure(PyObject *a, Py_ssize_t b, Py_ssize_t c) {	\
  return SwigPyBuiltin_ssizessizeargfunc_closure(wrapper, a, b, c);		\
}
SWIGINTERN PyObject *
SwigPyBuiltin_ssizessizeargfunc_closure(SwigPyWrapperFunction wrapper, PyObject *a, Py_ssize_t b, Py_ssize_t c) {
  PyObject *tuple, *result;
  tuple = PyTuple_New(2);
  assert(tuple);
  PyTuple_SET_ITEM(tuple, 0, _PyLong_FromSsize_t(b));
  PyTuple_SET_ITEM(tuple, 1, _PyLong_FromSsize_t(c));
  result = wrapper(a, tuple);
  Py_DECREF(tuple);
  return result;
}

#define SWIGPY_SSIZESSIZEOBJARGPROC_CLOSURE(wrapper)						\
SWIGINTERN int											\
wrapper##_ssizessizeobjargproc_closure(PyObject *a, Py_ssize_t b, Py_ssize_t c, PyObject *d) {	\
  return SwigPyBuiltin_ssizessizeobjargproc_closure(wrapper, a, b, c, d);			\
}
SWIGINTERN int
SwigPyBuiltin_ssizessizeobjargproc_closure(SwigPyWrapperFunction wrapper, PyObject *a, Py_ssize_t b, Py_ssize_t c, PyObject *d) {
  PyObject *tuple, *resultobj;
  int result;
  tuple = PyTuple_New(d ? 3 : 2);
  assert(tuple);
  PyTuple_SET_ITEM(tuple, 0, _PyLong_FromSsize_t(b));
  PyTuple_SET_ITEM(tuple, 1, _PyLong_FromSsize_t(c));
  if (d) {
    Py_INCREF(d);
    PyTuple_SET_ITEM(tuple, 2, d);
  }
  resultobj = wrapper(a, tuple);
  result = resultobj ? 0 : -1;
  Py_DECREF(tuple);
  Py_XDECREF(resultobj);
  return result;
}

#define SWIGPY_SSIZEARGFUNC_CLOSURE(wrapper)				\
SWIGINTERN PyObject *							\
wrapper##_ssizeargfunc_closure(PyObject *a, Py_ssize_t b) {		\
  return SwigPyBuiltin_funpack_ssizeargfunc_closure(wrapper, a, b);	\
}
SWIGINTERN PyObject *
SwigPyBuiltin_funpack_ssizeargfunc_closure(SwigPyWrapperFunction wrapper, PyObject *a, Py_ssize_t b) {
  PyObject *tuple, *result;
  tuple = PyTuple_New(1);
  assert(tuple);
  PyTuple_SET_ITEM(tuple, 0, _PyLong_FromSsize_t(b));
  result = wrapper(a, tuple);
  Py_DECREF(tuple);
  return result;
}

#define SWIGPY_FUNPACK_SSIZEARGFUNC_CLOSURE(wrapper)			\
SWIGINTERN PyObject *							\
wrapper##_ssizeargfunc_closure(PyObject *a, Py_ssize_t b) {		\
  return SwigPyBuiltin_ssizeargfunc_closure(wrapper, a, b);		\
}
SWIGINTERN PyObject *
SwigPyBuiltin_ssizeargfunc_closure(SwigPyWrapperFunction wrapper, PyObject *a, Py_ssize_t b) {
  PyObject *arg, *result;
  arg = _PyLong_FromSsize_t(b);
  result = wrapper(a, arg);
  Py_DECREF(arg);
  return result;
}

#define SWIGPY_SSIZEOBJARGPROC_CLOSURE(wrapper)					\
SWIGINTERN int									\
wrapper##_ssizeobjargproc_closure(PyObject *a, Py_ssize_t b, PyObject *c) {	\
  return SwigPyBuiltin_ssizeobjargproc_closure(wrapper, a, b, c);		\
}
SWIGINTERN int
SwigPyBuiltin_ssizeobjargproc_closure(SwigPyWrapperFunction wrapper, PyObject *a, Py_ssize_t b, PyObject *c) {
  PyObject *tuple, *resultobj;
  int result;
  tuple = PyTuple_New(2);
  assert(tuple);
  PyTuple_SET_ITEM(tuple, 0, _PyLong_FromSsize_t(b));
  Py_INCREF(c);
  PyTuple_SET_ITEM(tuple, 1, c);
  resultobj = wrapper(a, tuple);
  result = resultobj ? 0 : -1;
  Py_XDECREF(resultobj);
  Py_DECREF(tuple);
  return result;
}

#define SWIGPY_OBJOBJPROC_CLOSURE(wrapper)			\
SWIGINTERN int							\
wrapper##_objobjproc_closure(PyObject *a, PyObject *b) {	\
  return SwigPyBuiltin_objobjproc_closure(wrapper, a, b);	\
}
SWIGINTERN int
SwigPyBuiltin_objobjproc_closure(SwigPyWrapperFunction wrapper, PyObject *a, PyObject *b) {
  int result;
  PyObject *pyresult;
  PyObject *tuple;
  tuple = PyTuple_New(1);
  assert(tuple);
  Py_INCREF(b);
  PyTuple_SET_ITEM(tuple, 0, b);
  pyresult = wrapper(a, tuple);
  result = pyresult ? (PyObject_IsTrue(pyresult) ? 1 : 0) : -1;
  Py_XDECREF(pyresult);
  Py_DECREF(tuple);
  return result;
}

#define SWIGPY_FUNPACK_OBJOBJPROC_CLOSURE(wrapper)			\
SWIGINTERN int								\
wrapper##_objobjproc_closure(PyObject *a, PyObject *b) {		\
  return SwigPyBuiltin_funpack_objobjproc_closure(wrapper, a, b);	\
}
SWIGINTERN int
SwigPyBuiltin_funpack_objobjproc_closure(SwigPyWrapperFunction wrapper, PyObject *a, PyObject *b) {
  int result;
  PyObject *pyresult;
  pyresult = wrapper(a, b);
  result = pyresult ? (PyObject_IsTrue(pyresult) ? 1 : 0) : -1;
  Py_XDECREF(pyresult);
  return result;
}

#define SWIGPY_OBJOBJARGPROC_CLOSURE(wrapper)					\
SWIGINTERN int									\
wrapper##_objobjargproc_closure(PyObject *a, PyObject *b, PyObject *c) {	\
  return SwigPyBuiltin_objobjargproc_closure(wrapper, a, b, c);			\
}
SWIGINTERN int
SwigPyBuiltin_objobjargproc_closure(SwigPyWrapperFunction wrapper, PyObject *a, PyObject *b, PyObject *c) {
  PyObject *tuple, *resultobj;
  int result;
  tuple = PyTuple_New(c ? 2 : 1);
  assert(tuple);
  Py_INCREF(b);
  PyTuple_SET_ITEM(tuple, 0, b);
  if (c) {
    Py_INCREF(c);
    PyTuple_SET_ITEM(tuple, 1, c);
  }
  resultobj = wrapper(a, tuple);
  result = resultobj ? 0 : -1;
  Py_XDECREF(resultobj);
  Py_DECREF(tuple);
  return result;
}

#define SWIGPY_REPRFUNC_CLOSURE(wrapper)		\
SWIGINTERN PyObject *					\
wrapper##_reprfunc_closure(PyObject *a) {		\
  return SwigPyBuiltin_reprfunc_closure(wrapper, a);	\
}
SWIGINTERN PyObject *
SwigPyBuiltin_reprfunc_closure(SwigPyWrapperFunction wrapper, PyObject *a) {
  return wrapper(a, NULL);
}

#define SWIGPY_HASHFUNC_CLOSURE(wrapper)		\
SWIGINTERN Py_hash_t					\
wrapper##_hashfunc_closure(PyObject *a) {		\
  return SwigPyBuiltin_hashfunc_closure(wrapper, a);	\
}
SWIGINTERN Py_hash_t
SwigPyBuiltin_hashfunc_closure(SwigPyWrapperFunction wrapper, PyObject *a) {
  PyObject *pyresult;
  Py_hash_t result;
  pyresult = wrapper(a, NULL);
  if (!pyresult)
    return -1;
  result = SWIG_PyNumber_AsPyHash(pyresult);
  Py_DECREF(pyresult);
  return result;
}

#define SWIGPY_ITERNEXTFUNC_CLOSURE(wrapper)		\
SWIGINTERN PyObject *					\
wrapper##_iternextfunc_closure(PyObject *a) {		\
  return SwigPyBuiltin_iternextfunc_closure(wrapper, a);\
}
SWIGINTERN PyObject *
SwigPyBuiltin_iternextfunc_closure(SwigPyWrapperFunction wrapper, PyObject *a) {
  return wrapper(a, NULL);
}

/* End of callback function macros for use in PyTypeObject */

#ifdef __cplusplus
}
#endif




#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



#ifdef __cplusplus
extern "C" {
#endif

/* Method creation and docstring support functions */

SWIGINTERN PyMethodDef *SWIG_PythonGetProxyDoc(const char *name);
SWIGINTERN PyObject *SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func);
SWIGINTERN PyObject *SWIG_PyStaticMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func);

#ifdef __cplusplus
}
#endif


  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); SWIG_fail;; } while(0) 


/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_SwigPyObject swig_types[0]
#define SWIGTYPE_p_allocator_type swig_types[1]
#define SWIGTYPE_p_char swig_types[2]
#define SWIGTYPE_p_difference_type swig_types[3]
#define SWIGTYPE_p_f_int_p_q_const__char_size_t_p_q_const__char_size_t__void swig_types[4]
#define SWIGTYPE_p_f_r_q_const__std__string__void swig_types[5]
#define SWIGTYPE_p_int swig_types[6]
#define SWIGTYPE_p_kkt_driver__classic_interface swig_types[7]
#define SWIGTYPE_p_long_long swig_types[8]
#define SWIGTYPE_p_p_PyObject swig_types[9]
#define SWIGTYPE_p_short swig_types[10]
#define SWIGTYPE_p_signed_char swig_types[11]
#define SWIGTYPE_p_size_type swig_types[12]
#define SWIGTYPE_p_std__allocatorT_unsigned_char_t swig_types[13]
#define SWIGTYPE_p_std__functionT_void_fstd__string_const_RF_t swig_types[14]
#define SWIGTYPE_p_std__invalid_argument swig_types[15]
#define SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t swig_types[16]
#define SWIGTYPE_p_swig__SwigPyIterator swig_types[17]
#define SWIGTYPE_p_unsigned_char swig_types[18]
#define SWIGTYPE_p_unsigned_int swig_types[19]
#define SWIGTYPE_p_unsigned_long_long swig_types[20]
#define SWIGTYPE_p_unsigned_short swig_types[21]
#define SWIGTYPE_p_value_type swig_types[22]
static swig_type_info *swig_types[24];
static swig_module_info swig_module = {swig_types, 23, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#ifdef SWIG_TypeQuery
# undef SWIG_TypeQuery
#endif
#define SWIG_TypeQuery SWIG_Python_TypeQuery

/*-----------------------------------------------
              @(target):= _fr_drv_ngx.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__fr_drv_ngx

#else
#  define SWIG_init    init_fr_drv_ngx

#endif
#define SWIG_name    "_fr_drv_ngx"

#define SWIGVERSION 0x040002 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(_obj);      
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        Py_XINCREF(_obj);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      SWIG_PYTHON_THREAD_END_BLOCK;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XDECREF(_obj);
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


#include <stddef.h>


#include <string>


#include <stdint.h>		// Use the C99 official header


#include <iostream>

#if PY_VERSION_HEX >= 0x03020000
# define SWIGPY_SLICE_ARG(obj) ((PyObject*) (obj))
#else
# define SWIGPY_SLICE_ARG(obj) ((PySliceObject*) (obj))
#endif


#include <typeinfo>
#include <stdexcept>


#if defined(__GNUC__)
#  if __GNUC__ == 2 && __GNUC_MINOR <= 96
#     define SWIG_STD_NOMODERN_STL
#  endif
#endif


namespace swig {
  struct stop_iteration {
  };

  struct SwigPyIterator {
  private:
    SwigPtr_PyObject _seq;

  protected:
    SwigPyIterator(PyObject *seq) : _seq(seq)
    {
    }
      
  public:
    virtual ~SwigPyIterator() {}

    // Access iterator method, required by Python
    virtual PyObject *value() const = 0;

    // Forward iterator method, required by Python
    virtual SwigPyIterator *incr(size_t n = 1) = 0;
    
    // Backward iterator method, very common in C++, but not required in Python
    virtual SwigPyIterator *decr(size_t /*n*/ = 1)
    {
      throw stop_iteration();
    }

    // Random access iterator methods, but not required in Python
    virtual ptrdiff_t distance(const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }

    virtual bool equal (const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }
    
    // C++ common/needed methods
    virtual SwigPyIterator *copy() const = 0;

    PyObject *next()     
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      PyObject *obj = value();
      incr();       
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads
      return obj;     
    }

    /* Make an alias for Python 3.x */
    PyObject *__next__()
    {
      return next();
    }

    PyObject *previous()
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      decr();
      PyObject *obj = value();
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads       
      return obj;
    }

    SwigPyIterator *advance(ptrdiff_t n)
    {
      return  (n > 0) ?  incr(n) : decr(-n);
    }
      
    bool operator == (const SwigPyIterator& x)  const
    {
      return equal(x);
    }
      
    bool operator != (const SwigPyIterator& x) const
    {
      return ! operator==(x);
    }
      
    SwigPyIterator& operator += (ptrdiff_t n)
    {
      return *advance(n);
    }

    SwigPyIterator& operator -= (ptrdiff_t n)
    {
      return *advance(-n);
    }
      
    SwigPyIterator* operator + (ptrdiff_t n) const
    {
      return copy()->advance(n);
    }

    SwigPyIterator* operator - (ptrdiff_t n) const
    {
      return copy()->advance(-n);
    }
      
    ptrdiff_t operator - (const SwigPyIterator& x) const
    {
      return x.distance(*this);
    }
      
    static swig_type_info* descriptor() {
      static int init = 0;
      static swig_type_info* desc = 0;
      if (!init) {
	desc = SWIG_TypeQuery("swig::SwigPyIterator *");
	init = 1;
      }	
      return desc;
    }    
  };

#if defined(SWIGPYTHON_BUILTIN)
  inline PyObject* make_output_iterator_builtin (PyObject *pyself)
  {
    Py_INCREF(pyself);
    return pyself;
  }
#endif
}


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
#if PY_VERSION_HEX < 0x03000000
  } else if (PyInt_Check(obj)) {
    if (val) *val = (double) PyInt_AsLong(obj);
    return SWIG_OK;
#endif
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else
#endif
  if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      return SWIG_OverflowError;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


#if defined(LLONG_MAX) && !defined(SWIG_LONG_LONG_AVAILABLE)
#  define SWIG_LONG_LONG_AVAILABLE
#endif


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERN int
SWIG_AsVal_unsigned_SS_long_SS_long (PyObject *obj, unsigned long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    unsigned long long v = PyLong_AsUnsignedLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      res = SWIG_OverflowError;
    }
  } else {
    unsigned long v;
    res = SWIG_AsVal_unsigned_SS_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && !SWIG_CanCastAsInteger(&d, 0, mant_max))
      return SWIG_OverflowError;
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, mant_max)) {
      if (val) *val = (unsigned long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}
#endif


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  int res = SWIG_TypeError;
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(size_t) <= sizeof(unsigned long)) {
#endif
    unsigned long v;
    res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else if (sizeof(size_t) <= sizeof(unsigned long long)) {
    unsigned long long v;
    res = SWIG_AsVal_unsigned_SS_long_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  }
#endif
  return res;
}


  #define SWIG_From_long   PyInt_FromLong 


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE PyObject* 
SWIG_From_long_SS_long  (long long value)
{
  return ((value < LONG_MIN) || (value > LONG_MAX)) ?
    PyLong_FromLongLong(value) : PyInt_FromLong(static_cast< long >(value));
}
#endif


SWIGINTERNINLINE PyObject *
SWIG_From_ptrdiff_t  (ptrdiff_t value)
{    
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(ptrdiff_t) <= sizeof(long)) {
#endif
    return SWIG_From_long  (static_cast< long >(value));
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else {
    /* assume sizeof(ptrdiff_t) <= sizeof(long long) */
    return SWIG_From_long_SS_long  (static_cast< long long >(value));
  }
#endif
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else
#endif
  if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      return SWIG_OverflowError;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERN int
SWIG_AsVal_long_SS_long (PyObject *obj, long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    long long v = PyLong_AsLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      res = SWIG_OverflowError;
    }
  } else {
    long v;
    res = SWIG_AsVal_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    const double mant_min = -mant_max;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && !SWIG_CanCastAsInteger(&d, mant_min, mant_max))
      return SWIG_OverflowError;
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, mant_min, mant_max)) {
      if (val) *val = (long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}
#endif


SWIGINTERNINLINE int
SWIG_AsVal_ptrdiff_t (PyObject * obj, ptrdiff_t *val)
{
  int res = SWIG_TypeError;
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(ptrdiff_t) <= sizeof(long)) {
#endif
    long v;
    res = SWIG_AsVal_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else if (sizeof(ptrdiff_t) <= sizeof(long long)) {
    long long v;
    res = SWIG_AsVal_long_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
  }
#endif
  return res;
}


#include <algorithm>


#include <vector>


#include <cstdint>


namespace swig {
  template <class Type>
  struct noconst_traits {
    typedef Type noconst_type;
  };

  template <class Type>
  struct noconst_traits<const Type> {
    typedef Type noconst_type;
  };

  /*
    type categories
  */
  struct pointer_category { };
  struct value_category { };

  /*
    General traits that provides type_name and type_info
  */
  template <class Type> struct traits { };

  template <class Type>
  inline const char* type_name() {
    return traits<typename noconst_traits<Type >::noconst_type >::type_name();
  }

  template <class Type> struct traits_info {
    static swig_type_info *type_query(std::string name) {
      name += " *";
      return SWIG_TypeQuery(name.c_str());
    }
    static swig_type_info *type_info() {
      static swig_type_info *info = type_query(type_name<Type>());
      return info;
    }
  };

  /*
    Partial specialization for pointers (traits_info)
  */
  template <class Type> struct traits_info<Type *> {
    static swig_type_info *type_query(std::string name) {
      name += " *";
      return SWIG_TypeQuery(name.c_str());
    }
    static swig_type_info *type_info() {
      static swig_type_info *info = type_query(type_name<Type>());
      return info;
    }
  };

  template <class Type>
  inline swig_type_info *type_info() {
    return traits_info<Type>::type_info();
  }

  /*
    Partial specialization for pointers (traits)
  */
  template <class Type> struct traits <Type *> {
    typedef pointer_category category;
    static std::string make_ptr_name(const char* name) {
      std::string ptrname = name;
      ptrname += " *";
      return ptrname;
    }
    static const char* type_name() {
      static std::string name = make_ptr_name(swig::type_name<Type>());
      return name.c_str();
    }
  };

  template <class Type, class Category>
  struct traits_as { };

  template <class Type, class Category>
  struct traits_check { };

}


namespace swig {  
  /*
    Traits that provides the from method
  */
  template <class Type> struct traits_from_ptr {
    static PyObject *from(Type *val, int owner = 0) {
      return SWIG_InternalNewPointerObj(val, type_info<Type>(), owner);
    }
  };

  template <class Type> struct traits_from {
    static PyObject *from(const Type& val) {
      return traits_from_ptr<Type>::from(new Type(val), 1);
    }
  };

  template <class Type> struct traits_from<Type *> {
    static PyObject *from(Type* val) {
      return traits_from_ptr<Type>::from(val, 0);
    }
  };

  template <class Type> struct traits_from<const Type *> {
    static PyObject *from(const Type* val) {
      return traits_from_ptr<Type>::from(const_cast<Type*>(val), 0);
    }
  };


  template <class Type>
  inline PyObject *from(const Type& val) {
    return traits_from<Type>::from(val);
  }

  template <class Type>
  inline PyObject *from_ptr(Type* val, int owner) {
    return traits_from_ptr<Type>::from(val, owner);
  }

  /*
    Traits that provides the asval/as/check method
  */
  template <class Type>
  struct traits_asptr {   
    static int asptr(PyObject *obj, Type **val) {
      int res = SWIG_ERROR;
      swig_type_info *descriptor = type_info<Type>();
      if (val) {
        Type *p = 0;
        int newmem = 0;
        res = descriptor ? SWIG_ConvertPtrAndOwn(obj, (void **)&p, descriptor, 0, &newmem) : SWIG_ERROR;
        if (SWIG_IsOK(res)) {
          if (newmem & SWIG_CAST_NEW_MEMORY) {
            res |= SWIG_NEWOBJMASK;
          }
          *val = p;
        }
      } else {
        res = descriptor ? SWIG_ConvertPtr(obj, 0, descriptor, 0) : SWIG_ERROR;
      }
      return res;
    }
  }; 

  template <class Type>
  inline int asptr(PyObject *obj, Type **vptr) {
    return traits_asptr<Type>::asptr(obj, vptr);
  }

  template <class Type> 
  struct traits_asval {
    static int asval(PyObject *obj, Type *val) {
      if (val) {
	Type *p = 0;
	int res = traits_asptr<Type>::asptr(obj, &p);
	if (!SWIG_IsOK(res)) return res;	
	if (p) {
	  typedef typename noconst_traits<Type>::noconst_type noconst_type;
	  *(const_cast<noconst_type*>(val)) = *p;
	  if (SWIG_IsNewObj(res)){
	    delete p;
	    res = SWIG_DelNewMask(res);
	  }
	  return res;
	} else {
	  return SWIG_ERROR;
	}
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };

  template <class Type> struct traits_asval<Type*> {
    static int asval(PyObject *obj, Type **val) {
      if (val) {
        typedef typename noconst_traits<Type>::noconst_type noconst_type;
        noconst_type *p = 0;
        int res = traits_asptr<noconst_type>::asptr(obj,  &p);
        if (SWIG_IsOK(res)) {
          *(const_cast<noconst_type**>(val)) = p;
	}
	return res;
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };
  
  template <class Type>
  inline int asval(PyObject *obj, Type *val) {
    return traits_asval<Type>::asval(obj, val);
  }

  template <class Type> 
  struct traits_as<Type, value_category> {
    static Type as(PyObject *obj) {
      Type v;
      int res = asval(obj, &v);
      if (!obj || !SWIG_IsOK(res)) {
	if (!PyErr_Occurred()) {
	  ::SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	throw std::invalid_argument("bad type");
      }
      return v;
    }
  };

  template <class Type> 
  struct traits_as<Type, pointer_category> {
    static Type as(PyObject *obj) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res) && v) {
	if (SWIG_IsNewObj(res)) {
	  Type r(*v);
	  delete v;
	  return r;
	} else {
	  return *v;
	}
      } else {
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	throw std::invalid_argument("bad type");
      }
    }
  };

  template <class Type> 
  struct traits_as<Type*, pointer_category> {
    static Type* as(PyObject *obj) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res)) {
	return v;
      } else {
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	throw std::invalid_argument("bad type");
      }
    }
  };
    
  template <class Type>
  inline Type as(PyObject *obj) {
    return traits_as<Type, typename traits<Type>::category>::as(obj);
  }

  template <class Type> 
  struct traits_check<Type, value_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asval(obj, (Type *)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type> 
  struct traits_check<Type, pointer_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asptr(obj, (Type **)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type>
  inline bool check(PyObject *obj) {
    return traits_check<Type, typename traits<Type>::category>::check(obj);
  }
}


#include <functional>

namespace std {
  template <>
  struct less <PyObject *>
  {
    bool
    operator()(PyObject * v, PyObject *w) const
    { 
      bool res;
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      res = PyObject_RichCompareBool(v, w, Py_LT) ? true : false;
      /* This may fall into a case of inconsistent
               eg. ObjA > ObjX > ObjB
               but ObjA < ObjB
      */
      if( PyErr_Occurred() && PyErr_ExceptionMatches(PyExc_TypeError) )
      {
        /* Objects can't be compared, this mostly occurred in Python 3.0 */
        /* Compare their ptr directly for a workaround */
        res = (v < w);
        PyErr_Clear();
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
      return res;
    }
  };

  template <>
  struct less <swig::SwigPtr_PyObject>
  {
    bool
    operator()(const swig::SwigPtr_PyObject& v, const swig::SwigPtr_PyObject& w) const
    {
      return std::less<PyObject *>()(v, w);
    }
  };

  template <>
  struct less <swig::SwigVar_PyObject>
  {
    bool
    operator()(const swig::SwigVar_PyObject& v, const swig::SwigVar_PyObject& w) const
    {
      return std::less<PyObject *>()(v, w);
    }
  };

}

namespace swig {
  template <> struct traits<PyObject *> {
    typedef value_category category;
    static const char* type_name() { return "PyObject *"; }
  };  

  template <>  struct traits_asval<PyObject * > {   
    typedef PyObject * value_type;
    static int asval(PyObject *obj, value_type *val) {
      if (val) *val = obj;
      return SWIG_OK;
    }
  };

  template <> 
  struct traits_check<PyObject *, value_category> {
    static bool check(PyObject *) {
      return true;
    }
  };

  template <>  struct traits_from<PyObject *> {
    typedef PyObject * value_type;
    static PyObject *from(const value_type& val) {
      Py_XINCREF(val);
      return val;
    }
  };
  
}

namespace swig {
  template <class Difference>
  inline size_t
  check_index(Difference i, size_t size, bool insert = false) {
    if ( i < 0 ) {
      if ((size_t) (-i) <= size)
	return (size_t) (i + size);
    } else if ( (size_t) i < size ) {
      return (size_t) i;
    } else if (insert && ((size_t) i == size)) {
      return size;
    }
    throw std::out_of_range("index out of range");
  }

  template <class Difference>
  void
  slice_adjust(Difference i, Difference j, Py_ssize_t step, size_t size, Difference &ii, Difference &jj, bool insert = false) {
    if (step == 0) {
      throw std::invalid_argument("slice step cannot be zero");
    } else if (step > 0) {
      // Required range: 0 <= i < size, 0 <= j < size, i <= j
      if (i < 0) {
        ii = 0;
      } else if (i < (Difference)size) {
        ii = i;
      } else if (insert && (i >= (Difference)size)) {
        ii = (Difference)size;
      }
      if (j < 0) {
        jj = 0;
      } else {
        jj = (j < (Difference)size) ? j : (Difference)size;
      }
      if (jj < ii)
        jj = ii;
    } else {
      // Required range: -1 <= i < size-1, -1 <= j < size-1, i >= j
      if (i < -1) {
        ii = -1;
      } else if (i < (Difference) size) {
        ii = i;
      } else if (i >= (Difference)(size-1)) {
        ii = (Difference)(size-1);
      }
      if (j < -1) {
        jj = -1;
      } else {
        jj = (j < (Difference)size ) ? j : (Difference)(size-1);
      }
      if (ii < jj)
        ii = jj;
    }
  }

  template <class Sequence, class Difference>
  inline typename Sequence::iterator
  getpos(Sequence* self, Difference i)  {
    typename Sequence::iterator pos = self->begin();
    std::advance(pos, check_index(i,self->size()));
    return pos;
  }

  template <class Sequence, class Difference>
  inline typename Sequence::const_iterator
  cgetpos(const Sequence* self, Difference i)  {
    typename Sequence::const_iterator pos = self->begin();
    std::advance(pos, check_index(i,self->size()));
    return pos;
  }

  template <class Sequence>
  inline void
  erase(Sequence* seq, const typename Sequence::iterator& position) {
    seq->erase(position);
  }

  template <class Sequence>
  struct traits_reserve {
    static void reserve(Sequence & /*seq*/, typename Sequence::size_type /*n*/) {
      // This should be specialized for types that support reserve
    }
  };

  template <class Sequence, class Difference>
  inline Sequence*
  getslice(const Sequence* self, Difference i, Difference j, Py_ssize_t step) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj);

    if (step > 0) {
      typename Sequence::const_iterator sb = self->begin();
      typename Sequence::const_iterator se = self->begin();
      std::advance(sb,ii);
      std::advance(se,jj);
      if (step == 1) {
        return new Sequence(sb, se);
      } else {
        Sequence *sequence = new Sequence();
        swig::traits_reserve<Sequence>::reserve(*sequence, (jj - ii + step - 1) / step);
        typename Sequence::const_iterator it = sb;
        while (it!=se) {
          sequence->push_back(*it);
          for (Py_ssize_t c=0; c<step && it!=se; ++c)
            it++;
        }
        return sequence;
      } 
    } else {
      Sequence *sequence = new Sequence();
      swig::traits_reserve<Sequence>::reserve(*sequence, (ii - jj - step - 1) / -step);
      typename Sequence::const_reverse_iterator sb = self->rbegin();
      typename Sequence::const_reverse_iterator se = self->rbegin();
      std::advance(sb,size-ii-1);
      std::advance(se,size-jj-1);
      typename Sequence::const_reverse_iterator it = sb;
      while (it!=se) {
        sequence->push_back(*it);
        for (Py_ssize_t c=0; c<-step && it!=se; ++c)
          it++;
      }
      return sequence;
    }
  }

  template <class Sequence, class Difference, class InputSeq>
  inline void
  setslice(Sequence* self, Difference i, Difference j, Py_ssize_t step, const InputSeq& is = InputSeq()) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj, true);
    if (step > 0) {
      if (step == 1) {
        size_t ssize = jj - ii;
        if (ssize <= is.size()) {
          // expanding/staying the same size
          swig::traits_reserve<Sequence>::reserve(*self, self->size() - ssize + is.size());
          typename Sequence::iterator sb = self->begin();
          typename InputSeq::const_iterator isit = is.begin();
          std::advance(sb,ii);
          std::advance(isit, jj - ii);
          self->insert(std::copy(is.begin(), isit, sb), isit, is.end());
        } else {
          // shrinking
          typename Sequence::iterator sb = self->begin();
          typename Sequence::iterator se = self->begin();
          std::advance(sb,ii);
          std::advance(se,jj);
          self->erase(sb,se);
          sb = self->begin();
          std::advance(sb,ii);
          self->insert(sb, is.begin(), is.end());
        }
      } else {
        size_t replacecount = (jj - ii + step - 1) / step;
        if (is.size() != replacecount) {
          char msg[1024];
          sprintf(msg, "attempt to assign sequence of size %lu to extended slice of size %lu", (unsigned long)is.size(), (unsigned long)replacecount);
          throw std::invalid_argument(msg);
        }
        typename Sequence::const_iterator isit = is.begin();
        typename Sequence::iterator it = self->begin();
        std::advance(it,ii);
        for (size_t rc=0; rc<replacecount && it != self->end(); ++rc) {
          *it++ = *isit++;
          for (Py_ssize_t c=0; c<(step-1) && it != self->end(); ++c)
            it++;
        }
      }
    } else {
      size_t replacecount = (ii - jj - step - 1) / -step;
      if (is.size() != replacecount) {
        char msg[1024];
        sprintf(msg, "attempt to assign sequence of size %lu to extended slice of size %lu", (unsigned long)is.size(), (unsigned long)replacecount);
        throw std::invalid_argument(msg);
      }
      typename Sequence::const_iterator isit = is.begin();
      typename Sequence::reverse_iterator it = self->rbegin();
      std::advance(it,size-ii-1);
      for (size_t rc=0; rc<replacecount && it != self->rend(); ++rc) {
        *it++ = *isit++;
        for (Py_ssize_t c=0; c<(-step-1) && it != self->rend(); ++c)
          it++;
      }
    }
  }

  template <class Sequence, class Difference>
  inline void
  delslice(Sequence* self, Difference i, Difference j, Py_ssize_t step) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj, true);
    if (step > 0) {
      typename Sequence::iterator sb = self->begin();
      std::advance(sb,ii);
      if (step == 1) {
        typename Sequence::iterator se = self->begin();
        std::advance(se,jj);
        self->erase(sb,se);
      } else {
        typename Sequence::iterator it = sb;
        size_t delcount = (jj - ii + step - 1) / step;
        while (delcount) {
          it = self->erase(it);
          for (Py_ssize_t c=0; c<(step-1) && it != self->end(); ++c)
            it++;
          delcount--;
        }
      }
    } else {
      typename Sequence::reverse_iterator sb = self->rbegin();
      std::advance(sb,size-ii-1);
      typename Sequence::reverse_iterator it = sb;
      size_t delcount = (ii - jj - step - 1) / -step;
      while (delcount) {
        it = typename Sequence::reverse_iterator(self->erase((++it).base()));
        for (Py_ssize_t c=0; c<(-step-1) && it != self->rend(); ++c)
          it++;
        delcount--;
      }
    }
  }
}


#if defined(__SUNPRO_CC) && defined(_RWSTD_VER)
#  if !defined(SWIG_NO_STD_NOITERATOR_TRAITS_STL)
#    define SWIG_STD_NOITERATOR_TRAITS_STL
#  endif
#endif

#if !defined(SWIG_STD_NOITERATOR_TRAITS_STL)
#include <iterator>
#else
namespace std {
  template <class Iterator>
  struct iterator_traits {
    typedef ptrdiff_t difference_type;
    typedef typename Iterator::value_type value_type;
  };

  template <class Iterator, class Category,class T, class Reference, class Pointer, class Distance>
  struct iterator_traits<__reverse_bi_iterator<Iterator,Category,T,Reference,Pointer,Distance> > {
    typedef Distance difference_type;
    typedef T value_type;
  };

  template <class T>
  struct iterator_traits<T*> {
    typedef T value_type;
    typedef ptrdiff_t difference_type;
  };

  template<typename _InputIterator>
  inline typename iterator_traits<_InputIterator>::difference_type
  distance(_InputIterator __first, _InputIterator __last)
  {
    typename iterator_traits<_InputIterator>::difference_type __n = 0;
    while (__first != __last) {
      ++__first; ++__n;
    }
    return __n;
  }
}
#endif


namespace swig {
  template<typename OutIterator>
  class SwigPyIterator_T :  public SwigPyIterator
  {
  public:
    typedef OutIterator out_iterator;
    typedef typename std::iterator_traits<out_iterator>::value_type value_type;    
    typedef SwigPyIterator_T<out_iterator> self_type;

    SwigPyIterator_T(out_iterator curr, PyObject *seq)
      : SwigPyIterator(seq), current(curr)
    {
    }

    const out_iterator& get_current() const
    {
      return current;
    }

    
    bool equal (const SwigPyIterator &iter) const
    {
      const self_type *iters = dynamic_cast<const self_type *>(&iter);
      if (iters) {
	return (current == iters->get_current());
      } else {
	throw std::invalid_argument("bad iterator type");
      }
    }
    
    ptrdiff_t distance(const SwigPyIterator &iter) const
    {
      const self_type *iters = dynamic_cast<const self_type *>(&iter);
      if (iters) {
	return std::distance(current, iters->get_current());
      } else {
	throw std::invalid_argument("bad iterator type");
      }
    }    
    
  protected:
    out_iterator current;
  };
  
  template <class ValueType>
  struct from_oper 
  {
    typedef const ValueType& argument_type;
    typedef PyObject *result_type;
    result_type operator()(argument_type v) const
    {
      return swig::from(v);
    }
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyForwardIteratorOpen_T :  public SwigPyIterator_T<OutIterator>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;
    typedef SwigPyForwardIteratorOpen_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyForwardIteratorOpen_T(out_iterator curr, PyObject *seq)
      : SwigPyIterator_T<OutIterator>(curr, seq)
    {
    }
    
    PyObject *value() const {
      return from(static_cast<const value_type&>(*(base::current)));
    }
    
    SwigPyIterator *copy() const
    {
      return new self_type(*this);
    }

    SwigPyIterator *incr(size_t n = 1)
    {
      while (n--) {
	++base::current;
      }
      return this;
    }

  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyIteratorOpen_T :  public SwigPyForwardIteratorOpen_T<OutIterator, ValueType, FromOper>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;
    typedef SwigPyIteratorOpen_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyIteratorOpen_T(out_iterator curr, PyObject *seq)
      : SwigPyForwardIteratorOpen_T<OutIterator>(curr, seq)
    {
    }

    SwigPyIterator *decr(size_t n = 1)
    {
      while (n--) {
	--base::current;
      }
      return this;
    }
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyForwardIteratorClosed_T :  public SwigPyIterator_T<OutIterator>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;    
    typedef SwigPyForwardIteratorClosed_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyForwardIteratorClosed_T(out_iterator curr, out_iterator first, out_iterator last, PyObject *seq)
      : SwigPyIterator_T<OutIterator>(curr, seq), begin(first), end(last)
    {
    }
    
    PyObject *value() const {
      if (base::current == end) {
	throw stop_iteration();
      } else {
	return from(static_cast<const value_type&>(*(base::current)));
      }
    }
    
    SwigPyIterator *copy() const
    {
      return new self_type(*this);
    }

    SwigPyIterator *incr(size_t n = 1)
    {
      while (n--) {
	if (base::current == end) {
	  throw stop_iteration();
	} else {
	  ++base::current;
	}
      }
      return this;
    }

  protected:
    out_iterator begin;
    out_iterator end;
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyIteratorClosed_T :  public SwigPyForwardIteratorClosed_T<OutIterator,ValueType,FromOper>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;
    typedef SwigPyForwardIteratorClosed_T<OutIterator, ValueType, FromOper> base0;
    typedef SwigPyIteratorClosed_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyIteratorClosed_T(out_iterator curr, out_iterator first, out_iterator last, PyObject *seq)
      : SwigPyForwardIteratorClosed_T<OutIterator,ValueType,FromOper>(curr, first, last, seq)
    {
    }

    SwigPyIterator *decr(size_t n = 1)
    {
      while (n--) {
	if (base::current == base0::begin) {
	  throw stop_iteration();
	} else {
	  --base::current;
	}
      }
      return this;
    }
  };


  template<typename OutIter>
  inline SwigPyIterator*
  make_output_forward_iterator(const OutIter& current, const OutIter& begin,const OutIter& end, PyObject *seq = 0)
  {
    return new SwigPyForwardIteratorClosed_T<OutIter>(current, begin, end, seq);
  }

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_iterator(const OutIter& current, const OutIter& begin,const OutIter& end, PyObject *seq = 0)
  {
    return new SwigPyIteratorClosed_T<OutIter>(current, begin, end, seq);
  }

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_forward_iterator(const OutIter& current, PyObject *seq = 0)
  {
    return new SwigPyForwardIteratorOpen_T<OutIter>(current, seq);
  }

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_iterator(const OutIter& current, PyObject *seq = 0)
  {
    return new SwigPyIteratorOpen_T<OutIter>(current, seq);
  }

}


namespace swig
{
  template <class T>
  struct SwigPySequence_Ref
  {
    SwigPySequence_Ref(PyObject* seq, Py_ssize_t index)
      : _seq(seq), _index(index)
    {
    }
    
    operator T () const
    {
      swig::SwigVar_PyObject item = PySequence_GetItem(_seq, _index);
      try {
	return swig::as<T>(item);
      } catch (const std::invalid_argument& e) {
	char msg[1024];
	sprintf(msg, "in sequence element %d ", (int)_index);
	if (!PyErr_Occurred()) {
	  ::SWIG_Error(SWIG_TypeError,  swig::type_name<T>());
	}
	SWIG_Python_AddErrorMsg(msg);
	SWIG_Python_AddErrorMsg(e.what());
	throw;
      }
    }

    SwigPySequence_Ref& operator=(const T& v)
    {
      PySequence_SetItem(_seq, _index, swig::from<T>(v));
      return *this;
    }

  private:
    PyObject* _seq;
    Py_ssize_t _index;
  };

  template <class T>
  struct SwigPySequence_ArrowProxy
  {
    SwigPySequence_ArrowProxy(const T& x): m_value(x) {}
    const T* operator->() const { return &m_value; }
    operator const T*() const { return &m_value; }
    T m_value;
  };

  template <class T, class Reference >
  struct SwigPySequence_InputIterator
  {
    typedef SwigPySequence_InputIterator<T, Reference > self;

    typedef std::random_access_iterator_tag iterator_category;
    typedef Reference reference;
    typedef T value_type;
    typedef T* pointer;
    typedef Py_ssize_t difference_type;

    SwigPySequence_InputIterator()
    {
    }

    SwigPySequence_InputIterator(PyObject* seq, Py_ssize_t index)
      : _seq(seq), _index(index)
    {
    }

    reference operator*() const
    {
      return reference(_seq, _index);
    }

    SwigPySequence_ArrowProxy<T>
    operator->() const {
      return SwigPySequence_ArrowProxy<T>(operator*());
    }

    bool operator==(const self& ri) const
    {
      return (_index == ri._index) && (_seq == ri._seq);
    }

    bool operator!=(const self& ri) const
    {
      return !(operator==(ri));
    }

    self& operator ++ ()
    {
      ++_index;
      return *this;
    }

    self& operator -- ()
    {
      --_index;
      return *this;
    }

    self& operator += (difference_type n)
    {
      _index += n;
      return *this;
    }

    self operator +(difference_type n) const
    {
      return self(_seq, _index + n);
    }

    self& operator -= (difference_type n)
    {
      _index -= n;
      return *this;
    }

    self operator -(difference_type n) const
    {
      return self(_seq, _index - n);
    }

    difference_type operator - (const self& ri) const
    {
      return _index - ri._index;
    }

    bool operator < (const self& ri) const
    {
      return _index < ri._index;
    }

    reference
    operator[](difference_type n) const
    {
      return reference(_seq, _index + n);
    }

  private:
    PyObject* _seq;
    difference_type _index;
  };

  // STL container wrapper around a Python sequence
  template <class T>
  struct SwigPySequence_Cont
  {
    typedef SwigPySequence_Ref<T> reference;
    typedef const SwigPySequence_Ref<T> const_reference;
    typedef T value_type;
    typedef T* pointer;
    typedef Py_ssize_t difference_type;
    typedef size_t size_type;
    typedef const pointer const_pointer;
    typedef SwigPySequence_InputIterator<T, reference> iterator;
    typedef SwigPySequence_InputIterator<T, const_reference> const_iterator;

    SwigPySequence_Cont(PyObject* seq) : _seq(0)
    {
      if (!PySequence_Check(seq)) {
	throw std::invalid_argument("a sequence is expected");
      }
      _seq = seq;
      Py_INCREF(_seq);
    }

    ~SwigPySequence_Cont()
    {
      Py_XDECREF(_seq);
    }

    size_type size() const
    {
      return static_cast<size_type>(PySequence_Size(_seq));
    }

    bool empty() const
    {
      return size() == 0;
    }

    iterator begin()
    {
      return iterator(_seq, 0);
    }

    const_iterator begin() const
    {
      return const_iterator(_seq, 0);
    }

    iterator end()
    {
      return iterator(_seq, size());
    }

    const_iterator end() const
    {
      return const_iterator(_seq, size());
    }

    reference operator[](difference_type n)
    {
      return reference(_seq, n);
    }

    const_reference operator[](difference_type n)  const
    {
      return const_reference(_seq, n);
    }

    bool check() const
    {
      Py_ssize_t s = size();
      for (Py_ssize_t i = 0; i < s; ++i) {
	swig::SwigVar_PyObject item = PySequence_GetItem(_seq, i);
	if (!swig::check<value_type>(item))
	  return false;
      }
      return true;
    }

  private:
    PyObject* _seq;
  };

}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_char (PyObject * obj, unsigned char *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UCHAR_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned char >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyInt_FromLong(static_cast< long >(value));
}


SWIGINTERNINLINE PyObject *
SWIG_From_unsigned_SS_char  (unsigned char value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}


namespace swig {
  template <> struct traits< unsigned char > {
    typedef value_category category;
    static const char* type_name() { return"unsigned char"; }
  };
  template <>  struct traits_asval< unsigned char > {
    typedef unsigned char value_type;
    static int asval(PyObject *obj, value_type *val) {
      return SWIG_AsVal_unsigned_SS_char (obj, val);
    }
  };
  template <>  struct traits_from< unsigned char > {
    typedef unsigned char value_type;
    static PyObject *from(const value_type& val) {
      return SWIG_From_unsigned_SS_char  (val);
    }
  };
}


namespace swig {
  template <class SwigPySeq, class Seq>
  inline void
  assign(const SwigPySeq& swigpyseq, Seq* seq) {
    // seq->assign(swigpyseq.begin(), swigpyseq.end()); // not used as not always implemented
    typedef typename SwigPySeq::value_type value_type;
    typename SwigPySeq::const_iterator it = swigpyseq.begin();
    for (;it != swigpyseq.end(); ++it) {
      seq->insert(seq->end(),(value_type)(*it));
    }
  }

  template <class Seq, class T = typename Seq::value_type >
  struct traits_asptr_stdseq {
    typedef Seq sequence;
    typedef T value_type;

    static int asptr(PyObject *obj, sequence **seq) {
      if (obj == Py_None || SWIG_Python_GetSwigThis(obj)) {
	sequence *p;
	swig_type_info *descriptor = swig::type_info<sequence>();
	if (descriptor && SWIG_IsOK(::SWIG_ConvertPtr(obj, (void **)&p, descriptor, 0))) {
	  if (seq) *seq = p;
	  return SWIG_OLDOBJ;
	}
      } else if (PySequence_Check(obj)) {
	try {
	  SwigPySequence_Cont<value_type> swigpyseq(obj);
	  if (seq) {
	    sequence *pseq = new sequence();
	    assign(swigpyseq, pseq);
	    *seq = pseq;
	    return SWIG_NEWOBJ;
	  } else {
	    return swigpyseq.check() ? SWIG_OK : SWIG_ERROR;
	  }
	} catch (std::exception& e) {
	  if (seq) {
	    if (!PyErr_Occurred()) {
	      PyErr_SetString(PyExc_TypeError, e.what());
	    }
	  }
	  return SWIG_ERROR;
	}
      }
      return SWIG_ERROR;
    }
  };

  template <class Seq, class T = typename Seq::value_type >
  struct traits_from_stdseq {
    typedef Seq sequence;
    typedef T value_type;
    typedef typename Seq::size_type size_type;
    typedef typename sequence::const_iterator const_iterator;

    static PyObject *from(const sequence& seq) {
#ifdef SWIG_PYTHON_EXTRA_NATIVE_CONTAINERS
      swig_type_info *desc = swig::type_info<sequence>();
      if (desc && desc->clientdata) {
	return SWIG_InternalNewPointerObj(new sequence(seq), desc, SWIG_POINTER_OWN);
      }
#endif
      size_type size = seq.size();
      if (size <= (size_type)INT_MAX) {
	PyObject *obj = PyTuple_New((Py_ssize_t)size);
	Py_ssize_t i = 0;
	for (const_iterator it = seq.begin(); it != seq.end(); ++it, ++i) {
	  PyTuple_SetItem(obj,i,swig::from<value_type>(*it));
	}
	return obj;
      } else {
	PyErr_SetString(PyExc_OverflowError,"sequence size not valid in python");
	return NULL;
      }
    }
  };
}


  namespace swig {
    template <class T>
    struct traits_reserve<std::vector<T> > {
      static void reserve(std::vector<T> &seq, typename std::vector<T>::size_type n) {
        seq.reserve(n);
      }
    };

    template <class T>
    struct traits_asptr<std::vector<T> >  {
      static int asptr(PyObject *obj, std::vector<T> **vec) {
	return traits_asptr_stdseq<std::vector<T> >::asptr(obj, vec);
      }
    };
    
    template <class T>
    struct traits_from<std::vector<T> > {
      static PyObject *from(const std::vector<T>& vec) {
	return traits_from_stdseq<std::vector<T> >::from(vec);
      }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector< unsigned char, std::allocator< unsigned char > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "unsigned char" "," "std::allocator< unsigned char >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_uint8_t_Sg__iterator(std::vector< uint8_t > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_uint8_t_Sg____nonzero__(std::vector< uint8_t > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_uint8_t_Sg____bool__(std::vector< uint8_t > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< unsigned char >::size_type std_vector_Sl_uint8_t_Sg____len__(std::vector< uint8_t > const *self){
      return self->size();
    }

#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long_SS_long  (unsigned long long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLongLong(value) : PyInt_FromLong(static_cast< long >(value));
}
#endif


SWIGINTERNINLINE PyObject *
SWIG_From_size_t  (size_t value)
{    
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(size_t) <= sizeof(unsigned long)) {
#endif
    return SWIG_From_unsigned_SS_long  (static_cast< unsigned long >(value));
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else {
    /* assume sizeof(size_t) <= sizeof(unsigned long long) */
    return SWIG_From_unsigned_SS_long_SS_long  (static_cast< unsigned long long >(value));
  }
#endif
}

SWIGINTERN std::vector< unsigned char,std::allocator< unsigned char > > *std_vector_Sl_uint8_t_Sg____getslice__(std::vector< uint8_t > *self,std::vector< unsigned char >::difference_type i,std::vector< unsigned char >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_uint8_t_Sg____setslice____SWIG_0(std::vector< uint8_t > *self,std::vector< unsigned char >::difference_type i,std::vector< unsigned char >::difference_type j){
      swig::setslice(self, i, j, 1, std::vector< unsigned char,std::allocator< unsigned char > >());
    }
SWIGINTERN void std_vector_Sl_uint8_t_Sg____setslice____SWIG_1(std::vector< uint8_t > *self,std::vector< unsigned char >::difference_type i,std::vector< unsigned char >::difference_type j,std::vector< unsigned char,std::allocator< unsigned char > > const &v){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_uint8_t_Sg____delslice__(std::vector< uint8_t > *self,std::vector< unsigned char >::difference_type i,std::vector< unsigned char >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_uint8_t_Sg____delitem____SWIG_0(std::vector< uint8_t > *self,std::vector< unsigned char >::difference_type i){
      swig::erase(self, swig::getpos(self, i));
    }
SWIGINTERN std::vector< unsigned char,std::allocator< unsigned char > > *std_vector_Sl_uint8_t_Sg____getitem____SWIG_0(std::vector< uint8_t > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< unsigned char,std::allocator< unsigned char > >::difference_type id = i;
      std::vector< unsigned char,std::allocator< unsigned char > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_uint8_t_Sg____setitem____SWIG_0(std::vector< uint8_t > *self,PySliceObject *slice,std::vector< unsigned char,std::allocator< unsigned char > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< unsigned char,std::allocator< unsigned char > >::difference_type id = i;
      std::vector< unsigned char,std::allocator< unsigned char > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_uint8_t_Sg____setitem____SWIG_1(std::vector< uint8_t > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< unsigned char,std::allocator< unsigned char > >::difference_type id = i;
      std::vector< unsigned char,std::allocator< unsigned char > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_uint8_t_Sg____delitem____SWIG_1(std::vector< uint8_t > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector< unsigned char,std::allocator< unsigned char > >::difference_type id = i;
      std::vector< unsigned char,std::allocator< unsigned char > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< unsigned char >::value_type const &std_vector_Sl_uint8_t_Sg____getitem____SWIG_1(std::vector< uint8_t > const *self,std::vector< unsigned char >::difference_type i){
      return *(swig::cgetpos(self, i));
    }

namespace swig {
  static PyObject* container_owner_attribute() {
    static PyObject* attr = SWIG_Python_str_FromChar("__swig_container");
    return attr;
  }

  template <typename T>
  struct container_owner {
    // By default, do not add the back-reference (for value types)
    // Specialization below will check the reference for pointer types.
    static bool back_reference(PyObject* /*child*/, PyObject* /*owner*/) {
      return false;
    }
  };

  template <>
  struct container_owner<swig::pointer_category> {  
    /*
     * Call to add a back-reference to the owning object when returning a 
     * reference from a container.  Will only set the reference if child
     * is a SWIG wrapper object that does not own the pointer.
     *
     * returns whether the reference was set or not
     */
    static bool back_reference(PyObject* child, PyObject* owner) {
      SwigPyObject* swigThis = SWIG_Python_GetSwigThis(child);
      if (swigThis && (swigThis->own & SWIG_POINTER_OWN) != SWIG_POINTER_OWN) {
        return PyObject_SetAttr(child, container_owner_attribute(), owner) != -1;
      }
      return false;
    }
  };
}

SWIGINTERN void std_vector_Sl_uint8_t_Sg____setitem____SWIG_2(std::vector< uint8_t > *self,std::vector< unsigned char >::difference_type i,std::vector< unsigned char >::value_type const &x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN void std_vector_Sl_uint8_t_Sg____setitem____SWIG_3(std::vector< uint8_t > *self,std::vector< unsigned char >::difference_type i){
      swig::erase(self, swig::getpos(self, i));
    }
SWIGINTERN std::vector< unsigned char >::value_type std_vector_Sl_uint8_t_Sg__pop(std::vector< uint8_t > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector< unsigned char,std::allocator< unsigned char > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN void std_vector_Sl_uint8_t_Sg__append(std::vector< uint8_t > *self,std::vector< unsigned char >::value_type const &x){
      self->push_back(x);
    }
SWIGINTERN std::vector< unsigned char >::iterator std_vector_Sl_uint8_t_Sg__erase__SWIG_0(std::vector< uint8_t > *self,std::vector< unsigned char >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< unsigned char >::iterator std_vector_Sl_uint8_t_Sg__erase__SWIG_1(std::vector< uint8_t > *self,std::vector< unsigned char >::iterator first,std::vector< unsigned char >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< unsigned char >::iterator std_vector_Sl_uint8_t_Sg__insert__SWIG_0(std::vector< uint8_t > *self,std::vector< unsigned char >::iterator pos,std::vector< unsigned char >::value_type const &x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_uint8_t_Sg__insert__SWIG_1(std::vector< uint8_t > *self,std::vector< unsigned char >::iterator pos,std::vector< unsigned char >::size_type n,std::vector< unsigned char >::value_type const &x){ self->insert(pos, n, x); }

#include <classic_api.h>
#include <chrono>



#include <datetime.h>


#define kkt_driver_classic_interface_ActivizationControlByte_get(self_) self_->Get_ActivizationControlByte()
#define kkt_driver_classic_interface_ActivizationControlByte_set(self_, val_) self_->Set_ActivizationControlByte(val_)
  

#define kkt_driver_classic_interface_ActivizationStatus_get(self_) self_->Get_ActivizationStatus()
#define kkt_driver_classic_interface_ActivizationStatus_set(self_, val_) self_->Set_ActivizationStatus(val_)
  

#define kkt_driver_classic_interface_AdjustRITimeout_get(self_) self_->Get_AdjustRITimeout()
#define kkt_driver_classic_interface_AdjustRITimeout_set(self_, val_) self_->Set_AdjustRITimeout(val_)
  

#define kkt_driver_classic_interface_AnswerCode_get(self_) self_->Get_AnswerCode()
#define kkt_driver_classic_interface_AnswerCode_set(self_, val_) self_->Set_AnswerCode(val_)
  

#define kkt_driver_classic_interface_AttributeNumber_get(self_) self_->Get_AttributeNumber()
#define kkt_driver_classic_interface_AttributeNumber_set(self_, val_) self_->Set_AttributeNumber(val_)
  

#define kkt_driver_classic_interface_AttributeValue_get(self_) *new std::string(self_->Get_AttributeValue())
  

#define kkt_driver_classic_interface_AttributeValue_set(self_, val_) self_->Set_AttributeValue(val_)
    

#define kkt_driver_classic_interface_AutoSensorValues_get(self_) self_->Get_AutoSensorValues()
#define kkt_driver_classic_interface_AutoSensorValues_set(self_, val_) self_->Set_AutoSensorValues(val_)
  

#define kkt_driver_classic_interface_AutoStartSearch_get(self_) self_->Get_AutoStartSearch()
#define kkt_driver_classic_interface_AutoStartSearch_set(self_, val_) self_->Set_AutoStartSearch(val_)
  

#define kkt_driver_classic_interface_BanknoteCount_get(self_) self_->Get_BanknoteCount()
  

#define kkt_driver_classic_interface_BanknoteType_get(self_) self_->Get_BanknoteType()
  

#define kkt_driver_classic_interface_BarCode_get(self_) *new std::string(self_->Get_BarCode())
  

#define kkt_driver_classic_interface_BarCode_set(self_, val_) self_->Set_BarCode(val_)
    

#define kkt_driver_classic_interface_BarcodeAlignment_get(self_) self_->Get_BarcodeAlignment()
#define kkt_driver_classic_interface_BarcodeAlignment_set(self_, val_) self_->Set_BarcodeAlignment(val_)
  

#define kkt_driver_classic_interface_BarcodeDataLength_get(self_) self_->Get_BarcodeDataLength()
#define kkt_driver_classic_interface_BarcodeDataLength_set(self_, val_) self_->Set_BarcodeDataLength(val_)
  

#define kkt_driver_classic_interface_BarcodeFirstLine_get(self_) self_->Get_BarcodeFirstLine()
#define kkt_driver_classic_interface_BarcodeFirstLine_set(self_, val_) self_->Set_BarcodeFirstLine(val_)
  

#define kkt_driver_classic_interface_BarcodeHex_get(self_) *new std::string(self_->Get_BarcodeHex())
  

#define kkt_driver_classic_interface_BarcodeHex_set(self_, val_) self_->Set_BarcodeHex(val_)
    

#define kkt_driver_classic_interface_BarcodeParameter1_get(self_) self_->Get_BarcodeParameter1()
#define kkt_driver_classic_interface_BarcodeParameter1_set(self_, val_) self_->Set_BarcodeParameter1(val_)
  

#define kkt_driver_classic_interface_BarcodeParameter2_get(self_) self_->Get_BarcodeParameter2()
#define kkt_driver_classic_interface_BarcodeParameter2_set(self_, val_) self_->Set_BarcodeParameter2(val_)
  

#define kkt_driver_classic_interface_BarcodeParameter3_get(self_) self_->Get_BarcodeParameter3()
#define kkt_driver_classic_interface_BarcodeParameter3_set(self_, val_) self_->Set_BarcodeParameter3(val_)
  

#define kkt_driver_classic_interface_BarcodeParameter4_get(self_) self_->Get_BarcodeParameter4()
#define kkt_driver_classic_interface_BarcodeParameter4_set(self_, val_) self_->Set_BarcodeParameter4(val_)
  

#define kkt_driver_classic_interface_BarcodeParameter5_get(self_) self_->Get_BarcodeParameter5()
#define kkt_driver_classic_interface_BarcodeParameter5_set(self_, val_) self_->Set_BarcodeParameter5(val_)
  

#define kkt_driver_classic_interface_BarcodeStartBlockNumber_get(self_) self_->Get_BarcodeStartBlockNumber()
#define kkt_driver_classic_interface_BarcodeStartBlockNumber_set(self_, val_) self_->Set_BarcodeStartBlockNumber(val_)
  

#define kkt_driver_classic_interface_BarcodeType_get(self_) self_->Get_BarcodeType()
#define kkt_driver_classic_interface_BarcodeType_set(self_, val_) self_->Set_BarcodeType(val_)
  

#define kkt_driver_classic_interface_BarWidth_get(self_) self_->Get_BarWidth()
#define kkt_driver_classic_interface_BarWidth_set(self_, val_) self_->Set_BarWidth(val_)
  

#define kkt_driver_classic_interface_BatteryVoltage_get(self_) self_->Get_BatteryVoltage()
  

#define kkt_driver_classic_interface_BaudRate_get(self_) self_->Get_BaudRate()
#define kkt_driver_classic_interface_BaudRate_set(self_, val_) self_->Set_BaudRate(val_)
  

#define kkt_driver_classic_interface_BinaryConversion_get(self_) self_->Get_BinaryConversion()
#define kkt_driver_classic_interface_BinaryConversion_set(self_, val_) self_->Set_BinaryConversion(val_)
  

#define kkt_driver_classic_interface_BlockData_get(self_) new std::vector<uint8_t>(self_->Get_BlockData())
  

#define kkt_driver_classic_interface_BlockData_set(self_, val_) self_->Set_BlockData(*val_)
    

#define kkt_driver_classic_interface_BlockDataHex_get(self_) *new std::string(self_->Get_BlockDataHex())
  

#define kkt_driver_classic_interface_BlockDataHex_set(self_, val_) self_->Set_BlockDataHex(val_)
    

#define kkt_driver_classic_interface_BlockNumber_get(self_) self_->Get_BlockNumber()
#define kkt_driver_classic_interface_BlockNumber_set(self_, val_) self_->Set_BlockNumber(val_)
  

#define kkt_driver_classic_interface_BlockType_get(self_) self_->Get_BlockType()
#define kkt_driver_classic_interface_BlockType_set(self_, val_) self_->Set_BlockType(val_)
  

#define kkt_driver_classic_interface_BufferingType_get(self_) self_->Get_BufferingType()
#define kkt_driver_classic_interface_BufferingType_set(self_, val_) self_->Set_BufferingType(val_)
  

#define kkt_driver_classic_interface_CalculationSign_get(self_) self_->Get_CalculationSign()
#define kkt_driver_classic_interface_CalculationSign_set(self_, val_) self_->Set_CalculationSign(val_)
  

#define kkt_driver_classic_interface_CapGetShortECRStatus_get(self_) self_->Get_CapGetShortECRStatus()
  

#define kkt_driver_classic_interface_CarryStrings_get(self_) self_->Get_CarryStrings()
#define kkt_driver_classic_interface_CarryStrings_set(self_, val_) self_->Set_CarryStrings(val_)
  

#define kkt_driver_classic_interface_CashAcceptorPollingMode_get(self_) self_->Get_CashAcceptorPollingMode()
  

#define kkt_driver_classic_interface_CashControlEnabled_get(self_) self_->Get_CashControlEnabled()
#define kkt_driver_classic_interface_CashControlEnabled_set(self_, val_) self_->Set_CashControlEnabled(val_)
  

#define kkt_driver_classic_interface_CashControlHost_get(self_) *new std::string(self_->Get_CashControlHost())
  

#define kkt_driver_classic_interface_CashControlHost_set(self_, val_) self_->Set_CashControlHost(val_)
    

#define kkt_driver_classic_interface_CashControlPassword_get(self_) self_->Get_CashControlPassword()
#define kkt_driver_classic_interface_CashControlPassword_set(self_, val_) self_->Set_CashControlPassword(val_)
  

#define kkt_driver_classic_interface_CashControlPort_get(self_) *new std::string(self_->Get_CashControlPort())
  

#define kkt_driver_classic_interface_CashControlPort_set(self_, val_) self_->Set_CashControlPort(val_)
    

#define kkt_driver_classic_interface_CashControlProtocols_get(self_) *new std::string(self_->Get_CashControlProtocols())
  

#define kkt_driver_classic_interface_CashControlUseTCP_get(self_) self_->Get_CashControlUseTCP()
#define kkt_driver_classic_interface_CashControlUseTCP_set(self_, val_) self_->Set_CashControlUseTCP(val_)
  

#define kkt_driver_classic_interface_ccHeaderLineCount_get(self_) self_->Get_ccHeaderLineCount()
#define kkt_driver_classic_interface_ccHeaderLineCount_set(self_, val_) self_->Set_ccHeaderLineCount(val_)
  

#define kkt_driver_classic_interface_ccUseTextAsWareName_get(self_) self_->Get_ccUseTextAsWareName()
#define kkt_driver_classic_interface_ccUseTextAsWareName_set(self_, val_) self_->Set_ccUseTextAsWareName(val_)
  

#define kkt_driver_classic_interface_ccWareNameLineNumber_get(self_) self_->Get_ccWareNameLineNumber()
#define kkt_driver_classic_interface_ccWareNameLineNumber_set(self_, val_) self_->Set_ccWareNameLineNumber(val_)
  

#define kkt_driver_classic_interface_CenterImage_get(self_) self_->Get_CenterImage()
#define kkt_driver_classic_interface_CenterImage_set(self_, val_) self_->Set_CenterImage(val_)
  

#define kkt_driver_classic_interface_Change_get(self_) self_->Get_Change()
  

#define kkt_driver_classic_interface_ChangeFont_get(self_) self_->Get_ChangeFont()
#define kkt_driver_classic_interface_ChangeFont_set(self_, val_) self_->Set_ChangeFont(val_)
  

#define kkt_driver_classic_interface_ChangeOffset_get(self_) self_->Get_ChangeOffset()
#define kkt_driver_classic_interface_ChangeOffset_set(self_, val_) self_->Set_ChangeOffset(val_)
  

#define kkt_driver_classic_interface_ChangeStringNumber_get(self_) self_->Get_ChangeStringNumber()
#define kkt_driver_classic_interface_ChangeStringNumber_set(self_, val_) self_->Set_ChangeStringNumber(val_)
  

#define kkt_driver_classic_interface_ChangeSumFont_get(self_) self_->Get_ChangeSumFont()
#define kkt_driver_classic_interface_ChangeSumFont_set(self_, val_) self_->Set_ChangeSumFont(val_)
  

#define kkt_driver_classic_interface_ChangeSumOffset_get(self_) self_->Get_ChangeSumOffset()
#define kkt_driver_classic_interface_ChangeSumOffset_set(self_, val_) self_->Set_ChangeSumOffset(val_)
  

#define kkt_driver_classic_interface_ChangeSymbolNumber_get(self_) self_->Get_ChangeSymbolNumber()
#define kkt_driver_classic_interface_ChangeSymbolNumber_set(self_, val_) self_->Set_ChangeSymbolNumber(val_)
  

#define kkt_driver_classic_interface_ChargeValue_get(self_) self_->Get_ChargeValue()
#define kkt_driver_classic_interface_ChargeValue_set(self_, val_) self_->Set_ChargeValue(val_)
  

#define kkt_driver_classic_interface_CharHeight_get(self_) self_->Get_CharHeight()
  

#define kkt_driver_classic_interface_CharWidth_get(self_) self_->Get_CharWidth()
  

#define kkt_driver_classic_interface_CheckEJConnection_get(self_) self_->Get_CheckEJConnection()
#define kkt_driver_classic_interface_CheckEJConnection_set(self_, val_) self_->Set_CheckEJConnection(val_)
  

#define kkt_driver_classic_interface_CheckFMConnection_get(self_) self_->Get_CheckFMConnection()
#define kkt_driver_classic_interface_CheckFMConnection_set(self_, val_) self_->Set_CheckFMConnection(val_)
  

#define kkt_driver_classic_interface_CheckingType_get(self_) self_->Get_CheckingType()
#define kkt_driver_classic_interface_CheckingType_set(self_, val_) self_->Set_CheckingType(val_)
  

#define kkt_driver_classic_interface_CheckType_get(self_) self_->Get_CheckType()
#define kkt_driver_classic_interface_CheckType_set(self_, val_) self_->Set_CheckType(val_)
  

#define kkt_driver_classic_interface_ConnectionURI_get(self_) *new std::string(self_->Get_ConnectionURI())
  

#define kkt_driver_classic_interface_ConnectionURI_set(self_, val_) self_->Set_ConnectionURI(val_)
    

#define kkt_driver_classic_interface_ClicheFont_get(self_) self_->Get_ClicheFont()
#define kkt_driver_classic_interface_ClicheFont_set(self_, val_) self_->Set_ClicheFont(val_)
  

#define kkt_driver_classic_interface_ClicheOffset_get(self_) self_->Get_ClicheOffset()
#define kkt_driver_classic_interface_ClicheOffset_set(self_, val_) self_->Set_ClicheOffset(val_)
  

#define kkt_driver_classic_interface_ClicheStringNumber_get(self_) self_->Get_ClicheStringNumber()
#define kkt_driver_classic_interface_ClicheStringNumber_set(self_, val_) self_->Set_ClicheStringNumber(val_)
  

#define kkt_driver_classic_interface_CloudCashdeskEnabled_get(self_) self_->Get_CloudCashdeskEnabled()
#define kkt_driver_classic_interface_CloudCashdeskEnabled_set(self_, val_) self_->Set_CloudCashdeskEnabled(val_)
  

#define kkt_driver_classic_interface_CodePage_get(self_) self_->Get_CodePage()
#define kkt_driver_classic_interface_CodePage_set(self_, val_) self_->Set_CodePage(val_)
  

#define kkt_driver_classic_interface_CommandCode_get(self_) self_->Get_CommandCode()
  

#define kkt_driver_classic_interface_CommandCount_get(self_) self_->Get_CommandCount()
  

#define kkt_driver_classic_interface_CommandDefTimeout_get(self_) self_->Get_CommandDefTimeout()
  

#define kkt_driver_classic_interface_CommandIndex_get(self_) self_->Get_CommandIndex()
#define kkt_driver_classic_interface_CommandIndex_set(self_, val_) self_->Set_CommandIndex(val_)
  

#define kkt_driver_classic_interface_CommandName_get(self_) *new std::string(self_->Get_CommandName())
  

#define kkt_driver_classic_interface_CommandRetryCount_get(self_) self_->Get_CommandRetryCount()
#define kkt_driver_classic_interface_CommandRetryCount_set(self_, val_) self_->Set_CommandRetryCount(val_)
  

#define kkt_driver_classic_interface_CommandTimeout_get(self_) self_->Get_CommandTimeout()
#define kkt_driver_classic_interface_CommandTimeout_set(self_, val_) self_->Set_CommandTimeout(val_)
  

#define kkt_driver_classic_interface_ComNumber_get(self_) self_->Get_ComNumber()
#define kkt_driver_classic_interface_ComNumber_set(self_, val_) self_->Set_ComNumber(val_)
  

#define kkt_driver_classic_interface_ComputerName_get(self_) *new std::string(self_->Get_ComputerName())
  

#define kkt_driver_classic_interface_ComputerName_set(self_, val_) self_->Set_ComputerName(val_)
    

#define kkt_driver_classic_interface_Connected_get(self_) self_->Get_Connected()
#define kkt_driver_classic_interface_Connected_set(self_, val_) self_->Set_Connected(val_)
  

#define kkt_driver_classic_interface_ConnectionTimeout_get(self_) self_->Get_ConnectionTimeout()
#define kkt_driver_classic_interface_ConnectionTimeout_set(self_, val_) self_->Set_ConnectionTimeout(val_)
  

#define kkt_driver_classic_interface_ConnectionType_get(self_) self_->Get_ConnectionType()
#define kkt_driver_classic_interface_ConnectionType_set(self_, val_) self_->Set_ConnectionType(val_)
  

#define kkt_driver_classic_interface_ContentsOfCashRegister_get(self_) self_->Get_ContentsOfCashRegister()
  

#define kkt_driver_classic_interface_ContentsOfOperationRegister_get(self_) self_->Get_ContentsOfOperationRegister()
  

#define kkt_driver_classic_interface_CopyOffset1_get(self_) self_->Get_CopyOffset1()
#define kkt_driver_classic_interface_CopyOffset1_set(self_, val_) self_->Set_CopyOffset1(val_)
  

#define kkt_driver_classic_interface_CopyOffset2_get(self_) self_->Get_CopyOffset2()
#define kkt_driver_classic_interface_CopyOffset2_set(self_, val_) self_->Set_CopyOffset2(val_)
  

#define kkt_driver_classic_interface_CopyOffset3_get(self_) self_->Get_CopyOffset3()
#define kkt_driver_classic_interface_CopyOffset3_set(self_, val_) self_->Set_CopyOffset3(val_)
  

#define kkt_driver_classic_interface_CopyOffset4_get(self_) self_->Get_CopyOffset4()
#define kkt_driver_classic_interface_CopyOffset4_set(self_, val_) self_->Set_CopyOffset4(val_)
  

#define kkt_driver_classic_interface_CopyOffset5_get(self_) self_->Get_CopyOffset5()
#define kkt_driver_classic_interface_CopyOffset5_set(self_, val_) self_->Set_CopyOffset5(val_)
  

#define kkt_driver_classic_interface_CopyType_get(self_) self_->Get_CopyType()
#define kkt_driver_classic_interface_CopyType_set(self_, val_) self_->Set_CopyType(val_)
  

#define kkt_driver_classic_interface_CorrectionType_get(self_) self_->Get_CorrectionType()
#define kkt_driver_classic_interface_CorrectionType_set(self_, val_) self_->Set_CorrectionType(val_)
  

#define kkt_driver_classic_interface_CustomerCode_get(self_) self_->Get_CustomerCode()
#define kkt_driver_classic_interface_CustomerCode_set(self_, val_) self_->Set_CustomerCode(val_)
  

#define kkt_driver_classic_interface_CustomerEmail_get(self_) *new std::string(self_->Get_CustomerEmail())
  

#define kkt_driver_classic_interface_CustomerEmail_set(self_, val_) self_->Set_CustomerEmail(val_)
    

#define kkt_driver_classic_interface_CutType_get(self_) self_->Get_CutType()
#define kkt_driver_classic_interface_CutType_set(self_, val_) self_->Set_CutType(val_)
  

#define kkt_driver_classic_interface_DataBlock_get(self_) *new std::string(self_->Get_DataBlock())
  

#define kkt_driver_classic_interface_DataBlockNumber_get(self_) self_->Get_DataBlockNumber()
  

#define kkt_driver_classic_interface_DataLength_get(self_) self_->Get_DataLength()
#define kkt_driver_classic_interface_DataLength_set(self_, val_) self_->Set_DataLength(val_)
  

#define kkt_driver_classic_interface_Date_get(self_) self_->Get_Date()
#define kkt_driver_classic_interface_Date_set(self_, val_) self_->Set_Date(val_)
  

#define kkt_driver_classic_interface_Date2_get(self_) self_->Get_Date2()
#define kkt_driver_classic_interface_Date2_set(self_, val_) self_->Set_Date2(val_)
  

#define kkt_driver_classic_interface_DBDocType_get(self_) self_->Get_DBDocType()
#define kkt_driver_classic_interface_DBDocType_set(self_, val_) self_->Set_DBDocType(val_)
  

#define kkt_driver_classic_interface_DBFilePath_get(self_) *new std::string(self_->Get_DBFilePath())
  

#define kkt_driver_classic_interface_DBFilePath_set(self_, val_) self_->Set_DBFilePath(val_)
    

#define kkt_driver_classic_interface_DelayedPrint_get(self_) self_->Get_DelayedPrint()
#define kkt_driver_classic_interface_DelayedPrint_set(self_, val_) self_->Set_DelayedPrint(val_)
  

#define kkt_driver_classic_interface_Department_get(self_) self_->Get_Department()
#define kkt_driver_classic_interface_Department_set(self_, val_) self_->Set_Department(val_)
  

#define kkt_driver_classic_interface_DepartmentFont_get(self_) self_->Get_DepartmentFont()
#define kkt_driver_classic_interface_DepartmentFont_set(self_, val_) self_->Set_DepartmentFont(val_)
  

#define kkt_driver_classic_interface_DepartmentOffset_get(self_) self_->Get_DepartmentOffset()
#define kkt_driver_classic_interface_DepartmentOffset_set(self_, val_) self_->Set_DepartmentOffset(val_)
  

#define kkt_driver_classic_interface_DepartmentStringNumber_get(self_) self_->Get_DepartmentStringNumber()
#define kkt_driver_classic_interface_DepartmentStringNumber_set(self_, val_) self_->Set_DepartmentStringNumber(val_)
  

#define kkt_driver_classic_interface_DepartmentSymbolNumber_get(self_) self_->Get_DepartmentSymbolNumber()
#define kkt_driver_classic_interface_DepartmentSymbolNumber_set(self_, val_) self_->Set_DepartmentSymbolNumber(val_)
  

#define kkt_driver_classic_interface_DeviceCode_get(self_) self_->Get_DeviceCode()
#define kkt_driver_classic_interface_DeviceCode_set(self_, val_) self_->Set_DeviceCode(val_)
  

#define kkt_driver_classic_interface_DeviceCodeDescription_get(self_) *new std::string(self_->Get_DeviceCodeDescription())
  

#define kkt_driver_classic_interface_Discount1_get(self_) self_->Get_Discount1()
#define kkt_driver_classic_interface_Discount1_set(self_, val_) self_->Set_Discount1(val_)
  

#define kkt_driver_classic_interface_Discount2_get(self_) self_->Get_Discount2()
#define kkt_driver_classic_interface_Discount2_set(self_, val_) self_->Set_Discount2(val_)
  

#define kkt_driver_classic_interface_Discount3_get(self_) self_->Get_Discount3()
#define kkt_driver_classic_interface_Discount3_set(self_, val_) self_->Set_Discount3(val_)
  

#define kkt_driver_classic_interface_Discount4_get(self_) self_->Get_Discount4()
#define kkt_driver_classic_interface_Discount4_set(self_, val_) self_->Set_Discount4(val_)
  

#define kkt_driver_classic_interface_DiscountOnCheck_get(self_) self_->Get_DiscountOnCheck()
#define kkt_driver_classic_interface_DiscountOnCheck_set(self_, val_) self_->Set_DiscountOnCheck(val_)
  

#define kkt_driver_classic_interface_DiscountOnCheckFont_get(self_) self_->Get_DiscountOnCheckFont()
#define kkt_driver_classic_interface_DiscountOnCheckFont_set(self_, val_) self_->Set_DiscountOnCheckFont(val_)
  

#define kkt_driver_classic_interface_DiscountOnCheckOffset_get(self_) self_->Get_DiscountOnCheckOffset()
#define kkt_driver_classic_interface_DiscountOnCheckOffset_set(self_, val_) self_->Set_DiscountOnCheckOffset(val_)
  

#define kkt_driver_classic_interface_DiscountOnCheckStringNumber_get(self_) self_->Get_DiscountOnCheckStringNumber()
#define kkt_driver_classic_interface_DiscountOnCheckStringNumber_set(self_, val_) self_->Set_DiscountOnCheckStringNumber(val_)
  

#define kkt_driver_classic_interface_DiscountOnCheckSumFont_get(self_) self_->Get_DiscountOnCheckSumFont()
#define kkt_driver_classic_interface_DiscountOnCheckSumFont_set(self_, val_) self_->Set_DiscountOnCheckSumFont(val_)
  

#define kkt_driver_classic_interface_DiscountOnCheckSumOffset_get(self_) self_->Get_DiscountOnCheckSumOffset()
#define kkt_driver_classic_interface_DiscountOnCheckSumOffset_set(self_, val_) self_->Set_DiscountOnCheckSumOffset(val_)
  

#define kkt_driver_classic_interface_DiscountOnCheckSumSymbolNumber_get(self_) self_->Get_DiscountOnCheckSumSymbolNumber()
#define kkt_driver_classic_interface_DiscountOnCheckSumSymbolNumber_set(self_, val_) self_->Set_DiscountOnCheckSumSymbolNumber(val_)
  

#define kkt_driver_classic_interface_DiscountOnCheckSymbolNumber_get(self_) self_->Get_DiscountOnCheckSymbolNumber()
#define kkt_driver_classic_interface_DiscountOnCheckSymbolNumber_set(self_, val_) self_->Set_DiscountOnCheckSymbolNumber(val_)
  

#define kkt_driver_classic_interface_DiscountValue_get(self_) self_->Get_DiscountValue()
#define kkt_driver_classic_interface_DiscountValue_set(self_, val_) self_->Set_DiscountValue(val_)
  

#define kkt_driver_classic_interface_DocumentCount_get(self_) self_->Get_DocumentCount()
#define kkt_driver_classic_interface_DocumentCount_set(self_, val_) self_->Set_DocumentCount(val_)
  

#define kkt_driver_classic_interface_DocumentName_get(self_) *new std::string(self_->Get_DocumentName())
  

#define kkt_driver_classic_interface_DocumentName_set(self_, val_) self_->Set_DocumentName(val_)
    

#define kkt_driver_classic_interface_DocumentNumber_get(self_) self_->Get_DocumentNumber()
#define kkt_driver_classic_interface_DocumentNumber_set(self_, val_) self_->Set_DocumentNumber(val_)
  

#define kkt_driver_classic_interface_DocumentType_get(self_) self_->Get_DocumentType()
#define kkt_driver_classic_interface_DocumentType_set(self_, val_) self_->Set_DocumentType(val_)
  

#define kkt_driver_classic_interface_DoNotSendENQ_get(self_) self_->Get_DoNotSendENQ()
#define kkt_driver_classic_interface_DoNotSendENQ_set(self_, val_) self_->Set_DoNotSendENQ(val_)
  

#define kkt_driver_classic_interface_DrawerNumber_get(self_) self_->Get_DrawerNumber()
#define kkt_driver_classic_interface_DrawerNumber_set(self_, val_) self_->Set_DrawerNumber(val_)
  

#define kkt_driver_classic_interface_DriverBuild_get(self_) self_->Get_DriverBuild()
  

#define kkt_driver_classic_interface_DriverMajorVersion_get(self_) self_->Get_DriverMajorVersion()
  

#define kkt_driver_classic_interface_DriverMinorVersion_get(self_) self_->Get_DriverMinorVersion()
  

#define kkt_driver_classic_interface_DriverRelease_get(self_) self_->Get_DriverRelease()
  

#define kkt_driver_classic_interface_DriverVersion_get(self_) *new std::string(self_->Get_DriverVersion())
  

#define kkt_driver_classic_interface_ECRAdvancedMode_get(self_) self_->Get_ECRAdvancedMode()
  

#define kkt_driver_classic_interface_ECRAdvancedModeDescription_get(self_) *new std::string(self_->Get_ECRAdvancedModeDescription())
  

#define kkt_driver_classic_interface_ECRBuild_get(self_) self_->Get_ECRBuild()
  

#define kkt_driver_classic_interface_ECRDate_get(self_) self_->Get_ECRDate()
#define kkt_driver_classic_interface_ECRDate_set(self_, val_) self_->Set_ECRDate(val_)
  

#define kkt_driver_classic_interface_ECRFlags_get(self_) self_->Get_ECRFlags()
  

#define kkt_driver_classic_interface_ECRID_get(self_) *new std::string(self_->Get_ECRID())
  

#define kkt_driver_classic_interface_ECRID_set(self_, val_) self_->Set_ECRID(val_)
    

#define kkt_driver_classic_interface_ECRInput_get(self_) *new std::string(self_->Get_ECRInput())
  

#define kkt_driver_classic_interface_ECRMode_get(self_) self_->Get_ECRMode()
  

#define kkt_driver_classic_interface_ECRMode8Status_get(self_) self_->Get_ECRMode8Status()
  

#define kkt_driver_classic_interface_ECRModeDescription_get(self_) *new std::string(self_->Get_ECRModeDescription())
  

#define kkt_driver_classic_interface_ECRModeStatus_get(self_) self_->Get_ECRModeStatus()
  

#define kkt_driver_classic_interface_ECROutput_get(self_) *new std::string(self_->Get_ECROutput())
  

#define kkt_driver_classic_interface_ECRSoftDate_get(self_) self_->Get_ECRSoftDate()
  

#define kkt_driver_classic_interface_ECRSoftVersion_get(self_) *new std::string(self_->Get_ECRSoftVersion())
  

#define kkt_driver_classic_interface_ECRTime_get(self_) self_->Get_ECRTime()
#define kkt_driver_classic_interface_ECRTime_set(self_, val_) self_->Set_ECRTime(val_)
  

#define kkt_driver_classic_interface_EjectDirection_get(self_) self_->Get_EjectDirection()
#define kkt_driver_classic_interface_EjectDirection_set(self_, val_) self_->Set_EjectDirection(val_)
  

#define kkt_driver_classic_interface_EKLZData_get(self_) *new std::string(self_->Get_EKLZData())
  

#define kkt_driver_classic_interface_EKLZFlags_get(self_) self_->Get_EKLZFlags()
  

#define kkt_driver_classic_interface_EKLZFont_get(self_) self_->Get_EKLZFont()
#define kkt_driver_classic_interface_EKLZFont_set(self_, val_) self_->Set_EKLZFont(val_)
  

#define kkt_driver_classic_interface_EKLZIsPresent_get(self_) self_->Get_EKLZIsPresent()
  

#define kkt_driver_classic_interface_EKLZNumber_get(self_) *new std::string(self_->Get_EKLZNumber())
  

#define kkt_driver_classic_interface_EKLZOffset_get(self_) self_->Get_EKLZOffset()
#define kkt_driver_classic_interface_EKLZOffset_set(self_, val_) self_->Set_EKLZOffset(val_)
  

#define kkt_driver_classic_interface_EKLZResultCode_get(self_) self_->Get_EKLZResultCode()
  

#define kkt_driver_classic_interface_EKLZStringNumber_get(self_) self_->Get_EKLZStringNumber()
#define kkt_driver_classic_interface_EKLZStringNumber_set(self_, val_) self_->Set_EKLZStringNumber(val_)
  

#define kkt_driver_classic_interface_EKLZVersion_get(self_) *new std::string(self_->Get_EKLZVersion())
  

#define kkt_driver_classic_interface_ErrorCode_get(self_) self_->Get_ErrorCode()
#define kkt_driver_classic_interface_ErrorCode_set(self_, val_) self_->Set_ErrorCode(val_)
  

#define kkt_driver_classic_interface_ErrorDescription_get(self_) *new std::string(self_->Get_ErrorDescription())
  

#define kkt_driver_classic_interface_EscapeIP_get(self_) *new std::string(self_->Get_EscapeIP())
  

#define kkt_driver_classic_interface_EscapeIP_set(self_, val_) self_->Set_EscapeIP(val_)
    

#define kkt_driver_classic_interface_EscapePort_get(self_) self_->Get_EscapePort()
#define kkt_driver_classic_interface_EscapePort_set(self_, val_) self_->Set_EscapePort(val_)
  

#define kkt_driver_classic_interface_EscapeTimeout_get(self_) self_->Get_EscapeTimeout()
#define kkt_driver_classic_interface_EscapeTimeout_set(self_, val_) self_->Set_EscapeTimeout(val_)
  

#define kkt_driver_classic_interface_ExciseCode_get(self_) self_->Get_ExciseCode()
#define kkt_driver_classic_interface_ExciseCode_set(self_, val_) self_->Set_ExciseCode(val_)
  

#define kkt_driver_classic_interface_FeedAfterCut_get(self_) self_->Get_FeedAfterCut()
#define kkt_driver_classic_interface_FeedAfterCut_set(self_, val_) self_->Set_FeedAfterCut(val_)
  

#define kkt_driver_classic_interface_FeedLineCount_get(self_) self_->Get_FeedLineCount()
#define kkt_driver_classic_interface_FeedLineCount_set(self_, val_) self_->Set_FeedLineCount(val_)
  

#define kkt_driver_classic_interface_FieldName_get(self_) *new std::string(self_->Get_FieldName())
  

#define kkt_driver_classic_interface_FieldNumber_get(self_) self_->Get_FieldNumber()
#define kkt_driver_classic_interface_FieldNumber_set(self_, val_) self_->Set_FieldNumber(val_)
  

#define kkt_driver_classic_interface_FieldSize_get(self_) self_->Get_FieldSize()
  

#define kkt_driver_classic_interface_FieldType_get(self_) self_->Get_FieldType()
  

#define kkt_driver_classic_interface_FileName_get(self_) *new std::string(self_->Get_FileName())
  

#define kkt_driver_classic_interface_FileName_set(self_, val_) self_->Set_FileName(val_)
    

#define kkt_driver_classic_interface_FinishDocumentMode_get(self_) self_->Get_FinishDocumentMode()
#define kkt_driver_classic_interface_FinishDocumentMode_set(self_, val_) self_->Set_FinishDocumentMode(val_)
  

#define kkt_driver_classic_interface_FirstLineNumber_get(self_) self_->Get_FirstLineNumber()
#define kkt_driver_classic_interface_FirstLineNumber_set(self_, val_) self_->Set_FirstLineNumber(val_)
  

#define kkt_driver_classic_interface_FirstSessionDate_get(self_) self_->Get_FirstSessionDate()
#define kkt_driver_classic_interface_FirstSessionDate_set(self_, val_) self_->Set_FirstSessionDate(val_)
  

#define kkt_driver_classic_interface_FirstSessionNumber_get(self_) self_->Get_FirstSessionNumber()
#define kkt_driver_classic_interface_FirstSessionNumber_set(self_, val_) self_->Set_FirstSessionNumber(val_)
  

#define kkt_driver_classic_interface_FiscalSign_get(self_) self_->Get_FiscalSign()
#define kkt_driver_classic_interface_FiscalSign_set(self_, val_) self_->Set_FiscalSign(val_)
  

#define kkt_driver_classic_interface_FiscalSignAsString_get(self_) *new std::string(self_->Get_FiscalSignAsString())
  

#define kkt_driver_classic_interface_FiscalSignOFD_get(self_) *new std::string(self_->Get_FiscalSignOFD())
  

#define kkt_driver_classic_interface_FiscalSignOFD_set(self_, val_) self_->Set_FiscalSignOFD(val_)
    

#define kkt_driver_classic_interface_FM1IsPresent_get(self_) self_->Get_FM1IsPresent()
  

#define kkt_driver_classic_interface_FM2IsPresent_get(self_) self_->Get_FM2IsPresent()
  

#define kkt_driver_classic_interface_FMBuild_get(self_) self_->Get_FMBuild()
  

#define kkt_driver_classic_interface_FMFlags_get(self_) self_->Get_FMFlags()
  

#define kkt_driver_classic_interface_FMFlagsEx_get(self_) self_->Get_FMFlagsEx()
  

#define kkt_driver_classic_interface_FMMode_get(self_) self_->Get_FMMode()
  

#define kkt_driver_classic_interface_FMOffset_get(self_) self_->Get_FMOffset()
#define kkt_driver_classic_interface_FMOffset_set(self_, val_) self_->Set_FMOffset(val_)
  

#define kkt_driver_classic_interface_FMOverflow_get(self_) self_->Get_FMOverflow()
  

#define kkt_driver_classic_interface_FMResultCode_get(self_) self_->Get_FMResultCode()
  

#define kkt_driver_classic_interface_FMSoftDate_get(self_) self_->Get_FMSoftDate()
  

#define kkt_driver_classic_interface_FMSoftVersion_get(self_) *new std::string(self_->Get_FMSoftVersion())
  

#define kkt_driver_classic_interface_FMStringNumber_get(self_) self_->Get_FMStringNumber()
#define kkt_driver_classic_interface_FMStringNumber_set(self_, val_) self_->Set_FMStringNumber(val_)
  

#define kkt_driver_classic_interface_FNCurrentDocument_get(self_) self_->Get_FNCurrentDocument()
#define kkt_driver_classic_interface_FNCurrentDocument_set(self_, val_) self_->Set_FNCurrentDocument(val_)
  

#define kkt_driver_classic_interface_FNDocumentData_get(self_) self_->Get_FNDocumentData()
  

#define kkt_driver_classic_interface_FNLifeState_get(self_) self_->Get_FNLifeState()
  

#define kkt_driver_classic_interface_FNSessionState_get(self_) self_->Get_FNSessionState()
  

#define kkt_driver_classic_interface_FNSoftType_get(self_) self_->Get_FNSoftType()
  

#define kkt_driver_classic_interface_FNSoftVersion_get(self_) *new std::string(self_->Get_FNSoftVersion())
  

#define kkt_driver_classic_interface_FNWarningFlags_get(self_) self_->Get_FNWarningFlags()
  

#define kkt_driver_classic_interface_FontCount_get(self_) self_->Get_FontCount()
  

#define kkt_driver_classic_interface_FontType_get(self_) self_->Get_FontType()
#define kkt_driver_classic_interface_FontType_set(self_, val_) self_->Set_FontType(val_)
  

#define kkt_driver_classic_interface_FreeRecordInFM_get(self_) self_->Get_FreeRecordInFM()
  

#define kkt_driver_classic_interface_FreeRegistration_get(self_) self_->Get_FreeRegistration()
  

#define kkt_driver_classic_interface_HeaderFont_get(self_) self_->Get_HeaderFont()
#define kkt_driver_classic_interface_HeaderFont_set(self_, val_) self_->Set_HeaderFont(val_)
  

#define kkt_driver_classic_interface_HeaderOffset_get(self_) self_->Get_HeaderOffset()
#define kkt_driver_classic_interface_HeaderOffset_set(self_, val_) self_->Set_HeaderOffset(val_)
  

#define kkt_driver_classic_interface_HeaderStringNumber_get(self_) self_->Get_HeaderStringNumber()
#define kkt_driver_classic_interface_HeaderStringNumber_set(self_, val_) self_->Set_HeaderStringNumber(val_)
  

#define kkt_driver_classic_interface_HorizScale_get(self_) self_->Get_HorizScale()
#define kkt_driver_classic_interface_HorizScale_set(self_, val_) self_->Set_HorizScale(val_)
  

#define kkt_driver_classic_interface_HRIPosition_get(self_) self_->Get_HRIPosition()
#define kkt_driver_classic_interface_HRIPosition_set(self_, val_) self_->Set_HRIPosition(val_)
  

#define kkt_driver_classic_interface_IBMDocumentNumber_get(self_) self_->Get_IBMDocumentNumber()
  

#define kkt_driver_classic_interface_IBMFlags_get(self_) self_->Get_IBMFlags()
  

#define kkt_driver_classic_interface_IBMLastBuyReceiptNumber_get(self_) self_->Get_IBMLastBuyReceiptNumber()
  

#define kkt_driver_classic_interface_IBMLastReturnBuyReceiptNumber_get(self_) self_->Get_IBMLastReturnBuyReceiptNumber()
  

#define kkt_driver_classic_interface_IBMLastReturnSaleReceiptNumber_get(self_) self_->Get_IBMLastReturnSaleReceiptNumber()
  

#define kkt_driver_classic_interface_IBMLastSaleReceiptNumber_get(self_) self_->Get_IBMLastSaleReceiptNumber()
  

#define kkt_driver_classic_interface_IBMSessionDateTime_get(self_) self_->Get_IBMSessionDateTime()
  

#define kkt_driver_classic_interface_IBMSessionDay_get(self_) self_->Get_IBMSessionDay()
  

#define kkt_driver_classic_interface_IBMSessionHour_get(self_) self_->Get_IBMSessionHour()
  

#define kkt_driver_classic_interface_IBMSessionMin_get(self_) self_->Get_IBMSessionMin()
  

#define kkt_driver_classic_interface_IBMSessionMonth_get(self_) self_->Get_IBMSessionMonth()
  

#define kkt_driver_classic_interface_IBMSessionSec_get(self_) self_->Get_IBMSessionSec()
  

#define kkt_driver_classic_interface_IBMSessionYear_get(self_) self_->Get_IBMSessionYear()
  

#define kkt_driver_classic_interface_IBMStatusByte1_get(self_) self_->Get_IBMStatusByte1()
  

#define kkt_driver_classic_interface_IBMStatusByte2_get(self_) self_->Get_IBMStatusByte2()
  

#define kkt_driver_classic_interface_IBMStatusByte3_get(self_) self_->Get_IBMStatusByte3()
  

#define kkt_driver_classic_interface_IBMStatusByte4_get(self_) self_->Get_IBMStatusByte4()
  

#define kkt_driver_classic_interface_IBMStatusByte5_get(self_) self_->Get_IBMStatusByte5()
  

#define kkt_driver_classic_interface_IBMStatusByte6_get(self_) self_->Get_IBMStatusByte6()
  

#define kkt_driver_classic_interface_IBMStatusByte7_get(self_) self_->Get_IBMStatusByte7()
  

#define kkt_driver_classic_interface_IBMStatusByte8_get(self_) self_->Get_IBMStatusByte8()
  

#define kkt_driver_classic_interface_InfoExchangeStatus_get(self_) self_->Get_InfoExchangeStatus()
#define kkt_driver_classic_interface_InfoExchangeStatus_set(self_, val_) self_->Set_InfoExchangeStatus(val_)
  

#define kkt_driver_classic_interface_InfoType_get(self_) self_->Get_InfoType()
#define kkt_driver_classic_interface_InfoType_set(self_, val_) self_->Set_InfoType(val_)
  

#define kkt_driver_classic_interface_INN_get(self_) *new std::string(self_->Get_INN())
  

#define kkt_driver_classic_interface_INN_set(self_, val_) self_->Set_INN(val_)
    

#define kkt_driver_classic_interface_INNAsInteger_get(self_) self_->Get_INNAsInteger()
  

#define kkt_driver_classic_interface_IntervalNumber_get(self_) self_->Get_IntervalNumber()
#define kkt_driver_classic_interface_IntervalNumber_set(self_, val_) self_->Set_IntervalNumber(val_)
  

#define kkt_driver_classic_interface_IntervalValue_get(self_) self_->Get_IntervalValue()
#define kkt_driver_classic_interface_IntervalValue_set(self_, val_) self_->Set_IntervalValue(val_)
  

#define kkt_driver_classic_interface_IPAddress_get(self_) *new std::string(self_->Get_IPAddress())
  

#define kkt_driver_classic_interface_IPAddress_set(self_, val_) self_->Set_IPAddress(val_)
    

#define kkt_driver_classic_interface_IsASPDMode_get(self_) self_->Get_IsASPDMode()
  

#define kkt_driver_classic_interface_IsBatteryLow_get(self_) self_->Get_IsBatteryLow()
  

#define kkt_driver_classic_interface_IsBlockedByWrongTaxPassword_get(self_) self_->Get_IsBlockedByWrongTaxPassword()
  

#define kkt_driver_classic_interface_IsClearUnfiscalInfo_get(self_) self_->Get_IsClearUnfiscalInfo()
#define kkt_driver_classic_interface_IsClearUnfiscalInfo_set(self_, val_) self_->Set_IsClearUnfiscalInfo(val_)
  

#define kkt_driver_classic_interface_IsCorruptedFiscalizationInfo_get(self_) self_->Get_IsCorruptedFiscalizationInfo()
  

#define kkt_driver_classic_interface_IsCorruptedFMRecords_get(self_) self_->Get_IsCorruptedFMRecords()
  

#define kkt_driver_classic_interface_IsDrawerOpen_get(self_) self_->Get_IsDrawerOpen()
  

#define kkt_driver_classic_interface_IsEKLZOverflow_get(self_) self_->Get_IsEKLZOverflow()
  

#define kkt_driver_classic_interface_IsFM24HoursOver_get(self_) self_->Get_IsFM24HoursOver()
  

#define kkt_driver_classic_interface_IsFMSessionOpen_get(self_) self_->Get_IsFMSessionOpen()
  

#define kkt_driver_classic_interface_IsLastFMRecordCorrupted_get(self_) self_->Get_IsLastFMRecordCorrupted()
  

#define kkt_driver_classic_interface_IsPrinterLeftSensorFailure_get(self_) self_->Get_IsPrinterLeftSensorFailure()
  

#define kkt_driver_classic_interface_IsPrinterRightSensorFailure_get(self_) self_->Get_IsPrinterRightSensorFailure()
  

#define kkt_driver_classic_interface_JournalEnabled_get(self_) self_->Get_JournalEnabled()
#define kkt_driver_classic_interface_JournalEnabled_set(self_, val_) self_->Set_JournalEnabled(val_)
  

#define kkt_driver_classic_interface_JournalRibbonIsPresent_get(self_) self_->Get_JournalRibbonIsPresent()
  

#define kkt_driver_classic_interface_JournalRibbonLever_get(self_) self_->Get_JournalRibbonLever()
  

#define kkt_driver_classic_interface_JournalRibbonOpticalSensor_get(self_) self_->Get_JournalRibbonOpticalSensor()
  

#define kkt_driver_classic_interface_JournalRow_get(self_) *new std::string(self_->Get_JournalRow())
  

#define kkt_driver_classic_interface_JournalRowCount_get(self_) self_->Get_JournalRowCount()
  

#define kkt_driver_classic_interface_JournalRowNumber_get(self_) self_->Get_JournalRowNumber()
#define kkt_driver_classic_interface_JournalRowNumber_set(self_, val_) self_->Set_JournalRowNumber(val_)
  

#define kkt_driver_classic_interface_JournalText_get(self_) *new std::string(self_->Get_JournalText())
  

#define kkt_driver_classic_interface_KKTRegistrationNumber_get(self_) *new std::string(self_->Get_KKTRegistrationNumber())
  

#define kkt_driver_classic_interface_KKTRegistrationNumber_set(self_, val_) self_->Set_KKTRegistrationNumber(val_)
    

#define kkt_driver_classic_interface_KPKFont_get(self_) self_->Get_KPKFont()
#define kkt_driver_classic_interface_KPKFont_set(self_, val_) self_->Set_KPKFont(val_)
  

#define kkt_driver_classic_interface_KPKNumber_get(self_) self_->Get_KPKNumber()
#define kkt_driver_classic_interface_KPKNumber_set(self_, val_) self_->Set_KPKNumber(val_)
  

#define kkt_driver_classic_interface_KPKOffset_get(self_) self_->Get_KPKOffset()
#define kkt_driver_classic_interface_KPKOffset_set(self_, val_) self_->Set_KPKOffset(val_)
  

#define kkt_driver_classic_interface_KPKStr_get(self_) *new std::string(self_->Get_KPKStr())
  

#define kkt_driver_classic_interface_KPKValue_get(self_) self_->Get_KPKValue()
#define kkt_driver_classic_interface_KPKValue_set(self_, val_) self_->Set_KPKValue(val_)
  

#define kkt_driver_classic_interface_KSAInfo_get(self_) *new std::string(self_->Get_KSAInfo())
  

#define kkt_driver_classic_interface_KSAInfo_set(self_, val_) self_->Set_KSAInfo(val_)
    

#define kkt_driver_classic_interface_LastFMRecordType_get(self_) self_->Get_LastFMRecordType()
  

#define kkt_driver_classic_interface_LastKPKDate_get(self_) self_->Get_LastKPKDate()
  

#define kkt_driver_classic_interface_LastKPKDateStr_get(self_) *new std::string(self_->Get_LastKPKDateStr())
  

#define kkt_driver_classic_interface_LastKPKDocumentResult_get(self_) self_->Get_LastKPKDocumentResult()
  

#define kkt_driver_classic_interface_LastKPKNumber_get(self_) self_->Get_LastKPKNumber()
  

#define kkt_driver_classic_interface_LastKPKTime_get(self_) self_->Get_LastKPKTime()
  

#define kkt_driver_classic_interface_LastKPKTimeStr_get(self_) *new std::string(self_->Get_LastKPKTimeStr())
  

#define kkt_driver_classic_interface_LastLineNumber_get(self_) self_->Get_LastLineNumber()
#define kkt_driver_classic_interface_LastLineNumber_set(self_, val_) self_->Set_LastLineNumber(val_)
  

#define kkt_driver_classic_interface_LastPrintResult_get(self_) self_->Get_LastPrintResult()
  

#define kkt_driver_classic_interface_LastSessionDate_get(self_) self_->Get_LastSessionDate()
#define kkt_driver_classic_interface_LastSessionDate_set(self_, val_) self_->Set_LastSessionDate(val_)
  

#define kkt_driver_classic_interface_LastSessionNumber_get(self_) self_->Get_LastSessionNumber()
#define kkt_driver_classic_interface_LastSessionNumber_set(self_, val_) self_->Set_LastSessionNumber(val_)
  

#define kkt_driver_classic_interface_LDBaudrate_get(self_) self_->Get_LDBaudrate()
#define kkt_driver_classic_interface_LDBaudrate_set(self_, val_) self_->Set_LDBaudrate(val_)
  

#define kkt_driver_classic_interface_LDComNumber_get(self_) self_->Get_LDComNumber()
#define kkt_driver_classic_interface_LDComNumber_set(self_, val_) self_->Set_LDComNumber(val_)
  

#define kkt_driver_classic_interface_LDComputerName_get(self_) *new std::string(self_->Get_LDComputerName())
  

#define kkt_driver_classic_interface_LDComputerName_set(self_, val_) self_->Set_LDComputerName(val_)
    

#define kkt_driver_classic_interface_LDConnectionType_get(self_) self_->Get_LDConnectionType()
#define kkt_driver_classic_interface_LDConnectionType_set(self_, val_) self_->Set_LDConnectionType(val_)
  

#define kkt_driver_classic_interface_LDCount_get(self_) self_->Get_LDCount()
  

#define kkt_driver_classic_interface_LDEscapeIP_get(self_) *new std::string(self_->Get_LDEscapeIP())
  

#define kkt_driver_classic_interface_LDEscapeIP_set(self_, val_) self_->Set_LDEscapeIP(val_)
    

#define kkt_driver_classic_interface_LDEscapePort_get(self_) self_->Get_LDEscapePort()
#define kkt_driver_classic_interface_LDEscapePort_set(self_, val_) self_->Set_LDEscapePort(val_)
  

#define kkt_driver_classic_interface_LDEscapeTimeout_get(self_) self_->Get_LDEscapeTimeout()
#define kkt_driver_classic_interface_LDEscapeTimeout_set(self_, val_) self_->Set_LDEscapeTimeout(val_)
  

#define kkt_driver_classic_interface_LDIndex_get(self_) self_->Get_LDIndex()
#define kkt_driver_classic_interface_LDIndex_set(self_, val_) self_->Set_LDIndex(val_)
  

#define kkt_driver_classic_interface_LDIPAddress_get(self_) *new std::string(self_->Get_LDIPAddress())
  

#define kkt_driver_classic_interface_LDIPAddress_set(self_, val_) self_->Set_LDIPAddress(val_)
    

#define kkt_driver_classic_interface_LDName_get(self_) *new std::string(self_->Get_LDName())
  

#define kkt_driver_classic_interface_LDName_set(self_, val_) self_->Set_LDName(val_)
    

#define kkt_driver_classic_interface_LDNumber_get(self_) self_->Get_LDNumber()
#define kkt_driver_classic_interface_LDNumber_set(self_, val_) self_->Set_LDNumber(val_)
  

#define kkt_driver_classic_interface_LDProtocolType_get(self_) self_->Get_LDProtocolType()
#define kkt_driver_classic_interface_LDProtocolType_set(self_, val_) self_->Set_LDProtocolType(val_)
  

#define kkt_driver_classic_interface_LDSysAdminPassword_get(self_) self_->Get_LDSysAdminPassword()
#define kkt_driver_classic_interface_LDSysAdminPassword_set(self_, val_) self_->Set_LDSysAdminPassword(val_)
  

#define kkt_driver_classic_interface_LDTCPPort_get(self_) self_->Get_LDTCPPort()
#define kkt_driver_classic_interface_LDTCPPort_set(self_, val_) self_->Set_LDTCPPort(val_)
  

#define kkt_driver_classic_interface_LDTimeout_get(self_) self_->Get_LDTimeout()
#define kkt_driver_classic_interface_LDTimeout_set(self_, val_) self_->Set_LDTimeout(val_)
  

#define kkt_driver_classic_interface_LDUseIPAddress_get(self_) self_->Get_LDUseIPAddress()
#define kkt_driver_classic_interface_LDUseIPAddress_set(self_, val_) self_->Set_LDUseIPAddress(val_)
  

#define kkt_driver_classic_interface_License_get(self_) *new std::string(self_->Get_License())
  

#define kkt_driver_classic_interface_License_set(self_, val_) self_->Set_License(val_)
    

#define kkt_driver_classic_interface_LicenseIsPresent_get(self_) self_->Get_LicenseIsPresent()
  

#define kkt_driver_classic_interface_LidPositionSensor_get(self_) self_->Get_LidPositionSensor()
  

#define kkt_driver_classic_interface_LineData_get(self_) *new std::string(self_->Get_LineData())
  

#define kkt_driver_classic_interface_LineData_set(self_, val_) self_->Set_LineData(val_)
    

#define kkt_driver_classic_interface_LineData2_get(self_) *new std::string(self_->Get_LineData2())
  

#define kkt_driver_classic_interface_LineData2_set(self_, val_) self_->Set_LineData2(val_)
    

#define kkt_driver_classic_interface_LineDataHex_get(self_) *new std::string(self_->Get_LineDataHex())
  

#define kkt_driver_classic_interface_LineDataHex_set(self_, val_) self_->Set_LineDataHex(val_)
    

#define kkt_driver_classic_interface_LineNumber_get(self_) self_->Get_LineNumber()
#define kkt_driver_classic_interface_LineNumber_set(self_, val_) self_->Set_LineNumber(val_)
  

#define kkt_driver_classic_interface_LineSwapBytes_get(self_) self_->Get_LineSwapBytes()
#define kkt_driver_classic_interface_LineSwapBytes_set(self_, val_) self_->Set_LineSwapBytes(val_)
  

#define kkt_driver_classic_interface_LockTimeout_get(self_) self_->Get_LockTimeout()
#define kkt_driver_classic_interface_LockTimeout_set(self_, val_) self_->Set_LockTimeout(val_)
  

#define kkt_driver_classic_interface_LogicalNumber_get(self_) self_->Get_LogicalNumber()
  

#define kkt_driver_classic_interface_LogMaxFileCount_get(self_) self_->Get_LogMaxFileCount()
#define kkt_driver_classic_interface_LogMaxFileCount_set(self_, val_) self_->Set_LogMaxFileCount(val_)
  

#define kkt_driver_classic_interface_LogMaxFileSize_get(self_) self_->Get_LogMaxFileSize()
#define kkt_driver_classic_interface_LogMaxFileSize_set(self_, val_) self_->Set_LogMaxFileSize(val_)
  

#define kkt_driver_classic_interface_LogOn_get(self_) self_->Get_LogOn()
#define kkt_driver_classic_interface_LogOn_set(self_, val_) self_->Set_LogOn(val_)
  

#define kkt_driver_classic_interface_MAXValueOfField_get(self_) self_->Get_MAXValueOfField()
  

#define kkt_driver_classic_interface_MessageCount_get(self_) self_->Get_MessageCount()
#define kkt_driver_classic_interface_MessageCount_set(self_, val_) self_->Set_MessageCount(val_)
  

#define kkt_driver_classic_interface_MessageState_get(self_) self_->Get_MessageState()
#define kkt_driver_classic_interface_MessageState_set(self_, val_) self_->Set_MessageState(val_)
  

#define kkt_driver_classic_interface_MethodName_get(self_) *new std::string(self_->Get_MethodName())
  

#define kkt_driver_classic_interface_MethodName_set(self_, val_) self_->Set_MethodName(val_)
    

#define kkt_driver_classic_interface_MFPNumber_get(self_) *new std::string(self_->Get_MFPNumber())
  

#define kkt_driver_classic_interface_MFPNumber_set(self_, val_) self_->Set_MFPNumber(val_)
    

#define kkt_driver_classic_interface_MFPStatus_get(self_) self_->Get_MFPStatus()
#define kkt_driver_classic_interface_MFPStatus_set(self_, val_) self_->Set_MFPStatus(val_)
  

#define kkt_driver_classic_interface_MINValueOfField_get(self_) self_->Get_MINValueOfField()
  

#define kkt_driver_classic_interface_MobilePayEnabled_get(self_) self_->Get_MobilePayEnabled()
#define kkt_driver_classic_interface_MobilePayEnabled_set(self_, val_) self_->Set_MobilePayEnabled(val_)
  

#define kkt_driver_classic_interface_ModelID_get(self_) self_->Get_ModelID()
#define kkt_driver_classic_interface_ModelID_set(self_, val_) self_->Set_ModelID(val_)
  

#define kkt_driver_classic_interface_ModelIndex_get(self_) self_->Get_ModelIndex()
#define kkt_driver_classic_interface_ModelIndex_set(self_, val_) self_->Set_ModelIndex(val_)
  

#define kkt_driver_classic_interface_ModelNames_get(self_) *new std::string(self_->Get_ModelNames())
  

#define kkt_driver_classic_interface_ModelParamCount_get(self_) self_->Get_ModelParamCount()
  

#define kkt_driver_classic_interface_ModelParamDescription_get(self_) *new std::string(self_->Get_ModelParamDescription())
  

#define kkt_driver_classic_interface_ModelParamIndex_get(self_) self_->Get_ModelParamIndex()
#define kkt_driver_classic_interface_ModelParamIndex_set(self_, val_) self_->Set_ModelParamIndex(val_)
  

#define kkt_driver_classic_interface_ModelParamNumber_get(self_) self_->Get_ModelParamNumber()
#define kkt_driver_classic_interface_ModelParamNumber_set(self_, val_) self_->Set_ModelParamNumber(val_)
  

#define kkt_driver_classic_interface_ModelParamValue_get(self_) self_->ReadModelParamValue()
  

#define kkt_driver_classic_interface_ModelsCount_get(self_) self_->Get_ModelsCount()
  

#define kkt_driver_classic_interface_MultiplicationFont_get(self_) self_->Get_MultiplicationFont()
#define kkt_driver_classic_interface_MultiplicationFont_set(self_, val_) self_->Set_MultiplicationFont(val_)
  

#define kkt_driver_classic_interface_NameCashReg_get(self_) *new std::string(self_->Get_NameCashReg())
  

#define kkt_driver_classic_interface_NameCashRegEx_get(self_) *new std::string(self_->Get_NameCashRegEx())
  

#define kkt_driver_classic_interface_NameOperationReg_get(self_) *new std::string(self_->Get_NameOperationReg())
  

#define kkt_driver_classic_interface_NewPasswordTI_get(self_) self_->Get_NewPasswordTI()
#define kkt_driver_classic_interface_NewPasswordTI_set(self_, val_) self_->Set_NewPasswordTI(val_)
  

#define kkt_driver_classic_interface_NewSCPassword_get(self_) self_->Get_NewSCPassword()
#define kkt_driver_classic_interface_NewSCPassword_set(self_, val_) self_->Set_NewSCPassword(val_)
  

#define kkt_driver_classic_interface_NumberOfCopies_get(self_) self_->Get_NumberOfCopies()
#define kkt_driver_classic_interface_NumberOfCopies_set(self_, val_) self_->Set_NumberOfCopies(val_)
  

#define kkt_driver_classic_interface_OFDTicketReceived_get(self_) self_->Get_OFDTicketReceived()
#define kkt_driver_classic_interface_OFDTicketReceived_set(self_, val_) self_->Set_OFDTicketReceived(val_)
  

#define kkt_driver_classic_interface_OPBarcodeInputType_get(self_) self_->Get_OPBarcodeInputType()
#define kkt_driver_classic_interface_OPBarcodeInputType_set(self_, val_) self_->Set_OPBarcodeInputType(val_)
  

#define kkt_driver_classic_interface_OpenDocumentNumber_get(self_) self_->Get_OpenDocumentNumber()
  

#define kkt_driver_classic_interface_OperationBlockFirstString_get(self_) self_->Get_OperationBlockFirstString()
#define kkt_driver_classic_interface_OperationBlockFirstString_set(self_, val_) self_->Set_OperationBlockFirstString(val_)
  

#define kkt_driver_classic_interface_OperationNameFont_get(self_) self_->Get_OperationNameFont()
#define kkt_driver_classic_interface_OperationNameFont_set(self_, val_) self_->Set_OperationNameFont(val_)
  

#define kkt_driver_classic_interface_OperationNameOffset_get(self_) self_->Get_OperationNameOffset()
#define kkt_driver_classic_interface_OperationNameOffset_set(self_, val_) self_->Set_OperationNameOffset(val_)
  

#define kkt_driver_classic_interface_OperationNameStringNumber_get(self_) self_->Get_OperationNameStringNumber()
#define kkt_driver_classic_interface_OperationNameStringNumber_set(self_, val_) self_->Set_OperationNameStringNumber(val_)
  

#define kkt_driver_classic_interface_OperatorNumber_get(self_) self_->Get_OperatorNumber()
  

#define kkt_driver_classic_interface_OperationType_get(self_) self_->Get_OperationType()
#define kkt_driver_classic_interface_OperationType_set(self_, val_) self_->Set_OperationType(val_)
  

#define kkt_driver_classic_interface_OPIdPayment_get(self_) *new std::string(self_->Get_OPIdPayment())
  

#define kkt_driver_classic_interface_OPIdPayment_set(self_, val_) self_->Set_OPIdPayment(val_)
    

#define kkt_driver_classic_interface_OPRequisiteNumber_get(self_) self_->Get_OPRequisiteNumber()
#define kkt_driver_classic_interface_OPRequisiteNumber_set(self_, val_) self_->Set_OPRequisiteNumber(val_)
  

#define kkt_driver_classic_interface_OPRequisiteValue_get(self_) *new std::string(self_->Get_OPRequisiteValue())
  

#define kkt_driver_classic_interface_OPRequisiteValue_set(self_, val_) self_->Set_OPRequisiteValue(val_)
    

#define kkt_driver_classic_interface_OPSystem_get(self_) self_->Get_OPSystem()
#define kkt_driver_classic_interface_OPSystem_set(self_, val_) self_->Set_OPSystem(val_)
  

#define kkt_driver_classic_interface_OPTransactionStatus_get(self_) self_->Get_OPTransactionStatus()
#define kkt_driver_classic_interface_OPTransactionStatus_set(self_, val_) self_->Set_OPTransactionStatus(val_)
  

#define kkt_driver_classic_interface_OPTransactionType_get(self_) self_->Get_OPTransactionType()
#define kkt_driver_classic_interface_OPTransactionType_set(self_, val_) self_->Set_OPTransactionType(val_)
  

#define kkt_driver_classic_interface_ParameterValue_get(self_) *new std::string(self_->Get_ParameterValue())
  

#define kkt_driver_classic_interface_ParameterValue_set(self_, val_) self_->Set_ParameterValue(val_)
    

#define kkt_driver_classic_interface_ParentWnd_get(self_) self_->Get_ParentWnd()
#define kkt_driver_classic_interface_ParentWnd_set(self_, val_) self_->Set_ParentWnd(val_)
  

#define kkt_driver_classic_interface_Password_get(self_) self_->Get_Password()
#define kkt_driver_classic_interface_Password_set(self_, val_) self_->Set_Password(val_)
  

#define kkt_driver_classic_interface_PayDepartment_get(self_) self_->Get_PayDepartment()
#define kkt_driver_classic_interface_PayDepartment_set(self_, val_) self_->Set_PayDepartment(val_)
  

#define kkt_driver_classic_interface_PaymentItemSign_get(self_) self_->Get_PaymentItemSign()
#define kkt_driver_classic_interface_PaymentItemSign_set(self_, val_) self_->Set_PaymentItemSign(val_)
  

#define kkt_driver_classic_interface_PaymentTypeSign_get(self_) self_->Get_PaymentTypeSign()
#define kkt_driver_classic_interface_PaymentTypeSign_set(self_, val_) self_->Set_PaymentTypeSign(val_)
  

#define kkt_driver_classic_interface_PermitActivizationCode_get(self_) self_->Get_PermitActivizationCode()
#define kkt_driver_classic_interface_PermitActivizationCode_set(self_, val_) self_->Set_PermitActivizationCode(val_)
  

#define kkt_driver_classic_interface_PingResult_get(self_) self_->Get_PingResult()
#define kkt_driver_classic_interface_PingResult_set(self_, val_) self_->Set_PingResult(val_)
  

#define kkt_driver_classic_interface_PingTime_get(self_) self_->Get_PingTime()
#define kkt_driver_classic_interface_PingTime_set(self_, val_) self_->Set_PingTime(val_)
  

#define kkt_driver_classic_interface_PointPosition_get(self_) self_->Get_PointPosition()
#define kkt_driver_classic_interface_PointPosition_set(self_, val_) self_->Set_PointPosition(val_)
  

#define kkt_driver_classic_interface_Poll1_get(self_) self_->Get_Poll1()
  

#define kkt_driver_classic_interface_Poll2_get(self_) self_->Get_Poll2()
  

#define kkt_driver_classic_interface_PosControlReceiptSeparator_get(self_) *new std::string(self_->Get_PosControlReceiptSeparator())
  

#define kkt_driver_classic_interface_PosControlReceiptSeparator_set(self_, val_) self_->Set_PosControlReceiptSeparator(val_)
    

#define kkt_driver_classic_interface_PortLocked_get(self_) self_->Get_PortLocked()
  

#define kkt_driver_classic_interface_PortNumber_get(self_) self_->Get_PortNumber()
#define kkt_driver_classic_interface_PortNumber_set(self_, val_) self_->Set_PortNumber(val_)
  

#define kkt_driver_classic_interface_PowerSourceVoltage_get(self_) *new double(self_->Get_PowerSourceVoltage())
  

#define kkt_driver_classic_interface_PrepareActivizationRemainCount_get(self_) self_->Get_PrepareActivizationRemainCount()
#define kkt_driver_classic_interface_PrepareActivizationRemainCount_set(self_, val_) self_->Set_PrepareActivizationRemainCount(val_)
  

#define kkt_driver_classic_interface_PresenterIn_get(self_) self_->Get_PresenterIn()
  

#define kkt_driver_classic_interface_PresenterOut_get(self_) self_->Get_PresenterOut()
  

#define kkt_driver_classic_interface_Price_get(self_) self_->Get_Price()
#define kkt_driver_classic_interface_Price_set(self_, val_) self_->Set_Price(val_)
  

#define kkt_driver_classic_interface_PriceFont_get(self_) self_->Get_PriceFont()
#define kkt_driver_classic_interface_PriceFont_set(self_, val_) self_->Set_PriceFont(val_)
  

#define kkt_driver_classic_interface_PriceSymbolNumber_get(self_) self_->Get_PriceSymbolNumber()
#define kkt_driver_classic_interface_PriceSymbolNumber_set(self_, val_) self_->Set_PriceSymbolNumber(val_)
  

#define kkt_driver_classic_interface_PrintBarcodeText_get(self_) self_->Get_PrintBarcodeText()
#define kkt_driver_classic_interface_PrintBarcodeText_set(self_, val_) self_->Set_PrintBarcodeText(val_)
  

#define kkt_driver_classic_interface_PrintBufferFormat_get(self_) self_->Get_PrintBufferFormat()
#define kkt_driver_classic_interface_PrintBufferFormat_set(self_, val_) self_->Set_PrintBufferFormat(val_)
  

#define kkt_driver_classic_interface_PrintBufferLineNumber_get(self_) self_->ReadPrintBufferLineNumber()
  

#define kkt_driver_classic_interface_PrintingAlignment_get(self_) self_->Get_PrintingAlignment()
#define kkt_driver_classic_interface_PrintingAlignment_set(self_, val_) self_->Set_PrintingAlignment(val_)
  

#define kkt_driver_classic_interface_PrintJournalBeforeZReport_get(self_) self_->Get_PrintJournalBeforeZReport()
#define kkt_driver_classic_interface_PrintJournalBeforeZReport_set(self_, val_) self_->Set_PrintJournalBeforeZReport(val_)
  

#define kkt_driver_classic_interface_PrintWidth_get(self_) self_->Get_PrintWidth()
  

#define kkt_driver_classic_interface_PropertyName_get(self_) *new std::string(self_->Get_PropertyName())
  

#define kkt_driver_classic_interface_PropertyName_set(self_, val_) self_->Set_PropertyName(val_)
    

#define kkt_driver_classic_interface_ProtocolType_get(self_) self_->Get_ProtocolType()
#define kkt_driver_classic_interface_ProtocolType_set(self_, val_) self_->Set_ProtocolType(val_)
  

#define kkt_driver_classic_interface_Quantity_get(self_) self_->Get_Quantity()
#define kkt_driver_classic_interface_Quantity_set(self_, val_) self_->Set_Quantity(val_)
  

#define kkt_driver_classic_interface_QuantityFont_get(self_) self_->Get_QuantityFont()
#define kkt_driver_classic_interface_QuantityFont_set(self_, val_) self_->Set_QuantityFont(val_)
  

#define kkt_driver_classic_interface_QuantityFormat_get(self_) self_->Get_QuantityFormat()
#define kkt_driver_classic_interface_QuantityFormat_set(self_, val_) self_->Set_QuantityFormat(val_)
  

#define kkt_driver_classic_interface_QuantityOffset_get(self_) self_->Get_QuantityOffset()
#define kkt_driver_classic_interface_QuantityOffset_set(self_, val_) self_->Set_QuantityOffset(val_)
  

#define kkt_driver_classic_interface_QuantityOfOperations_get(self_) self_->Get_QuantityOfOperations()
  

#define kkt_driver_classic_interface_QuantityPointPosition_get(self_) self_->Get_QuantityPointPosition()
  

#define kkt_driver_classic_interface_QuantityStringNumber_get(self_) self_->Get_QuantityStringNumber()
#define kkt_driver_classic_interface_QuantityStringNumber_set(self_, val_) self_->Set_QuantityStringNumber(val_)
  

#define kkt_driver_classic_interface_QuantitySymbolNumber_get(self_) self_->Get_QuantitySymbolNumber()
#define kkt_driver_classic_interface_QuantitySymbolNumber_set(self_, val_) self_->Set_QuantitySymbolNumber(val_)
  

#define kkt_driver_classic_interface_RealPayDepartment_get(self_) self_->Get_RealPayDepartment()
#define kkt_driver_classic_interface_RealPayDepartment_set(self_, val_) self_->Set_RealPayDepartment(val_)
  

#define kkt_driver_classic_interface_ReceiptNumber_get(self_) self_->Get_ReceiptNumber()
#define kkt_driver_classic_interface_ReceiptNumber_set(self_, val_) self_->Set_ReceiptNumber(val_)
  

#define kkt_driver_classic_interface_ReceiptOutputType_get(self_) self_->Get_ReceiptOutputType()
#define kkt_driver_classic_interface_ReceiptOutputType_set(self_, val_) self_->Set_ReceiptOutputType(val_)
  

#define kkt_driver_classic_interface_ReceiptRibbonIsPresent_get(self_) self_->Get_ReceiptRibbonIsPresent()
  

#define kkt_driver_classic_interface_ReceiptRibbonLever_get(self_) self_->Get_ReceiptRibbonLever()
  

#define kkt_driver_classic_interface_ReceiptRibbonOpticalSensor_get(self_) self_->Get_ReceiptRibbonOpticalSensor()
  

#define kkt_driver_classic_interface_ReconnectPort_get(self_) self_->Get_ReconnectPort()
#define kkt_driver_classic_interface_ReconnectPort_set(self_, val_) self_->Set_ReconnectPort(val_)
  

#define kkt_driver_classic_interface_RecordCount_get(self_) self_->Get_RecordCount()
  

#define kkt_driver_classic_interface_RegBuyRec_get(self_) self_->Get_RegBuyRec()
  

#define kkt_driver_classic_interface_RegBuyReturnRec_get(self_) self_->Get_RegBuyReturnRec()
  

#define kkt_driver_classic_interface_RegBuyReturnSession_get(self_) self_->Get_RegBuyReturnSession()
  

#define kkt_driver_classic_interface_RegBuySession_get(self_) self_->Get_RegBuySession()
  

#define kkt_driver_classic_interface_RegisterNumber_get(self_) self_->Get_RegisterNumber()
#define kkt_driver_classic_interface_RegisterNumber_set(self_, val_) self_->Set_RegisterNumber(val_)
  

#define kkt_driver_classic_interface_RegistrationNumber_get(self_) self_->Get_RegistrationNumber()
#define kkt_driver_classic_interface_RegistrationNumber_set(self_, val_) self_->Set_RegistrationNumber(val_)
  

#define kkt_driver_classic_interface_RegistrationReasonCode_get(self_) self_->Get_RegistrationReasonCode()
#define kkt_driver_classic_interface_RegistrationReasonCode_set(self_, val_) self_->Set_RegistrationReasonCode(val_)
  

#define kkt_driver_classic_interface_RegSaleRec_get(self_) self_->Get_RegSaleRec()
  

#define kkt_driver_classic_interface_RegSaleReturnRec_get(self_) self_->Get_RegSaleReturnRec()
  

#define kkt_driver_classic_interface_RegSaleReturnSession_get(self_) self_->Get_RegSaleReturnSession()
  

#define kkt_driver_classic_interface_RegSaleSession_get(self_) self_->Get_RegSaleSession()
  

#define kkt_driver_classic_interface_ReportType_get(self_) self_->Get_ReportType()
#define kkt_driver_classic_interface_ReportType_set(self_, val_) self_->Set_ReportType(val_)
  

#define kkt_driver_classic_interface_ReportTypeInt_get(self_) self_->Get_ReportTypeInt()
#define kkt_driver_classic_interface_ReportTypeInt_set(self_, val_) self_->Set_ReportTypeInt(val_)
  

#define kkt_driver_classic_interface_RequestErrorDescription_get(self_) self_->Get_RequestErrorDescription()
#define kkt_driver_classic_interface_RequestErrorDescription_set(self_, val_) self_->Set_RequestErrorDescription(val_)
  

#define kkt_driver_classic_interface_RequestType_get(self_) self_->Get_RequestType()
#define kkt_driver_classic_interface_RequestType_set(self_, val_) self_->Set_RequestType(val_)
  

#define kkt_driver_classic_interface_ResultCode_get(self_) self_->Get_ResultCode()
  

#define kkt_driver_classic_interface_ResultCodeDescription_get(self_) *new std::string(self_->Get_ResultCodeDescription())
  

#define kkt_driver_classic_interface_RNM_get(self_) *new std::string(self_->Get_RNM())
  

#define kkt_driver_classic_interface_RNM_set(self_, val_) self_->Set_RNM(val_)
    

#define kkt_driver_classic_interface_RoundingSumm_get(self_) self_->Get_RoundingSumm()
#define kkt_driver_classic_interface_RoundingSumm_set(self_, val_) self_->Set_RoundingSumm(val_)
  

#define kkt_driver_classic_interface_RowNumber_get(self_) self_->Get_RowNumber()
#define kkt_driver_classic_interface_RowNumber_set(self_, val_) self_->Set_RowNumber(val_)
  

#define kkt_driver_classic_interface_RunningPeriod_get(self_) self_->Get_RunningPeriod()
#define kkt_driver_classic_interface_RunningPeriod_set(self_, val_) self_->Set_RunningPeriod(val_)
  

#define kkt_driver_classic_interface_SaleError_get(self_) self_->Get_SaleError()
#define kkt_driver_classic_interface_SaleError_set(self_, val_) self_->Set_SaleError(val_)
  

#define kkt_driver_classic_interface_SaveSettingsType_get(self_) self_->Get_SaveSettingsType()
#define kkt_driver_classic_interface_SaveSettingsType_set(self_, val_) self_->Set_SaveSettingsType(val_)
  

#define kkt_driver_classic_interface_SCPassword_get(self_) self_->Get_SCPassword()
#define kkt_driver_classic_interface_SCPassword_set(self_, val_) self_->Set_SCPassword(val_)
  

#define kkt_driver_classic_interface_SearchTimeout_get(self_) self_->Get_SearchTimeout()
#define kkt_driver_classic_interface_SearchTimeout_set(self_, val_) self_->Set_SearchTimeout(val_)
  

#define kkt_driver_classic_interface_SerialNumber_get(self_) *new std::string(self_->Get_SerialNumber())
  

#define kkt_driver_classic_interface_SerialNumber_set(self_, val_) self_->Set_SerialNumber(val_)
    

#define kkt_driver_classic_interface_SerialNumberAsInteger_get(self_) self_->Get_SerialNumberAsInteger()
  

#define kkt_driver_classic_interface_ServerConnected_get(self_) self_->Get_ServerConnected()
  

#define kkt_driver_classic_interface_ServerVersion_get(self_) *new std::string(self_->Get_ServerVersion())
  

#define kkt_driver_classic_interface_SessionNumber_get(self_) self_->Get_SessionNumber()
#define kkt_driver_classic_interface_SessionNumber_set(self_, val_) self_->Set_SessionNumber(val_)
  

#define kkt_driver_classic_interface_ShowProgress_get(self_) self_->Get_ShowProgress()
#define kkt_driver_classic_interface_ShowProgress_set(self_, val_) self_->Set_ShowProgress(val_)
  

#define kkt_driver_classic_interface_ShowTagNumber_get(self_) self_->Get_ShowTagNumber()
#define kkt_driver_classic_interface_ShowTagNumber_set(self_, val_) self_->Set_ShowTagNumber(val_)
  

#define kkt_driver_classic_interface_SKNOError_get(self_) self_->Get_SKNOError()
#define kkt_driver_classic_interface_SKNOError_set(self_, val_) self_->Set_SKNOError(val_)
  

#define kkt_driver_classic_interface_SKNOIdentifier_get(self_) *new std::string(self_->Get_SKNOIdentifier())
  

#define kkt_driver_classic_interface_SKNOIdentifier_set(self_, val_) self_->Set_SKNOIdentifier(val_)
    

#define kkt_driver_classic_interface_SKNOStatus_get(self_) self_->Get_SKNOStatus()
#define kkt_driver_classic_interface_SKNOStatus_set(self_, val_) self_->Set_SKNOStatus(val_)
  

#define kkt_driver_classic_interface_SlipDocumentIsMoving_get(self_) self_->Get_SlipDocumentIsMoving()
  

#define kkt_driver_classic_interface_SlipDocumentIsPresent_get(self_) self_->Get_SlipDocumentIsPresent()
  

#define kkt_driver_classic_interface_SlipDocumentLength_get(self_) self_->Get_SlipDocumentLength()
#define kkt_driver_classic_interface_SlipDocumentLength_set(self_, val_) self_->Set_SlipDocumentLength(val_)
  

#define kkt_driver_classic_interface_SlipDocumentWidth_get(self_) self_->Get_SlipDocumentWidth()
#define kkt_driver_classic_interface_SlipDocumentWidth_set(self_, val_) self_->Set_SlipDocumentWidth(val_)
  

#define kkt_driver_classic_interface_SlipEqualStringIntervals_get(self_) self_->Get_SlipEqualStringIntervals()
#define kkt_driver_classic_interface_SlipEqualStringIntervals_set(self_, val_) self_->Set_SlipEqualStringIntervals(val_)
  

#define kkt_driver_classic_interface_SlipStringInterval_get(self_) self_->Get_SlipStringInterval()
#define kkt_driver_classic_interface_SlipStringInterval_set(self_, val_) self_->Set_SlipStringInterval(val_)
  

#define kkt_driver_classic_interface_SlipStringIntervals_get(self_) *new std::string(self_->Get_SlipStringIntervals())
  

#define kkt_driver_classic_interface_SlipStringIntervals_set(self_, val_) self_->Set_SlipStringIntervals(val_)
    

#define kkt_driver_classic_interface_StringForPrinting_get(self_) *new std::string(self_->Get_StringForPrinting())
  

#define kkt_driver_classic_interface_StringForPrinting_set(self_, val_) self_->Set_StringForPrinting(val_)
    

#define kkt_driver_classic_interface_StringNumber_get(self_) self_->Get_StringNumber()
#define kkt_driver_classic_interface_StringNumber_set(self_, val_) self_->Set_StringNumber(val_)
  

#define kkt_driver_classic_interface_StringQuantity_get(self_) self_->Get_StringQuantity()
#define kkt_driver_classic_interface_StringQuantity_set(self_, val_) self_->Set_StringQuantity(val_)
  

#define kkt_driver_classic_interface_StringQuantityInOperation_get(self_) self_->Get_StringQuantityInOperation()
#define kkt_driver_classic_interface_StringQuantityInOperation_set(self_, val_) self_->Set_StringQuantityInOperation(val_)
  

#define kkt_driver_classic_interface_SubTotalFont_get(self_) self_->Get_SubTotalFont()
#define kkt_driver_classic_interface_SubTotalFont_set(self_, val_) self_->Set_SubTotalFont(val_)
  

#define kkt_driver_classic_interface_SubTotalOffset_get(self_) self_->Get_SubTotalOffset()
#define kkt_driver_classic_interface_SubTotalOffset_set(self_, val_) self_->Set_SubTotalOffset(val_)
  

#define kkt_driver_classic_interface_SubTotalStringNumber_get(self_) self_->Get_SubTotalStringNumber()
#define kkt_driver_classic_interface_SubTotalStringNumber_set(self_, val_) self_->Set_SubTotalStringNumber(val_)
  

#define kkt_driver_classic_interface_SubTotalSumFont_get(self_) self_->Get_SubTotalSumFont()
#define kkt_driver_classic_interface_SubTotalSumFont_set(self_, val_) self_->Set_SubTotalSumFont(val_)
  

#define kkt_driver_classic_interface_SubTotalSumOffset_get(self_) self_->Get_SubTotalSumOffset()
#define kkt_driver_classic_interface_SubTotalSumOffset_set(self_, val_) self_->Set_SubTotalSumOffset(val_)
  

#define kkt_driver_classic_interface_SubTotalSymbolNumber_get(self_) self_->Get_SubTotalSymbolNumber()
#define kkt_driver_classic_interface_SubTotalSymbolNumber_set(self_, val_) self_->Set_SubTotalSymbolNumber(val_)
  

#define kkt_driver_classic_interface_Summ1_get(self_) self_->Get_Summ1()
#define kkt_driver_classic_interface_Summ1_set(self_, val_) self_->Set_Summ1(val_)
  

#define kkt_driver_classic_interface_Summ1Font_get(self_) self_->Get_Summ1Font()
#define kkt_driver_classic_interface_Summ1Font_set(self_, val_) self_->Set_Summ1Font(val_)
  

#define kkt_driver_classic_interface_Summ1NameFont_get(self_) self_->Get_Summ1NameFont()
#define kkt_driver_classic_interface_Summ1NameFont_set(self_, val_) self_->Set_Summ1NameFont(val_)
  

#define kkt_driver_classic_interface_Summ1NameOffset_get(self_) self_->Get_Summ1NameOffset()
#define kkt_driver_classic_interface_Summ1NameOffset_set(self_, val_) self_->Set_Summ1NameOffset(val_)
  

#define kkt_driver_classic_interface_Summ1Offset_get(self_) self_->Get_Summ1Offset()
#define kkt_driver_classic_interface_Summ1Offset_set(self_, val_) self_->Set_Summ1Offset(val_)
  

#define kkt_driver_classic_interface_Summ1StringNumber_get(self_) self_->Get_Summ1StringNumber()
#define kkt_driver_classic_interface_Summ1StringNumber_set(self_, val_) self_->Set_Summ1StringNumber(val_)
  

#define kkt_driver_classic_interface_Summ1SymbolNumber_get(self_) self_->Get_Summ1SymbolNumber()
#define kkt_driver_classic_interface_Summ1SymbolNumber_set(self_, val_) self_->Set_Summ1SymbolNumber(val_)
  

#define kkt_driver_classic_interface_Summ2_get(self_) self_->Get_Summ2()
#define kkt_driver_classic_interface_Summ2_set(self_, val_) self_->Set_Summ2(val_)
  

#define kkt_driver_classic_interface_Summ2Font_get(self_) self_->Get_Summ2Font()
#define kkt_driver_classic_interface_Summ2Font_set(self_, val_) self_->Set_Summ2Font(val_)
  

#define kkt_driver_classic_interface_Summ2NameFont_get(self_) self_->Get_Summ2NameFont()
#define kkt_driver_classic_interface_Summ2NameFont_set(self_, val_) self_->Set_Summ2NameFont(val_)
  

#define kkt_driver_classic_interface_Summ2NameOffset_get(self_) self_->Get_Summ2NameOffset()
#define kkt_driver_classic_interface_Summ2NameOffset_set(self_, val_) self_->Set_Summ2NameOffset(val_)
  

#define kkt_driver_classic_interface_Summ2Offset_get(self_) self_->Get_Summ2Offset()
#define kkt_driver_classic_interface_Summ2Offset_set(self_, val_) self_->Set_Summ2Offset(val_)
  

#define kkt_driver_classic_interface_Summ2StringNumber_get(self_) self_->Get_Summ2StringNumber()
#define kkt_driver_classic_interface_Summ2StringNumber_set(self_, val_) self_->Set_Summ2StringNumber(val_)
  

#define kkt_driver_classic_interface_Summ2SymbolNumber_get(self_) self_->Get_Summ2SymbolNumber()
#define kkt_driver_classic_interface_Summ2SymbolNumber_set(self_, val_) self_->Set_Summ2SymbolNumber(val_)
  

#define kkt_driver_classic_interface_Summ3_get(self_) self_->Get_Summ3()
#define kkt_driver_classic_interface_Summ3_set(self_, val_) self_->Set_Summ3(val_)
  

#define kkt_driver_classic_interface_Summ3Font_get(self_) self_->Get_Summ3Font()
#define kkt_driver_classic_interface_Summ3Font_set(self_, val_) self_->Set_Summ3Font(val_)
  

#define kkt_driver_classic_interface_Summ3NameFont_get(self_) self_->Get_Summ3NameFont()
#define kkt_driver_classic_interface_Summ3NameFont_set(self_, val_) self_->Set_Summ3NameFont(val_)
  

#define kkt_driver_classic_interface_Summ3NameOffset_get(self_) self_->Get_Summ3NameOffset()
#define kkt_driver_classic_interface_Summ3NameOffset_set(self_, val_) self_->Set_Summ3NameOffset(val_)
  

#define kkt_driver_classic_interface_Summ3Offset_get(self_) self_->Get_Summ3Offset()
#define kkt_driver_classic_interface_Summ3Offset_set(self_, val_) self_->Set_Summ3Offset(val_)
  

#define kkt_driver_classic_interface_Summ3StringNumber_get(self_) self_->Get_Summ3StringNumber()
#define kkt_driver_classic_interface_Summ3StringNumber_set(self_, val_) self_->Set_Summ3StringNumber(val_)
  

#define kkt_driver_classic_interface_Summ3SymbolNumber_get(self_) self_->Get_Summ3SymbolNumber()
#define kkt_driver_classic_interface_Summ3SymbolNumber_set(self_, val_) self_->Set_Summ3SymbolNumber(val_)
  

#define kkt_driver_classic_interface_Summ4_get(self_) self_->Get_Summ4()
#define kkt_driver_classic_interface_Summ4_set(self_, val_) self_->Set_Summ4(val_)
  

#define kkt_driver_classic_interface_Summ4Font_get(self_) self_->Get_Summ4Font()
#define kkt_driver_classic_interface_Summ4Font_set(self_, val_) self_->Set_Summ4Font(val_)
  

#define kkt_driver_classic_interface_Summ4NameFont_get(self_) self_->Get_Summ4NameFont()
#define kkt_driver_classic_interface_Summ4NameFont_set(self_, val_) self_->Set_Summ4NameFont(val_)
  

#define kkt_driver_classic_interface_Summ4NameOffset_get(self_) self_->Get_Summ4NameOffset()
#define kkt_driver_classic_interface_Summ4NameOffset_set(self_, val_) self_->Set_Summ4NameOffset(val_)
  

#define kkt_driver_classic_interface_Summ4Offset_get(self_) self_->Get_Summ4Offset()
#define kkt_driver_classic_interface_Summ4Offset_set(self_, val_) self_->Set_Summ4Offset(val_)
  

#define kkt_driver_classic_interface_Summ4StringNumber_get(self_) self_->Get_Summ4StringNumber()
#define kkt_driver_classic_interface_Summ4StringNumber_set(self_, val_) self_->Set_Summ4StringNumber(val_)
  

#define kkt_driver_classic_interface_Summ4SymbolNumber_get(self_) self_->Get_Summ4SymbolNumber()
#define kkt_driver_classic_interface_Summ4SymbolNumber_set(self_, val_) self_->Set_Summ4SymbolNumber(val_)
  

#define kkt_driver_classic_interface_Summ5_get(self_) self_->Get_Summ5()
#define kkt_driver_classic_interface_Summ5_set(self_, val_) self_->Set_Summ5(val_)
  

#define kkt_driver_classic_interface_Summ6_get(self_) self_->Get_Summ6()
#define kkt_driver_classic_interface_Summ6_set(self_, val_) self_->Set_Summ6(val_)
  

#define kkt_driver_classic_interface_Summ7_get(self_) self_->Get_Summ7()
#define kkt_driver_classic_interface_Summ7_set(self_, val_) self_->Set_Summ7(val_)
  

#define kkt_driver_classic_interface_Summ8_get(self_) self_->Get_Summ8()
#define kkt_driver_classic_interface_Summ8_set(self_, val_) self_->Set_Summ8(val_)
  

#define kkt_driver_classic_interface_Summ9_get(self_) self_->Get_Summ9()
#define kkt_driver_classic_interface_Summ9_set(self_, val_) self_->Set_Summ9(val_)
  

#define kkt_driver_classic_interface_Summ10_get(self_) self_->Get_Summ10()
#define kkt_driver_classic_interface_Summ10_set(self_, val_) self_->Set_Summ10(val_)
  

#define kkt_driver_classic_interface_Summ11_get(self_) self_->Get_Summ11()
#define kkt_driver_classic_interface_Summ11_set(self_, val_) self_->Set_Summ11(val_)
  

#define kkt_driver_classic_interface_Summ12_get(self_) self_->Get_Summ12()
#define kkt_driver_classic_interface_Summ12_set(self_, val_) self_->Set_Summ12(val_)
  

#define kkt_driver_classic_interface_Summ13_get(self_) self_->Get_Summ13()
#define kkt_driver_classic_interface_Summ13_set(self_, val_) self_->Set_Summ13(val_)
  

#define kkt_driver_classic_interface_Summ14_get(self_) self_->Get_Summ14()
#define kkt_driver_classic_interface_Summ14_set(self_, val_) self_->Set_Summ14(val_)
  

#define kkt_driver_classic_interface_Summ15_get(self_) self_->Get_Summ15()
#define kkt_driver_classic_interface_Summ15_set(self_, val_) self_->Set_Summ15(val_)
  

#define kkt_driver_classic_interface_Summ16_get(self_) self_->Get_Summ16()
#define kkt_driver_classic_interface_Summ16_set(self_, val_) self_->Set_Summ16(val_)
  

#define kkt_driver_classic_interface_Summ17_get(self_) self_->Get_Summ17()
#define kkt_driver_classic_interface_Summ17_set(self_, val_) self_->Set_Summ17(val_)
  

#define kkt_driver_classic_interface_Summ18_get(self_) self_->Get_Summ18()
#define kkt_driver_classic_interface_Summ18_set(self_, val_) self_->Set_Summ18(val_)
  

#define kkt_driver_classic_interface_Summ19_get(self_) self_->Get_Summ19()
#define kkt_driver_classic_interface_Summ19_set(self_, val_) self_->Set_Summ19(val_)
  

#define kkt_driver_classic_interface_Summ20_get(self_) self_->Get_Summ20()
#define kkt_driver_classic_interface_Summ20_set(self_, val_) self_->Set_Summ20(val_)
  

#define kkt_driver_classic_interface_SummFont_get(self_) self_->Get_SummFont()
#define kkt_driver_classic_interface_SummFont_set(self_, val_) self_->Set_SummFont(val_)
  

#define kkt_driver_classic_interface_SummOffset_get(self_) self_->Get_SummOffset()
#define kkt_driver_classic_interface_SummOffset_set(self_, val_) self_->Set_SummOffset(val_)
  

#define kkt_driver_classic_interface_SummStringNumber_get(self_) self_->Get_SummStringNumber()
#define kkt_driver_classic_interface_SummStringNumber_set(self_, val_) self_->Set_SummStringNumber(val_)
  

#define kkt_driver_classic_interface_SummSymbolNumber_get(self_) self_->Get_SummSymbolNumber()
#define kkt_driver_classic_interface_SummSymbolNumber_set(self_, val_) self_->Set_SummSymbolNumber(val_)
  

#define kkt_driver_classic_interface_SwapBytesMode_get(self_) self_->Get_SwapBytesMode()
#define kkt_driver_classic_interface_SwapBytesMode_set(self_, val_) self_->Set_SwapBytesMode(val_)
  

#define kkt_driver_classic_interface_SyncTimeout_get(self_) self_->Get_SyncTimeout()
#define kkt_driver_classic_interface_SyncTimeout_set(self_, val_) self_->Set_SyncTimeout(val_)
  

#define kkt_driver_classic_interface_SysAdminPassword_get(self_) self_->Get_SysAdminPassword()
#define kkt_driver_classic_interface_SysAdminPassword_set(self_, val_) self_->Set_SysAdminPassword(val_)
  

#define kkt_driver_classic_interface_TableName_get(self_) *new std::string(self_->Get_TableName())
  

#define kkt_driver_classic_interface_TableNumber_get(self_) self_->Get_TableNumber()
#define kkt_driver_classic_interface_TableNumber_set(self_, val_) self_->Set_TableNumber(val_)
  

#define kkt_driver_classic_interface_TagDescription_get(self_) *new std::string(self_->Get_TagDescription())
  

#define kkt_driver_classic_interface_TagDescription_set(self_, val_) self_->Set_TagDescription(val_)
    

#define kkt_driver_classic_interface_TagID_get(self_) self_->Get_TagID()
#define kkt_driver_classic_interface_TagID_set(self_, val_) self_->Set_TagID(val_)
  

#define kkt_driver_classic_interface_TagType_get(self_) self_->Get_TagType()
#define kkt_driver_classic_interface_TagType_set(self_, val_) self_->Set_TagType(val_)
  

#define kkt_driver_classic_interface_TagNumber_get(self_) self_->Get_TagNumber()
#define kkt_driver_classic_interface_TagNumber_set(self_, val_) self_->Set_TagNumber(val_)
  

#define kkt_driver_classic_interface_TagValueBin_get(self_) *new std::string(self_->Get_TagValueBin())
  

#define kkt_driver_classic_interface_TagValueBin_set(self_, val_) self_->Set_TagValueBin(val_)
    

#define kkt_driver_classic_interface_TagValueDateTime_get(self_) self_->Get_TagValueDateTime()
#define kkt_driver_classic_interface_TagValueDateTime_set(self_, val_) self_->Set_TagValueDateTime(val_)
  

#define kkt_driver_classic_interface_TagValueFVLN_get(self_) self_->Get_TagValueFVLN()
#define kkt_driver_classic_interface_TagValueFVLN_set(self_, val_) self_->Set_TagValueFVLN(val_)
  

#define kkt_driver_classic_interface_TagValueLength_get(self_) self_->Get_TagValueLength()
#define kkt_driver_classic_interface_TagValueLength_set(self_, val_) self_->Set_TagValueLength(val_)
  

#define kkt_driver_classic_interface_TagValueInt_get(self_) self_->Get_TagValueInt()
#define kkt_driver_classic_interface_TagValueInt_set(self_, val_) self_->Set_TagValueInt(val_)
  

#define kkt_driver_classic_interface_TagValueStr_get(self_) *new std::string(self_->Get_TagValueStr())
  

#define kkt_driver_classic_interface_TagValueStr_set(self_, val_) self_->Set_TagValueStr(val_)
    

#define kkt_driver_classic_interface_TaxValue1_get(self_) self_->Get_TaxValue1()
#define kkt_driver_classic_interface_TaxValue1_set(self_, val_) self_->Set_TaxValue1(val_)
  

#define kkt_driver_classic_interface_TaxValue2_get(self_) self_->Get_TaxValue2()
#define kkt_driver_classic_interface_TaxValue2_set(self_, val_) self_->Set_TaxValue2(val_)
  

#define kkt_driver_classic_interface_TaxValue3_get(self_) self_->Get_TaxValue3()
#define kkt_driver_classic_interface_TaxValue3_set(self_, val_) self_->Set_TaxValue3(val_)
  

#define kkt_driver_classic_interface_TaxValue4_get(self_) self_->Get_TaxValue4()
#define kkt_driver_classic_interface_TaxValue4_set(self_, val_) self_->Set_TaxValue4(val_)
  

#define kkt_driver_classic_interface_TaxValue5_get(self_) self_->Get_TaxValue5()
#define kkt_driver_classic_interface_TaxValue5_set(self_, val_) self_->Set_TaxValue5(val_)
  

#define kkt_driver_classic_interface_TaxValue6_get(self_) self_->Get_TaxValue6()
#define kkt_driver_classic_interface_TaxValue6_set(self_, val_) self_->Set_TaxValue6(val_)
  

#define kkt_driver_classic_interface_TaxValue7_get(self_) self_->Get_TaxValue7()
#define kkt_driver_classic_interface_TaxValue7_set(self_, val_) self_->Set_TaxValue7(val_)
  

#define kkt_driver_classic_interface_TaxValue8_get(self_) self_->Get_TaxValue8()
#define kkt_driver_classic_interface_TaxValue8_set(self_, val_) self_->Set_TaxValue8(val_)
  

#define kkt_driver_classic_interface_TaxValue9_get(self_) self_->Get_TaxValue9()
#define kkt_driver_classic_interface_TaxValue9_set(self_, val_) self_->Set_TaxValue9(val_)
  

#define kkt_driver_classic_interface_TaxValue10_get(self_) self_->Get_TaxValue10()
#define kkt_driver_classic_interface_TaxValue10_set(self_, val_) self_->Set_TaxValue10(val_)
  

#define kkt_driver_classic_interface_TaxValue1Enabled_get(self_) self_->Get_TaxValue1Enabled()
#define kkt_driver_classic_interface_TaxValue1Enabled_set(self_, val_) self_->Set_TaxValue1Enabled(val_)
  

#define kkt_driver_classic_interface_Tax1_get(self_) self_->Get_Tax1()
#define kkt_driver_classic_interface_Tax1_set(self_, val_) self_->Set_Tax1(val_)
  

#define kkt_driver_classic_interface_Tax1NameFont_get(self_) self_->Get_Tax1NameFont()
#define kkt_driver_classic_interface_Tax1NameFont_set(self_, val_) self_->Set_Tax1NameFont(val_)
  

#define kkt_driver_classic_interface_Tax1NameOffset_get(self_) self_->Get_Tax1NameOffset()
#define kkt_driver_classic_interface_Tax1NameOffset_set(self_, val_) self_->Set_Tax1NameOffset(val_)
  

#define kkt_driver_classic_interface_Tax1NameSymbolNumber_get(self_) self_->Get_Tax1NameSymbolNumber()
#define kkt_driver_classic_interface_Tax1NameSymbolNumber_set(self_, val_) self_->Set_Tax1NameSymbolNumber(val_)
  

#define kkt_driver_classic_interface_Tax1RateFont_get(self_) self_->Get_Tax1RateFont()
#define kkt_driver_classic_interface_Tax1RateFont_set(self_, val_) self_->Set_Tax1RateFont(val_)
  

#define kkt_driver_classic_interface_Tax1RateOffset_get(self_) self_->Get_Tax1RateOffset()
#define kkt_driver_classic_interface_Tax1RateOffset_set(self_, val_) self_->Set_Tax1RateOffset(val_)
  

#define kkt_driver_classic_interface_Tax1RateSymbolNumber_get(self_) self_->Get_Tax1RateSymbolNumber()
#define kkt_driver_classic_interface_Tax1RateSymbolNumber_set(self_, val_) self_->Set_Tax1RateSymbolNumber(val_)
  

#define kkt_driver_classic_interface_Tax1SumFont_get(self_) self_->Get_Tax1SumFont()
#define kkt_driver_classic_interface_Tax1SumFont_set(self_, val_) self_->Set_Tax1SumFont(val_)
  

#define kkt_driver_classic_interface_Tax1SumOffset_get(self_) self_->Get_Tax1SumOffset()
#define kkt_driver_classic_interface_Tax1SumOffset_set(self_, val_) self_->Set_Tax1SumOffset(val_)
  

#define kkt_driver_classic_interface_Tax1SumStringNumber_get(self_) self_->Get_Tax1SumStringNumber()
#define kkt_driver_classic_interface_Tax1SumStringNumber_set(self_, val_) self_->Set_Tax1SumStringNumber(val_)
  

#define kkt_driver_classic_interface_Tax1SumSymbolNumber_get(self_) self_->Get_Tax1SumSymbolNumber()
#define kkt_driver_classic_interface_Tax1SumSymbolNumber_set(self_, val_) self_->Set_Tax1SumSymbolNumber(val_)
  

#define kkt_driver_classic_interface_Tax1TurnOverOffset_get(self_) self_->Get_Tax1TurnOverOffset()
#define kkt_driver_classic_interface_Tax1TurnOverOffset_set(self_, val_) self_->Set_Tax1TurnOverOffset(val_)
  

#define kkt_driver_classic_interface_Tax1TurnOverStringNumber_get(self_) self_->Get_Tax1TurnOverStringNumber()
#define kkt_driver_classic_interface_Tax1TurnOverStringNumber_set(self_, val_) self_->Set_Tax1TurnOverStringNumber(val_)
  

#define kkt_driver_classic_interface_Tax2_get(self_) self_->Get_Tax2()
#define kkt_driver_classic_interface_Tax2_set(self_, val_) self_->Set_Tax2(val_)
  

#define kkt_driver_classic_interface_Tax2NameFont_get(self_) self_->Get_Tax2NameFont()
#define kkt_driver_classic_interface_Tax2NameFont_set(self_, val_) self_->Set_Tax2NameFont(val_)
  

#define kkt_driver_classic_interface_Tax2NameOffset_get(self_) self_->Get_Tax2NameOffset()
#define kkt_driver_classic_interface_Tax2NameOffset_set(self_, val_) self_->Set_Tax2NameOffset(val_)
  

#define kkt_driver_classic_interface_Tax2NameSymbolNumber_get(self_) self_->Get_Tax2NameSymbolNumber()
#define kkt_driver_classic_interface_Tax2NameSymbolNumber_set(self_, val_) self_->Set_Tax2NameSymbolNumber(val_)
  

#define kkt_driver_classic_interface_Tax2RateFont_get(self_) self_->Get_Tax2RateFont()
#define kkt_driver_classic_interface_Tax2RateFont_set(self_, val_) self_->Set_Tax2RateFont(val_)
  

#define kkt_driver_classic_interface_Tax2RateOffset_get(self_) self_->Get_Tax2RateOffset()
#define kkt_driver_classic_interface_Tax2RateOffset_set(self_, val_) self_->Set_Tax2RateOffset(val_)
  

#define kkt_driver_classic_interface_Tax2RateSymbolNumber_get(self_) self_->Get_Tax2RateSymbolNumber()
#define kkt_driver_classic_interface_Tax2RateSymbolNumber_set(self_, val_) self_->Set_Tax2RateSymbolNumber(val_)
  

#define kkt_driver_classic_interface_Tax2SumFont_get(self_) self_->Get_Tax2SumFont()
#define kkt_driver_classic_interface_Tax2SumFont_set(self_, val_) self_->Set_Tax2SumFont(val_)
  

#define kkt_driver_classic_interface_Tax2SumOffset_get(self_) self_->Get_Tax2SumOffset()
#define kkt_driver_classic_interface_Tax2SumOffset_set(self_, val_) self_->Set_Tax2SumOffset(val_)
  

#define kkt_driver_classic_interface_Tax2SumStringNumber_get(self_) self_->Get_Tax2SumStringNumber()
#define kkt_driver_classic_interface_Tax2SumStringNumber_set(self_, val_) self_->Set_Tax2SumStringNumber(val_)
  

#define kkt_driver_classic_interface_Tax2SumSymbolNumber_get(self_) self_->Get_Tax2SumSymbolNumber()
#define kkt_driver_classic_interface_Tax2SumSymbolNumber_set(self_, val_) self_->Set_Tax2SumSymbolNumber(val_)
  

#define kkt_driver_classic_interface_Tax2TurnOverOffset_get(self_) self_->Get_Tax2TurnOverOffset()
#define kkt_driver_classic_interface_Tax2TurnOverOffset_set(self_, val_) self_->Set_Tax2TurnOverOffset(val_)
  

#define kkt_driver_classic_interface_Tax2TurnOverOffset_get(self_) self_->Get_Tax2TurnOverOffset()
#define kkt_driver_classic_interface_Tax2TurnOverOffset_set(self_, val_) self_->Set_Tax2TurnOverOffset(val_)
  

#define kkt_driver_classic_interface_Tax2TurnOverStringNumber_get(self_) self_->Get_Tax2TurnOverStringNumber()
#define kkt_driver_classic_interface_Tax2TurnOverStringNumber_set(self_, val_) self_->Set_Tax2TurnOverStringNumber(val_)
  

#define kkt_driver_classic_interface_Tax2TurnOverSymbolNumber_get(self_) self_->Get_Tax2TurnOverSymbolNumber()
#define kkt_driver_classic_interface_Tax2TurnOverSymbolNumber_set(self_, val_) self_->Set_Tax2TurnOverSymbolNumber(val_)
  

#define kkt_driver_classic_interface_Tax3_get(self_) self_->Get_Tax3()
#define kkt_driver_classic_interface_Tax3_set(self_, val_) self_->Set_Tax3(val_)
  

#define kkt_driver_classic_interface_Tax3NameFont_get(self_) self_->Get_Tax3NameFont()
#define kkt_driver_classic_interface_Tax3NameFont_set(self_, val_) self_->Set_Tax3NameFont(val_)
  

#define kkt_driver_classic_interface_Tax3NameOffset_get(self_) self_->Get_Tax3NameOffset()
#define kkt_driver_classic_interface_Tax3NameOffset_set(self_, val_) self_->Set_Tax3NameOffset(val_)
  

#define kkt_driver_classic_interface_Tax3NameSymbolNumber_get(self_) self_->Get_Tax3NameSymbolNumber()
#define kkt_driver_classic_interface_Tax3NameSymbolNumber_set(self_, val_) self_->Set_Tax3NameSymbolNumber(val_)
  

#define kkt_driver_classic_interface_Tax3RateFont_get(self_) self_->Get_Tax3RateFont()
#define kkt_driver_classic_interface_Tax3RateFont_set(self_, val_) self_->Set_Tax3RateFont(val_)
  

#define kkt_driver_classic_interface_Tax3RateOffset_get(self_) self_->Get_Tax3RateOffset()
#define kkt_driver_classic_interface_Tax3RateOffset_set(self_, val_) self_->Set_Tax3RateOffset(val_)
  

#define kkt_driver_classic_interface_Tax3RateSymbolNumber_get(self_) self_->Get_Tax3RateSymbolNumber()
#define kkt_driver_classic_interface_Tax3RateSymbolNumber_set(self_, val_) self_->Set_Tax3RateSymbolNumber(val_)
  

#define kkt_driver_classic_interface_Tax3SumFont_get(self_) self_->Get_Tax3SumFont()
#define kkt_driver_classic_interface_Tax3SumFont_set(self_, val_) self_->Set_Tax3SumFont(val_)
  

#define kkt_driver_classic_interface_Tax3SumOffset_get(self_) self_->Get_Tax3SumOffset()
#define kkt_driver_classic_interface_Tax3SumOffset_set(self_, val_) self_->Set_Tax3SumOffset(val_)
  

#define kkt_driver_classic_interface_Tax3SumStringNumber_get(self_) self_->Get_Tax3SumStringNumber()
#define kkt_driver_classic_interface_Tax3SumStringNumber_set(self_, val_) self_->Set_Tax3SumStringNumber(val_)
  

#define kkt_driver_classic_interface_Tax3SumSymbolNumber_get(self_) self_->Get_Tax3SumSymbolNumber()
#define kkt_driver_classic_interface_Tax3SumSymbolNumber_set(self_, val_) self_->Set_Tax3SumSymbolNumber(val_)
  

#define kkt_driver_classic_interface_Tax3TurnOverOffset_get(self_) self_->Get_Tax3TurnOverOffset()
#define kkt_driver_classic_interface_Tax3TurnOverOffset_set(self_, val_) self_->Set_Tax3TurnOverOffset(val_)
  

#define kkt_driver_classic_interface_Tax3TurnOverOffset_get(self_) self_->Get_Tax3TurnOverOffset()
#define kkt_driver_classic_interface_Tax3TurnOverOffset_set(self_, val_) self_->Set_Tax3TurnOverOffset(val_)
  

#define kkt_driver_classic_interface_Tax3TurnOverStringNumber_get(self_) self_->Get_Tax3TurnOverStringNumber()
#define kkt_driver_classic_interface_Tax3TurnOverStringNumber_set(self_, val_) self_->Set_Tax3TurnOverStringNumber(val_)
  

#define kkt_driver_classic_interface_Tax3TurnOverSymbolNumber_get(self_) self_->Get_Tax3TurnOverSymbolNumber()
#define kkt_driver_classic_interface_Tax3TurnOverSymbolNumber_set(self_, val_) self_->Set_Tax3TurnOverSymbolNumber(val_)
  

#define kkt_driver_classic_interface_Tax4_get(self_) self_->Get_Tax4()
#define kkt_driver_classic_interface_Tax4_set(self_, val_) self_->Set_Tax4(val_)
  

#define kkt_driver_classic_interface_Tax4NameFont_get(self_) self_->Get_Tax4NameFont()
#define kkt_driver_classic_interface_Tax4NameFont_set(self_, val_) self_->Set_Tax4NameFont(val_)
  

#define kkt_driver_classic_interface_Tax4NameOffset_get(self_) self_->Get_Tax4NameOffset()
#define kkt_driver_classic_interface_Tax4NameOffset_set(self_, val_) self_->Set_Tax4NameOffset(val_)
  

#define kkt_driver_classic_interface_Tax4NameSymbolNumber_get(self_) self_->Get_Tax4NameSymbolNumber()
#define kkt_driver_classic_interface_Tax4NameSymbolNumber_set(self_, val_) self_->Set_Tax4NameSymbolNumber(val_)
  

#define kkt_driver_classic_interface_Tax4RateFont_get(self_) self_->Get_Tax4RateFont()
#define kkt_driver_classic_interface_Tax4RateFont_set(self_, val_) self_->Set_Tax4RateFont(val_)
  

#define kkt_driver_classic_interface_Tax4RateOffset_get(self_) self_->Get_Tax4RateOffset()
#define kkt_driver_classic_interface_Tax4RateOffset_set(self_, val_) self_->Set_Tax4RateOffset(val_)
  

#define kkt_driver_classic_interface_Tax4RateSymbolNumber_get(self_) self_->Get_Tax4RateSymbolNumber()
#define kkt_driver_classic_interface_Tax4RateSymbolNumber_set(self_, val_) self_->Set_Tax4RateSymbolNumber(val_)
  

#define kkt_driver_classic_interface_Tax4SumFont_get(self_) self_->Get_Tax4SumFont()
#define kkt_driver_classic_interface_Tax4SumFont_set(self_, val_) self_->Set_Tax4SumFont(val_)
  

#define kkt_driver_classic_interface_Tax4SumOffset_get(self_) self_->Get_Tax4SumOffset()
#define kkt_driver_classic_interface_Tax4SumOffset_set(self_, val_) self_->Set_Tax4SumOffset(val_)
  

#define kkt_driver_classic_interface_Tax4SumStringNumber_get(self_) self_->Get_Tax4SumStringNumber()
#define kkt_driver_classic_interface_Tax4SumStringNumber_set(self_, val_) self_->Set_Tax4SumStringNumber(val_)
  

#define kkt_driver_classic_interface_Tax4SumSymbolNumber_get(self_) self_->Get_Tax4SumSymbolNumber()
#define kkt_driver_classic_interface_Tax4SumSymbolNumber_set(self_, val_) self_->Set_Tax4SumSymbolNumber(val_)
  

#define kkt_driver_classic_interface_Tax4TurnOverOffset_get(self_) self_->Get_Tax4TurnOverOffset()
#define kkt_driver_classic_interface_Tax4TurnOverOffset_set(self_, val_) self_->Set_Tax4TurnOverOffset(val_)
  

#define kkt_driver_classic_interface_Tax4TurnOverOffset_get(self_) self_->Get_Tax4TurnOverOffset()
#define kkt_driver_classic_interface_Tax4TurnOverOffset_set(self_, val_) self_->Set_Tax4TurnOverOffset(val_)
  

#define kkt_driver_classic_interface_Tax4TurnOverStringNumber_get(self_) self_->Get_Tax4TurnOverStringNumber()
#define kkt_driver_classic_interface_Tax4TurnOverStringNumber_set(self_, val_) self_->Set_Tax4TurnOverStringNumber(val_)
  

#define kkt_driver_classic_interface_Tax4TurnOverSymbolNumber_get(self_) self_->Get_Tax4TurnOverSymbolNumber()
#define kkt_driver_classic_interface_Tax4TurnOverSymbolNumber_set(self_, val_) self_->Set_Tax4TurnOverSymbolNumber(val_)
  

#define kkt_driver_classic_interface_TaxType_get(self_) self_->Get_TaxType()
#define kkt_driver_classic_interface_TaxType_set(self_, val_) self_->Set_TaxType(val_)
  

#define kkt_driver_classic_interface_TCPConnectionTimeout_get(self_) self_->Get_TCPConnectionTimeout()
#define kkt_driver_classic_interface_TCPConnectionTimeout_set(self_, val_) self_->Set_TCPConnectionTimeout(val_)
  

#define kkt_driver_classic_interface_TCPPort_get(self_) self_->Get_TCPPort()
#define kkt_driver_classic_interface_TCPPort_set(self_, val_) self_->Set_TCPPort(val_)
  

#define kkt_driver_classic_interface_TextBlock_get(self_) *new std::string(self_->Get_TextBlock())
  

#define kkt_driver_classic_interface_TextBlock_set(self_, val_) self_->Set_TextBlock(val_)
    

#define kkt_driver_classic_interface_TextBlockNumber_get(self_) self_->Get_TextBlockNumber()
#define kkt_driver_classic_interface_TextBlockNumber_set(self_, val_) self_->Set_TextBlockNumber(val_)
  

#define kkt_driver_classic_interface_TextFont_get(self_) self_->Get_TextFont()
#define kkt_driver_classic_interface_TextFont_set(self_, val_) self_->Set_TextFont(val_)
  

#define kkt_driver_classic_interface_TextOffset_get(self_) self_->Get_TextOffset()
#define kkt_driver_classic_interface_TextOffset_set(self_, val_) self_->Set_TextOffset(val_)
  

#define kkt_driver_classic_interface_TextStringNumber_get(self_) self_->Get_TextStringNumber()
#define kkt_driver_classic_interface_TextStringNumber_set(self_, val_) self_->Set_TextStringNumber(val_)
  

#define kkt_driver_classic_interface_TextSymbolNumber_get(self_) self_->Get_TextSymbolNumber()
#define kkt_driver_classic_interface_TextSymbolNumber_set(self_, val_) self_->Set_TextSymbolNumber(val_)
  

#define kkt_driver_classic_interface_Time_get(self_) self_->Get_Time()
#define kkt_driver_classic_interface_Time_set(self_, val_) self_->Set_Time(val_)
  

#define kkt_driver_classic_interface_Time2_get(self_) self_->Get_Time2()
#define kkt_driver_classic_interface_Time2_set(self_, val_) self_->Set_Time2(val_)
  

#define kkt_driver_classic_interface_Timeout_get(self_) self_->Get_Timeout()
#define kkt_driver_classic_interface_Timeout_set(self_, val_) self_->Set_Timeout(val_)
  

#define kkt_driver_classic_interface_TimeoutsUsing_get(self_) self_->Get_TimeoutsUsing()
#define kkt_driver_classic_interface_TimeoutsUsing_set(self_, val_) self_->Set_TimeoutsUsing(val_)
  

#define kkt_driver_classic_interface_TimeStr_get(self_) *new std::string(self_->Get_TimeStr())
  

#define kkt_driver_classic_interface_TimeStr_set(self_, val_) self_->Set_TimeStr(val_)
    

#define kkt_driver_classic_interface_TLVData_get(self_) new std::vector<uint8_t>(self_->Get_TLVData())
  

#define kkt_driver_classic_interface_TLVData_set(self_, val_) self_->Set_TLVData(*val_)
    

#define kkt_driver_classic_interface_TLVDataHex_get(self_) *new std::string(self_->Get_TLVDataHex())
  

#define kkt_driver_classic_interface_TLVDataHex_set(self_, val_) self_->Set_TLVDataHex(val_)
    

#define kkt_driver_classic_interface_Token_get(self_) *new std::string(self_->Get_Token())
  

#define kkt_driver_classic_interface_Token_set(self_, val_) self_->Set_Token(val_)
    

#define kkt_driver_classic_interface_TotalFont_get(self_) self_->Get_TotalFont()
#define kkt_driver_classic_interface_TotalFont_set(self_, val_) self_->Set_TotalFont(val_)
  

#define kkt_driver_classic_interface_TotalOffset_get(self_) self_->Get_TotalOffset()
#define kkt_driver_classic_interface_TotalOffset_set(self_, val_) self_->Set_TotalOffset(val_)
  

#define kkt_driver_classic_interface_TotalStringNumber_get(self_) self_->Get_TotalStringNumber()
#define kkt_driver_classic_interface_TotalStringNumber_set(self_, val_) self_->Set_TotalStringNumber(val_)
  

#define kkt_driver_classic_interface_TotalSumFont_get(self_) self_->Get_TotalSumFont()
#define kkt_driver_classic_interface_TotalSumFont_set(self_, val_) self_->Set_TotalSumFont(val_)
  

#define kkt_driver_classic_interface_TotalSumOffset_get(self_) self_->Get_TotalSumOffset()
#define kkt_driver_classic_interface_TotalSumOffset_set(self_, val_) self_->Set_TotalSumOffset(val_)
  

#define kkt_driver_classic_interface_TotalSymbolNumber_get(self_) self_->Get_TotalSymbolNumber()
#define kkt_driver_classic_interface_TotalSymbolNumber_set(self_, val_) self_->Set_TotalSymbolNumber(val_)
  

#define kkt_driver_classic_interface_TransferBytes_get(self_) *new std::string(self_->Get_TransferBytes())
  

#define kkt_driver_classic_interface_TransferBytes_set(self_, val_) self_->Set_TransferBytes(val_)
    

#define kkt_driver_classic_interface_TranslationEnabled_get(self_) self_->Get_TranslationEnabled()
#define kkt_driver_classic_interface_TranslationEnabled_set(self_, val_) self_->Set_TranslationEnabled(val_)
  

#define kkt_driver_classic_interface_TransmitDocumentNumber_get(self_) self_->Get_TransmitDocumentNumber()
  

#define kkt_driver_classic_interface_TransmitQueueSize_get(self_) self_->Get_TransmitQueueSize()
  

#define kkt_driver_classic_interface_TransmitSessionNumber_get(self_) self_->Get_TransmitSessionNumber()
  

#define kkt_driver_classic_interface_TransmitStatus_get(self_) self_->Get_TransmitStatus()
  

#define kkt_driver_classic_interface_TypeOfLastEntryFM_get(self_) self_->Get_TypeOfLastEntryFM()
  

#define kkt_driver_classic_interface_TypeOfLastEntryFMEx_get(self_) self_->Get_TypeOfLastEntryFMEx()
  

#define kkt_driver_classic_interface_TypeOfSumOfEntriesFM_get(self_) self_->Get_TypeOfSumOfEntriesFM()
#define kkt_driver_classic_interface_TypeOfSumOfEntriesFM_set(self_, val_) self_->Set_TypeOfSumOfEntriesFM(val_)
  

#define kkt_driver_classic_interface_UCodePage_get(self_) self_->Get_UCodePage()
  

#define kkt_driver_classic_interface_UCodePageText_get(self_) *new std::string(self_->Get_UCodePageText())
  

#define kkt_driver_classic_interface_UDescription_get(self_) *new std::string(self_->Get_UDescription())
  

#define kkt_driver_classic_interface_UMajorProtocolVersion_get(self_) self_->Get_UMajorProtocolVersion()
  

#define kkt_driver_classic_interface_UMajorType_get(self_) self_->Get_UMajorType()
  

#define kkt_driver_classic_interface_UMinorProtocolVersion_get(self_) self_->Get_UMinorProtocolVersion()
  

#define kkt_driver_classic_interface_UMinorType_get(self_) self_->Get_UMinorType()
  

#define kkt_driver_classic_interface_UModel_get(self_) self_->Get_UModel()
  

#define kkt_driver_classic_interface_URL_get(self_) *new std::string(self_->Get_URL())
  

#define kkt_driver_classic_interface_URL_set(self_, val_) self_->Set_URL(val_)
    

#define kkt_driver_classic_interface_UseCommandTimeout_get(self_) self_->Get_UseCommandTimeout()
#define kkt_driver_classic_interface_UseCommandTimeout_set(self_, val_) self_->Set_UseCommandTimeout(val_)
  

#define kkt_driver_classic_interface_UseIPAddress_get(self_) self_->Get_UseIPAddress()
#define kkt_driver_classic_interface_UseIPAddress_set(self_, val_) self_->Set_UseIPAddress(val_)
  

#define kkt_driver_classic_interface_UseJournalRibbon_get(self_) self_->Get_UseJournalRibbon()
#define kkt_driver_classic_interface_UseJournalRibbon_set(self_, val_) self_->Set_UseJournalRibbon(val_)
  

#define kkt_driver_classic_interface_UseReceiptRibbon_get(self_) self_->Get_UseReceiptRibbon()
#define kkt_driver_classic_interface_UseReceiptRibbon_set(self_, val_) self_->Set_UseReceiptRibbon(val_)
  

#define kkt_driver_classic_interface_UseSlipCheck_get(self_) self_->Get_UseSlipCheck()
#define kkt_driver_classic_interface_UseSlipCheck_set(self_, val_) self_->Set_UseSlipCheck(val_)
  

#define kkt_driver_classic_interface_UseSlipDocument_get(self_) self_->Get_UseSlipDocument()
#define kkt_driver_classic_interface_UseSlipDocument_set(self_, val_) self_->Set_UseSlipDocument(val_)
  

#define kkt_driver_classic_interface_UseTaxDiscountBel_get(self_) self_->Get_UseTaxDiscountBel()
#define kkt_driver_classic_interface_UseTaxDiscountBel_set(self_, val_) self_->Set_UseTaxDiscountBel(val_)
  

#define kkt_driver_classic_interface_UseWareCode_get(self_) self_->Get_UseWareCode()
#define kkt_driver_classic_interface_UseWareCode_set(self_, val_) self_->Set_UseWareCode(val_)
  

#define kkt_driver_classic_interface_ValueOfFieldInteger_get(self_) self_->Get_ValueOfFieldInteger()
#define kkt_driver_classic_interface_ValueOfFieldInteger_set(self_, val_) self_->Set_ValueOfFieldInteger(val_)
  

#define kkt_driver_classic_interface_ValueOfFieldString_get(self_) *new std::string(self_->Get_ValueOfFieldString())
  

#define kkt_driver_classic_interface_ValueOfFieldString_set(self_, val_) self_->Set_ValueOfFieldString(val_)
    

#define kkt_driver_classic_interface_VertScale_get(self_) self_->Get_VertScale()
#define kkt_driver_classic_interface_VertScale_set(self_, val_) self_->Set_VertScale(val_)
  

#define kkt_driver_classic_interface_WaitForPrintingDelay_get(self_) self_->Get_WaitForPrintingDelay()
#define kkt_driver_classic_interface_WaitForPrintingDelay_set(self_, val_) self_->Set_WaitForPrintingDelay(val_)
  

#define kkt_driver_classic_interface_WareCode_get(self_) self_->Get_WareCode()
#define kkt_driver_classic_interface_WareCode_set(self_, val_) self_->Set_WareCode(val_)
  

#define kkt_driver_classic_interface_SkipPrint_get(self_) self_->Get_SkipPrint()
#define kkt_driver_classic_interface_SkipPrint_set(self_, val_) self_->Set_SkipPrint(val_)
  

#define kkt_driver_classic_interface_DigitalSign_get(self_) *new std::string(self_->Get_DigitalSign())
  

#define kkt_driver_classic_interface_DigitalSign_set(self_, val_) self_->Set_DigitalSign(val_)
    

#define kkt_driver_classic_interface_DeviceFunctionNumber_get(self_) self_->Get_DeviceFunctionNumber()
#define kkt_driver_classic_interface_DeviceFunctionNumber_set(self_, val_) self_->Set_DeviceFunctionNumber(val_)
  

#define kkt_driver_classic_interface_ValueOfFunctionInteger_get(self_) self_->Get_ValueOfFunctionInteger()
#define kkt_driver_classic_interface_ValueOfFunctionInteger_set(self_, val_) self_->Set_ValueOfFunctionInteger(val_)
  

#define kkt_driver_classic_interface_ValueOfFunctionString_get(self_) *new std::string(self_->Get_ValueOfFunctionString())
  

#define kkt_driver_classic_interface_ValueOfFunctionString_set(self_, val_) self_->Set_ValueOfFunctionString(val_)
    

#define kkt_driver_classic_interface_EnableCashcoreMarkCompatibility_get(self_) self_->Get_EnableCashcoreMarkCompatibility()
#define kkt_driver_classic_interface_EnableCashcoreMarkCompatibility_set(self_, val_) self_->Set_EnableCashcoreMarkCompatibility(val_)
  

#define kkt_driver_classic_interface_MarkingType_get(self_) self_->Get_MarkingType()
#define kkt_driver_classic_interface_MarkingType_set(self_, val_) self_->Set_MarkingType(val_)
  

#define kkt_driver_classic_interface_MarkingTypeEx_get(self_) self_->Get_MarkingTypeEx()
#define kkt_driver_classic_interface_MarkingTypeEx_set(self_, val_) self_->Set_MarkingTypeEx(val_)
  

#define kkt_driver_classic_interface_DataBlockSize_get(self_) self_->Get_DataBlockSize()
#define kkt_driver_classic_interface_DataBlockSize_set(self_, val_) self_->Set_DataBlockSize(val_)
  

#define kkt_driver_classic_interface_MessageNumber_get(self_) self_->Get_MessageNumber()
#define kkt_driver_classic_interface_MessageNumber_set(self_, val_) self_->Set_MessageNumber(val_)
  

#define kkt_driver_classic_interface_CheckItemLocalError_get(self_) self_->Get_CheckItemLocalError()
#define kkt_driver_classic_interface_CheckItemLocalError_set(self_, val_) self_->Set_CheckItemLocalError(val_)
  

#define kkt_driver_classic_interface_MeasureUnit_get(self_) self_->Get_MeasureUnit()
#define kkt_driver_classic_interface_MeasureUnit_set(self_, val_) self_->Set_MeasureUnit(val_)
  

#define kkt_driver_classic_interface_DivisionalQuantity_get(self_) self_->Get_DivisionalQuantity()
#define kkt_driver_classic_interface_DivisionalQuantity_set(self_, val_) self_->Set_DivisionalQuantity(val_)
  

#define kkt_driver_classic_interface_Numerator_get(self_) self_->Get_Numerator()
#define kkt_driver_classic_interface_Numerator_set(self_, val_) self_->Set_Numerator(val_)
  

#define kkt_driver_classic_interface_Denominator_get(self_) self_->Get_Denominator()
#define kkt_driver_classic_interface_Denominator_set(self_, val_) self_->Set_Denominator(val_)
  

#define kkt_driver_classic_interface_FreeMemorySize_get(self_) self_->Get_FreeMemorySize()
#define kkt_driver_classic_interface_FreeMemorySize_set(self_, val_) self_->Set_FreeMemorySize(val_)
  

#define kkt_driver_classic_interface_MCCheckStatus_get(self_) self_->Get_MCCheckStatus()
#define kkt_driver_classic_interface_MCCheckStatus_set(self_, val_) self_->Set_MCCheckStatus(val_)
  

#define kkt_driver_classic_interface_MCNotificationStatus_get(self_) self_->Get_MCNotificationStatus()
#define kkt_driver_classic_interface_MCNotificationStatus_set(self_, val_) self_->Set_MCNotificationStatus(val_)
  

#define kkt_driver_classic_interface_MCCommandFlags_get(self_) self_->Get_MCCommandFlags()
#define kkt_driver_classic_interface_MCCommandFlags_set(self_, val_) self_->Set_MCCommandFlags(val_)
  

#define kkt_driver_classic_interface_MCCheckResultSavedCount_get(self_) self_->Get_MCCheckResultSavedCount()
#define kkt_driver_classic_interface_MCCheckResultSavedCount_set(self_, val_) self_->Set_MCCheckResultSavedCount(val_)
  

#define kkt_driver_classic_interface_MCRealizationCount_get(self_) self_->Get_MCRealizationCount()
#define kkt_driver_classic_interface_MCRealizationCount_set(self_, val_) self_->Set_MCRealizationCount(val_)
  

#define kkt_driver_classic_interface_MCStorageSize_get(self_) self_->Get_MCStorageSize()
#define kkt_driver_classic_interface_MCStorageSize_set(self_, val_) self_->Set_MCStorageSize(val_)
  

#define kkt_driver_classic_interface_CheckSum_get(self_) self_->Get_CheckSum()
#define kkt_driver_classic_interface_CheckSum_set(self_, val_) self_->Set_CheckSum(val_)
  

#define kkt_driver_classic_interface_NotificationCount_get(self_) self_->Get_NotificationCount()
#define kkt_driver_classic_interface_NotificationCount_set(self_, val_) self_->Set_NotificationCount(val_)
  

#define kkt_driver_classic_interface_NotificationNumber_get(self_) self_->Get_NotificationNumber()
#define kkt_driver_classic_interface_NotificationNumber_set(self_, val_) self_->Set_NotificationNumber(val_)
  

#define kkt_driver_classic_interface_NotificationSize_get(self_) self_->Get_NotificationSize()
#define kkt_driver_classic_interface_NotificationSize_set(self_, val_) self_->Set_NotificationSize(val_)
  

#define kkt_driver_classic_interface_DataOffset_get(self_) self_->Get_DataOffset()
#define kkt_driver_classic_interface_DataOffset_set(self_, val_) self_->Set_DataOffset(val_)
  

#define kkt_driver_classic_interface_MarkingType2_get(self_) self_->Get_MarkingType2()
#define kkt_driver_classic_interface_MarkingType2_set(self_, val_) self_->Set_MarkingType2(val_)
  

#define kkt_driver_classic_interface_RandomSequence_get(self_) new std::vector<uint8_t>(self_->Get_RandomSequence())
  

#define kkt_driver_classic_interface_RandomSequence_set(self_, val_) self_->Set_RandomSequence(*val_)
    

#define kkt_driver_classic_interface_RandomSequenceHex_get(self_) *new std::string(self_->Get_RandomSequenceHex())
  

#define kkt_driver_classic_interface_RandomSequenceHex_set(self_, val_) self_->Set_RandomSequenceHex(val_)
    

#define kkt_driver_classic_interface_AuthData_get(self_) new std::vector<uint8_t>(self_->Get_AuthData())
  

#define kkt_driver_classic_interface_AuthData_set(self_, val_) self_->Set_AuthData(*val_)
    

#define kkt_driver_classic_interface_ItemStatus_get(self_) self_->Get_ItemStatus()
#define kkt_driver_classic_interface_ItemStatus_set(self_, val_) self_->Set_ItemStatus(val_)
  

#define kkt_driver_classic_interface_CheckItemMode_get(self_) self_->Get_CheckItemMode()
#define kkt_driver_classic_interface_CheckItemMode_set(self_, val_) self_->Set_CheckItemMode(val_)
  

#define kkt_driver_classic_interface_CheckItemLocalResult_get(self_) self_->Get_CheckItemLocalResult()
#define kkt_driver_classic_interface_CheckItemLocalResult_set(self_, val_) self_->Set_CheckItemLocalResult(val_)
  

#define kkt_driver_classic_interface_KMServerErrorCode_get(self_) self_->Get_KMServerErrorCode()
#define kkt_driver_classic_interface_KMServerErrorCode_set(self_, val_) self_->Set_KMServerErrorCode(val_)
  

#define kkt_driver_classic_interface_KMServerCheckingStatus_get(self_) self_->Get_KMServerCheckingStatus()
#define kkt_driver_classic_interface_KMServerCheckingStatus_set(self_, val_) self_->Set_KMServerCheckingStatus(val_)
  

#define kkt_driver_classic_interface_LoaderVersion_get(self_) *new std::string(self_->Get_LoaderVersion())
  

#define kkt_driver_classic_interface_LastDocumentNumber_get(self_) self_->Get_LastDocumentNumber()
#define kkt_driver_classic_interface_LastDocumentNumber_set(self_, val_) self_->Set_LastDocumentNumber(val_)
  

#define kkt_driver_classic_interface_FirstDocumentNumber_get(self_) self_->Get_FirstDocumentNumber()
#define kkt_driver_classic_interface_FirstDocumentNumber_set(self_, val_) self_->Set_FirstDocumentNumber(val_)
  

#define kkt_driver_classic_interface_FNArchiveType_get(self_) self_->Get_FNArchiveType()
#define kkt_driver_classic_interface_FNArchiveType_set(self_, val_) self_->Set_FNArchiveType(val_)
  

#define kkt_driver_classic_interface_MarkingOnly_get(self_) self_->Get_MarkingOnly()
#define kkt_driver_classic_interface_MarkingOnly_set(self_, val_) self_->Set_MarkingOnly(val_)
  

#define kkt_driver_classic_interface_FN30DayResource_get(self_) self_->Get_FN30DayResource()
#define kkt_driver_classic_interface_FN30DayResource_set(self_, val_) self_->Set_FN30DayResource(val_)
  

#define kkt_driver_classic_interface_FN5YearResource_get(self_) self_->Get_FN5YearResource()
#define kkt_driver_classic_interface_FN5YearResource_set(self_, val_) self_->Set_FN5YearResource(val_)
  

#define kkt_driver_classic_interface_CrptExchangeCaCertPath_get(self_) *new std::string(self_->Get_CrptExchangeCaCertPath())
  

#define kkt_driver_classic_interface_CrptExchangeCaCertPath_set(self_, val_) self_->Set_CrptExchangeCaCertPath(val_)
    

#define kkt_driver_classic_interface_CrptCdnListUrl_get(self_) *new std::string(self_->Get_CrptCdnListUrl())
  

#define kkt_driver_classic_interface_CrptCdnListUrl_set(self_, val_) self_->Set_CrptCdnListUrl(val_)
    

#define kkt_driver_classic_interface_CrptToken_get(self_) *new std::string(self_->Get_CrptToken())
  

#define kkt_driver_classic_interface_CrptToken_set(self_, val_) self_->Set_CrptToken(val_)
    

#define kkt_driver_classic_interface_OutputStrJson_get(self_) *new std::string(self_->Get_OutputStrJson())
  

#define kkt_driver_classic_interface_OutputStrJson_set(self_, val_) self_->Set_OutputStrJson(val_)
    

#define kkt_driver_classic_interface_InputStrJson_get(self_) *new std::string(self_->Get_InputStrJson())
  

#define kkt_driver_classic_interface_InputStrJson_set(self_, val_) self_->Set_InputStrJson(val_)
    

#define kkt_driver_classic_interface_CrptCheck_get(self_) self_->Get_CrptCheck()
#define kkt_driver_classic_interface_CrptCheck_set(self_, val_) self_->Set_CrptCheck(val_)
  

#define kkt_driver_classic_interface_WrapStrings_get(self_) self_->Get_WrapStrings()
#define kkt_driver_classic_interface_WrapStrings_set(self_, val_) self_->Set_WrapStrings(val_)
  

#define kkt_driver_classic_interface_FNOSUSupportStatus_get(self_) self_->Get_FNOSUSupportStatus()
#define kkt_driver_classic_interface_FNOSUSupportStatus_set(self_, val_) self_->Set_FNOSUSupportStatus(val_)
  

#define kkt_driver_classic_interface_FNImplementation_get(self_) *new std::string(self_->Get_FNImplementation())
  

#define kkt_driver_classic_interface_FNImplementation_set(self_, val_) self_->Set_FNImplementation(val_)
    

#define kkt_driver_classic_interface_DocumentSize_get(self_) self_->Get_DocumentSize()
#define kkt_driver_classic_interface_DocumentSize_set(self_, val_) self_->Set_DocumentSize(val_)
  

#define kkt_driver_classic_interface_AutoOpenSession_get(self_) self_->Get_AutoOpenSession()
#define kkt_driver_classic_interface_AutoOpenSession_set(self_, val_) self_->Set_AutoOpenSession(val_)
  

#define kkt_driver_classic_interface_MCOSUSign_get(self_) self_->Get_MCOSUSign()
#define kkt_driver_classic_interface_MCOSUSign_set(self_, val_) self_->Set_MCOSUSign(val_)
  

#define kkt_driver_classic_interface_FontHashHex_get(self_) *new std::string(self_->Get_FontHashHex())
  

#define kkt_driver_classic_interface_DataBlockHex_get(self_) *new std::string(self_->Get_DataBlockHex())
  

#define kkt_driver_classic_interface_DeclarativeEndpointPath_get(self_) *new std::string(self_->Get_DeclarativeEndpointPath())
  

#define kkt_driver_classic_interface_DeclarativeEndpointPath_set(self_, val_) self_->Set_DeclarativeEndpointPath(val_)
    

#define kkt_driver_classic_interface_DeclarativeOutput_get(self_) *new std::string(self_->Get_DeclarativeOutput())
  

#define kkt_driver_classic_interface_DeclarativeOutput_set(self_, val_) self_->Set_DeclarativeOutput(val_)
    

#define kkt_driver_classic_interface_DeclarativeInput_get(self_) *new std::string(self_->Get_DeclarativeInput())
  

#define kkt_driver_classic_interface_DeclarativeInput_set(self_, val_) self_->Set_DeclarativeInput(val_)
    

#define kkt_driver_classic_interface_WaitForPrintingTimeout_get(self_) self_->Get_WaitForPrintingTimeout()
#define kkt_driver_classic_interface_WaitForPrintingTimeout_set(self_, val_) self_->Set_WaitForPrintingTimeout(val_)
  

#define kkt_driver_classic_interface_UserAttributeValue_get(self_) *new std::string(self_->Get_UserAttributeValue())
  

#define kkt_driver_classic_interface_UserAttributeValue_set(self_, val_) self_->Set_UserAttributeValue(val_)
    

#define kkt_driver_classic_interface_UserAttributeName_get(self_) *new std::string(self_->Get_UserAttributeName())
  

#define kkt_driver_classic_interface_UserAttributeName_set(self_, val_) self_->Set_UserAttributeName(val_)
    

SWIGINTERNINLINE PyObject*
  SWIG_From_int  (int value)
{
  return PyInt_FromLong((long) value);
}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
#if PY_VERSION_HEX>=0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
  if (PyBytes_Check(obj))
#else
  if (PyUnicode_Check(obj))
#endif
#else  
  if (PyString_Check(obj))
#endif
  {
    char *cstr; Py_ssize_t len;
    int ret = SWIG_OK;
#if PY_VERSION_HEX>=0x03000000
#if !defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
    if (!alloc && cptr) {
        /* We can't allow converting without allocation, since the internal
           representation of string in Python 3 is UCS-2/UCS-4 but we require
           a UTF-8 representation.
           TODO(bhy) More detailed explanation */
        return SWIG_RuntimeError;
    }
    obj = PyUnicode_AsUTF8String(obj);
    if (!obj)
      return SWIG_TypeError;
    if (alloc)
      *alloc = SWIG_NEWOBJ;
#endif
    if (PyBytes_AsStringAndSize(obj, &cstr, &len) == -1)
      return SWIG_TypeError;
#else
    if (PyString_AsStringAndSize(obj, &cstr, &len) == -1)
      return SWIG_TypeError;
#endif
    if (cptr) {
      if (alloc) {
	if (*alloc == SWIG_NEWOBJ) {
	  *cptr = reinterpret_cast< char* >(memcpy(new char[len + 1], cstr, sizeof(char)*(len + 1)));
	  *alloc = SWIG_NEWOBJ;
	} else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
#if PY_VERSION_HEX>=0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
	*cptr = PyBytes_AsString(obj);
#else
	assert(0); /* Should never reach here with Unicode strings in Python 3 */
#endif
#else
	*cptr = SWIG_Python_str_AsChar(obj);
        if (!*cptr)
          ret = SWIG_TypeError;
#endif
      }
    }
    if (psize) *psize = len + 1;
#if PY_VERSION_HEX>=0x03000000 && !defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
    Py_XDECREF(obj);
#endif
    return ret;
  } else {
#if defined(SWIG_PYTHON_2_UNICODE)
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
#error "Cannot use both SWIG_PYTHON_2_UNICODE and SWIG_PYTHON_STRICT_BYTE_CHAR at once"
#endif
#if PY_VERSION_HEX<0x03000000
    if (PyUnicode_Check(obj)) {
      char *cstr; Py_ssize_t len;
      if (!alloc && cptr) {
        return SWIG_RuntimeError;
      }
      obj = PyUnicode_AsUTF8String(obj);
      if (!obj)
        return SWIG_TypeError;
      if (PyString_AsStringAndSize(obj, &cstr, &len) != -1) {
        if (cptr) {
          if (alloc) *alloc = SWIG_NEWOBJ;
          *cptr = reinterpret_cast< char* >(memcpy(new char[len + 1], cstr, sizeof(char)*(len + 1)));
        }
        if (psize) *psize = len + 1;

        Py_XDECREF(obj);
        return SWIG_OK;
      } else {
        Py_XDECREF(obj);
      }
    }
#endif
#endif

    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsPtr_std_string (PyObject * obj, std::string **val) 
{
  char* buf = 0 ; size_t size = 0; int alloc = SWIG_OLDOBJ;
  if (SWIG_IsOK((SWIG_AsCharPtrAndSize(obj, &buf, &size, &alloc)))) {
    if (buf) {
      if (val) *val = new std::string(buf, size - 1);
      if (alloc == SWIG_NEWOBJ) delete[] buf;
      return SWIG_NEWOBJ;
    } else {
      if (val) *val = 0;
      return SWIG_OLDOBJ;
    }
  } else {
    static int init = 0;
    static swig_type_info* descriptor = 0;
    if (!init) {
      descriptor = SWIG_TypeQuery("std::string" " *");
      init = 1;
    }
    if (descriptor) {
      std::string *vptr;
      int res = SWIG_ConvertPtr(obj, (void**)&vptr, descriptor, 0);
      if (SWIG_IsOK(res) && val) *val = vptr;
      return res;
    }
  }
  return SWIG_ERROR;
}


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_InternalNewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
#if PY_VERSION_HEX >= 0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
      return PyBytes_FromStringAndSize(carray, static_cast< Py_ssize_t >(size));
#else
      return PyUnicode_DecodeUTF8(carray, static_cast< Py_ssize_t >(size), "surrogateescape");
#endif
#else
      return PyString_FromStringAndSize(carray, static_cast< Py_ssize_t >(size));
#endif
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject *
SWIG_From_std_string  (const std::string& s)
{
  return SWIG_FromCharPtrAndSize(s.data(), s.size());
}


SWIGINTERNINLINE PyObject*
  SWIG_From_unsigned_SS_int  (unsigned int value)
{
  return PyInt_FromSize_t((size_t) value);
}


SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r;
  if (!PyBool_Check(obj))
    return SWIG_ERROR;
  r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}


  #define SWIG_From_double   PyFloat_FromDouble 


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int (PyObject * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}

#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_delete_SwigPyIterator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delete_SwigPyIterator", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SwigPyIterator" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_value(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator_value", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_value" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)((swig::SwigPyIterator const *)arg1)->value();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_incr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->incr(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (swig::SwigPyIterator *)(arg1)->incr();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SwigPyIterator_incr", 0, 2, argv+1))) SWIG_fail;
  argv[0] = self;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SwigPyIterator_incr__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator_incr__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SwigPyIterator_incr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    swig::SwigPyIterator::incr(size_t)\n"
    "    swig::SwigPyIterator::incr()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_decr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->decr(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (swig::SwigPyIterator *)(arg1)->decr();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SwigPyIterator_decr", 0, 2, argv+1))) SWIG_fail;
  argv[0] = self;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SwigPyIterator_decr__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator_decr__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SwigPyIterator_decr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    swig::SwigPyIterator::decr(size_t)\n"
    "    swig::SwigPyIterator::decr()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_distance(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  ptrdiff_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_distance" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[0], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = ((swig::SwigPyIterator const *)arg1)->distance((swig::SwigPyIterator const &)*arg2);
  } catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
  }
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_equal(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_equal" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[0], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = (bool)((swig::SwigPyIterator const *)arg1)->equal((swig::SwigPyIterator const &)*arg2);
  } catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_copy(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator_copy", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_copy" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_next(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator_next", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_next" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->next();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___next__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___next__", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___next__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->__next__();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_previous(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator_previous", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_previous" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->previous();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_advance(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_advance" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_advance" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->advance(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___eq__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___eq__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[0], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator ==((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___ne__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___ne__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[0], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator !=((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___iadd__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___iadd__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___iadd__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator +=(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___isub__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___isub__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___isub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator -=(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___add__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___add__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___add__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator +(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator -(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  ptrdiff_t result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = ((swig::SwigPyIterator const *)arg1)->operator -((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SwigPyIterator___sub__", 0, 2, argv+1))) SWIG_fail;
  argv[0] = self;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGPY_DESTRUCTOR_CLOSURE(_wrap_delete_SwigPyIterator) /* defines _wrap_delete_SwigPyIterator_destructor_closure */

SWIGPY_ITERNEXTFUNC_CLOSURE(_wrap_SwigPyIterator___next__) /* defines _wrap_SwigPyIterator___next___iternextfunc_closure */

SWIGPY_BINARYFUNC_CLOSURE(_wrap_SwigPyIterator___sub__) /* defines _wrap_SwigPyIterator___sub___binaryfunc_closure */

SWIGINTERN PyObject *_wrap_VectorOfBytes_iterator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &self;
  if (!SWIG_Python_UnpackTuple(args, "VectorOfBytes_iterator", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_iterator" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_uint8_t_Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes___nonzero__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "VectorOfBytes___nonzero__", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes___nonzero__" "', argument " "1"" of type '" "std::vector< uint8_t > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  result = (bool)std_vector_Sl_uint8_t_Sg____nonzero__((std::vector< unsigned char > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes___bool__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "VectorOfBytes___bool__", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes___bool__" "', argument " "1"" of type '" "std::vector< uint8_t > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  result = (bool)std_vector_Sl_uint8_t_Sg____bool__((std::vector< unsigned char > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes___len__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< unsigned char >::size_type result;
  
  if (!SWIG_Python_UnpackTuple(args, "VectorOfBytes___len__", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes___len__" "', argument " "1"" of type '" "std::vector< uint8_t > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  result = std_vector_Sl_uint8_t_Sg____len__((std::vector< unsigned char > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes___getslice__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  std::vector< unsigned char >::difference_type arg2 ;
  std::vector< unsigned char >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  std::vector< unsigned char,std::allocator< unsigned char > > *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "VectorOfBytes___getslice__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes___getslice__" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorOfBytes___getslice__" "', argument " "2"" of type '" "std::vector< unsigned char >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< unsigned char >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorOfBytes___getslice__" "', argument " "3"" of type '" "std::vector< unsigned char >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< unsigned char >::difference_type >(val3);
  try {
    result = (std::vector< unsigned char,std::allocator< unsigned char > > *)std_vector_Sl_uint8_t_Sg____getslice__(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes___setslice____SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  std::vector< unsigned char >::difference_type arg2 ;
  std::vector< unsigned char >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes___setslice__" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorOfBytes___setslice__" "', argument " "2"" of type '" "std::vector< unsigned char >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< unsigned char >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorOfBytes___setslice__" "', argument " "3"" of type '" "std::vector< unsigned char >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< unsigned char >::difference_type >(val3);
  try {
    std_vector_Sl_uint8_t_Sg____setslice____SWIG_0(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes___setslice____SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  std::vector< unsigned char >::difference_type arg2 ;
  std::vector< unsigned char >::difference_type arg3 ;
  std::vector< unsigned char,std::allocator< unsigned char > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes___setslice__" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorOfBytes___setslice__" "', argument " "2"" of type '" "std::vector< unsigned char >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< unsigned char >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorOfBytes___setslice__" "', argument " "3"" of type '" "std::vector< unsigned char >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< unsigned char >::difference_type >(val3);
  {
    std::vector< unsigned char,std::allocator< unsigned char > > *ptr = (std::vector< unsigned char,std::allocator< unsigned char > > *)0;
    res4 = swig::asptr(swig_obj[3], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VectorOfBytes___setslice__" "', argument " "4"" of type '" "std::vector< unsigned char,std::allocator< unsigned char > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorOfBytes___setslice__" "', argument " "4"" of type '" "std::vector< unsigned char,std::allocator< unsigned char > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_uint8_t_Sg____setslice____SWIG_1(arg1,arg2,arg3,(std::vector< unsigned char,std::allocator< unsigned char > > const &)*arg4);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes___setslice__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "VectorOfBytes___setslice__", 0, 4, argv+1))) SWIG_fail;
  argv[0] = self;
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< unsigned char,std::allocator< unsigned char > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_VectorOfBytes___setslice____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< unsigned char,std::allocator< unsigned char > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector< unsigned char,std::allocator< unsigned char > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_VectorOfBytes___setslice____SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'VectorOfBytes___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< uint8_t >::__setslice__(std::vector< unsigned char >::difference_type,std::vector< unsigned char >::difference_type)\n"
    "    std::vector< uint8_t >::__setslice__(std::vector< unsigned char >::difference_type,std::vector< unsigned char >::difference_type,std::vector< unsigned char,std::allocator< unsigned char > > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes___delslice__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  std::vector< unsigned char >::difference_type arg2 ;
  std::vector< unsigned char >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "VectorOfBytes___delslice__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes___delslice__" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorOfBytes___delslice__" "', argument " "2"" of type '" "std::vector< unsigned char >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< unsigned char >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorOfBytes___delslice__" "', argument " "3"" of type '" "std::vector< unsigned char >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< unsigned char >::difference_type >(val3);
  try {
    std_vector_Sl_uint8_t_Sg____delslice__(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes___delitem____SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  std::vector< unsigned char >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes___delitem__" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorOfBytes___delitem__" "', argument " "2"" of type '" "std::vector< unsigned char >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< unsigned char >::difference_type >(val2);
  try {
    std_vector_Sl_uint8_t_Sg____delitem____SWIG_0(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes___getitem____SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector< unsigned char,std::allocator< unsigned char > > *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes___getitem__" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VectorOfBytes___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  try {
    result = (std::vector< unsigned char,std::allocator< unsigned char > > *)std_vector_Sl_uint8_t_Sg____getitem____SWIG_0(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes___setitem____SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< unsigned char,std::allocator< unsigned char > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes___setitem__" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VectorOfBytes___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  {
    std::vector< unsigned char,std::allocator< unsigned char > > *ptr = (std::vector< unsigned char,std::allocator< unsigned char > > *)0;
    res3 = swig::asptr(swig_obj[2], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorOfBytes___setitem__" "', argument " "3"" of type '" "std::vector< unsigned char,std::allocator< unsigned char > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorOfBytes___setitem__" "', argument " "3"" of type '" "std::vector< unsigned char,std::allocator< unsigned char > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_uint8_t_Sg____setitem____SWIG_0(arg1,arg2,(std::vector< unsigned char,std::allocator< unsigned char > > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes___setitem____SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes___setitem__" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VectorOfBytes___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  try {
    std_vector_Sl_uint8_t_Sg____setitem____SWIG_1(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes___delitem____SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes___delitem__" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  {
    if (!PySlice_Check(swig_obj[1])) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VectorOfBytes___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) swig_obj[1];
  }
  try {
    std_vector_Sl_uint8_t_Sg____delitem____SWIG_1(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes___delitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "VectorOfBytes___delitem__", 0, 2, argv+1))) SWIG_fail;
  argv[0] = self;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< unsigned char,std::allocator< unsigned char > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_VectorOfBytes___delitem____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< unsigned char,std::allocator< unsigned char > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VectorOfBytes___delitem____SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'VectorOfBytes___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< uint8_t >::__delitem__(std::vector< unsigned char >::difference_type)\n"
    "    std::vector< uint8_t >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes___getitem____SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  std::vector< unsigned char >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  std::vector< unsigned char >::value_type *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes___getitem__" "', argument " "1"" of type '" "std::vector< uint8_t > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorOfBytes___getitem__" "', argument " "2"" of type '" "std::vector< unsigned char >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< unsigned char >::difference_type >(val2);
  try {
    result = (std::vector< unsigned char >::value_type *) &std_vector_Sl_uint8_t_Sg____getitem____SWIG_1((std::vector< unsigned char > const *)arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(*result));
  (void)swig::container_owner<swig::traits<std::vector< unsigned char >::value_type>::category>::back_reference(resultobj, self);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes___getitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "VectorOfBytes___getitem__", 0, 2, argv+1))) SWIG_fail;
  argv[0] = self;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< unsigned char,std::allocator< unsigned char > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_VectorOfBytes___getitem____SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< unsigned char,std::allocator< unsigned char > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VectorOfBytes___getitem____SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'VectorOfBytes___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< uint8_t >::__getitem__(PySliceObject *)\n"
    "    std::vector< uint8_t >::__getitem__(std::vector< unsigned char >::difference_type) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes___setitem____SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  std::vector< unsigned char >::difference_type arg2 ;
  std::vector< unsigned char >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  std::vector< unsigned char >::value_type temp3 ;
  unsigned char val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes___setitem__" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorOfBytes___setitem__" "', argument " "2"" of type '" "std::vector< unsigned char >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< unsigned char >::difference_type >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_char(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorOfBytes___setitem__" "', argument " "3"" of type '" "std::vector< unsigned char >::value_type""'");
  } 
  temp3 = static_cast< std::vector< unsigned char >::value_type >(val3);
  arg3 = &temp3;
  try {
    std_vector_Sl_uint8_t_Sg____setitem____SWIG_2(arg1,arg2,(unsigned char const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes___setitem____SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  std::vector< unsigned char >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes___setitem__" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorOfBytes___setitem__" "', argument " "2"" of type '" "std::vector< unsigned char >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< unsigned char >::difference_type >(val2);
  try {
    std_vector_Sl_uint8_t_Sg____setitem____SWIG_3(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes___setitem__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "VectorOfBytes___setitem__", 0, 3, argv+1))) SWIG_fail;
  argv[0] = self;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< unsigned char,std::allocator< unsigned char > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_VectorOfBytes___setitem____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< unsigned char,std::allocator< unsigned char > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VectorOfBytes___setitem____SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< unsigned char,std::allocator< unsigned char > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector< unsigned char,std::allocator< unsigned char > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_VectorOfBytes___setitem____SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< unsigned char,std::allocator< unsigned char > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_char(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_VectorOfBytes___setitem____SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'VectorOfBytes___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< uint8_t >::__setitem__(PySliceObject *,std::vector< unsigned char,std::allocator< unsigned char > > const &)\n"
    "    std::vector< uint8_t >::__setitem__(PySliceObject *)\n"
    "    std::vector< uint8_t >::__setitem__(std::vector< unsigned char >::difference_type,std::vector< unsigned char >::value_type const &)\n"
    "    std::vector< uint8_t >::__setitem__(std::vector< unsigned char >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_pop(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< unsigned char >::value_type result;
  
  if (!SWIG_Python_UnpackTuple(args, "VectorOfBytes_pop", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_pop" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  try {
    result = (std::vector< unsigned char >::value_type)std_vector_Sl_uint8_t_Sg__pop(arg1);
  } catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_append(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  std::vector< unsigned char >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector< unsigned char >::value_type temp2 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_append" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorOfBytes_append" "', argument " "2"" of type '" "std::vector< unsigned char >::value_type""'");
  } 
  temp2 = static_cast< std::vector< unsigned char >::value_type >(val2);
  arg2 = &temp2;
  std_vector_Sl_uint8_t_Sg__append(arg1,(unsigned char const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN int _wrap_new_VectorOfBytes__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (std::vector< uint8_t > *)new std::vector< uint8_t >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, SWIG_BUILTIN_INIT |  0 );
  return resultobj == Py_None ? -1 : 0;
fail:
  return -1;
}


SWIGINTERN int _wrap_new_VectorOfBytes__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  std::vector< uint8_t > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::vector< unsigned char,std::allocator< unsigned char > > *ptr = (std::vector< unsigned char,std::allocator< unsigned char > > *)0;
    res1 = swig::asptr(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorOfBytes" "', argument " "1"" of type '" "std::vector< uint8_t > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorOfBytes" "', argument " "1"" of type '" "std::vector< uint8_t > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector< uint8_t > *)new std::vector< uint8_t >((std::vector< uint8_t > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, SWIG_BUILTIN_INIT |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj == Py_None ? -1 : 0;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return -1;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_empty(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "VectorOfBytes_empty", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_empty" "', argument " "1"" of type '" "std::vector< uint8_t > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  result = (bool)((std::vector< uint8_t > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_size(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< unsigned char >::size_type result;
  
  if (!SWIG_Python_UnpackTuple(args, "VectorOfBytes_size", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_size" "', argument " "1"" of type '" "std::vector< uint8_t > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  result = ((std::vector< uint8_t > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_swap(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  std::vector< uint8_t > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_swap" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[0], &argp2, SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorOfBytes_swap" "', argument " "2"" of type '" "std::vector< uint8_t > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorOfBytes_swap" "', argument " "2"" of type '" "std::vector< uint8_t > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< uint8_t > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_begin(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::vector< unsigned char >::iterator > result;
  
  if (!SWIG_Python_UnpackTuple(args, "VectorOfBytes_begin", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_begin" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< unsigned char >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_end(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::vector< unsigned char >::iterator > result;
  
  if (!SWIG_Python_UnpackTuple(args, "VectorOfBytes_end", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_end" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< unsigned char >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_rbegin(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::vector< unsigned char >::reverse_iterator > result;
  
  if (!SWIG_Python_UnpackTuple(args, "VectorOfBytes_rbegin", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_rbegin" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< unsigned char >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_rend(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::vector< unsigned char >::reverse_iterator > result;
  
  if (!SWIG_Python_UnpackTuple(args, "VectorOfBytes_rend", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_rend" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< unsigned char >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!SWIG_Python_UnpackTuple(args, "VectorOfBytes_clear", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_clear" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_get_allocator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::allocator< unsigned char > > result;
  
  if (!SWIG_Python_UnpackTuple(args, "VectorOfBytes_get_allocator", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_get_allocator" "', argument " "1"" of type '" "std::vector< uint8_t > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  result = ((std::vector< uint8_t > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< unsigned char >::allocator_type(static_cast< const std::vector< unsigned char >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_unsigned_char_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN int _wrap_new_VectorOfBytes__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< unsigned char >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  std::vector< uint8_t > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VectorOfBytes" "', argument " "1"" of type '" "std::vector< unsigned char >::size_type""'");
  } 
  arg1 = static_cast< std::vector< unsigned char >::size_type >(val1);
  result = (std::vector< uint8_t > *)new std::vector< uint8_t >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, SWIG_BUILTIN_INIT |  0 );
  return resultobj == Py_None ? -1 : 0;
fail:
  return -1;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_pop_back(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!SWIG_Python_UnpackTuple(args, "VectorOfBytes_pop_back", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_pop_back" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_resize__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  std::vector< unsigned char >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_resize" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorOfBytes_resize" "', argument " "2"" of type '" "std::vector< unsigned char >::size_type""'");
  } 
  arg2 = static_cast< std::vector< unsigned char >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_erase__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  SwigValueWrapper< std::vector< unsigned char >::iterator > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  SwigValueWrapper< std::vector< unsigned char >::iterator > result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_erase" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VectorOfBytes_erase" "', argument " "2"" of type '" "std::vector< unsigned char >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< unsigned char >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< unsigned char >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VectorOfBytes_erase" "', argument " "2"" of type '" "std::vector< unsigned char >::iterator""'");
    }
  }
  result = std_vector_Sl_uint8_t_Sg__erase__SWIG_0(arg1,arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< unsigned char >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_erase__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  SwigValueWrapper< std::vector< unsigned char >::iterator > arg2 ;
  SwigValueWrapper< std::vector< unsigned char >::iterator > arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  SwigValueWrapper< std::vector< unsigned char >::iterator > result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_erase" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VectorOfBytes_erase" "', argument " "2"" of type '" "std::vector< unsigned char >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< unsigned char >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< unsigned char >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VectorOfBytes_erase" "', argument " "2"" of type '" "std::vector< unsigned char >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VectorOfBytes_erase" "', argument " "3"" of type '" "std::vector< unsigned char >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< unsigned char >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< unsigned char >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VectorOfBytes_erase" "', argument " "3"" of type '" "std::vector< unsigned char >::iterator""'");
    }
  }
  result = std_vector_Sl_uint8_t_Sg__erase__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< unsigned char >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_erase(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "VectorOfBytes_erase", 0, 3, argv+1))) SWIG_fail;
  argv[0] = self;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< unsigned char,std::allocator< unsigned char > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< unsigned char >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_VectorOfBytes_erase__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< unsigned char,std::allocator< unsigned char > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< unsigned char >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< unsigned char >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_VectorOfBytes_erase__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'VectorOfBytes_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< uint8_t >::erase(std::vector< unsigned char >::iterator)\n"
    "    std::vector< uint8_t >::erase(std::vector< unsigned char >::iterator,std::vector< unsigned char >::iterator)\n");
  return 0;
}


SWIGINTERN int _wrap_new_VectorOfBytes__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< unsigned char >::size_type arg1 ;
  std::vector< unsigned char >::value_type *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  std::vector< unsigned char >::value_type temp2 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  std::vector< uint8_t > *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VectorOfBytes" "', argument " "1"" of type '" "std::vector< unsigned char >::size_type""'");
  } 
  arg1 = static_cast< std::vector< unsigned char >::size_type >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_VectorOfBytes" "', argument " "2"" of type '" "std::vector< unsigned char >::value_type""'");
  } 
  temp2 = static_cast< std::vector< unsigned char >::value_type >(val2);
  arg2 = &temp2;
  result = (std::vector< uint8_t > *)new std::vector< uint8_t >(arg1,(std::vector< unsigned char >::value_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, SWIG_BUILTIN_INIT |  0 );
  return resultobj == Py_None ? -1 : 0;
fail:
  return -1;
}


SWIGINTERN int _wrap_new_VectorOfBytes(PyObject *self, PyObject *args, PyObject *kwargs) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!SWIG_Python_CheckNoKeywords(kwargs, "new_VectorOfBytes")) SWIG_fail;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_VectorOfBytes", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_VectorOfBytes__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_VectorOfBytes__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< unsigned char,std::allocator< unsigned char > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VectorOfBytes__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_char(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_VectorOfBytes__SWIG_3(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_VectorOfBytes'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< uint8_t >::vector()\n"
    "    std::vector< uint8_t >::vector(std::vector< uint8_t > const &)\n"
    "    std::vector< uint8_t >::vector(std::vector< unsigned char >::size_type)\n"
    "    std::vector< uint8_t >::vector(std::vector< unsigned char >::size_type,std::vector< unsigned char >::value_type const &)\n");
  return -1;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_push_back(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  std::vector< unsigned char >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector< unsigned char >::value_type temp2 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_push_back" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorOfBytes_push_back" "', argument " "2"" of type '" "std::vector< unsigned char >::value_type""'");
  } 
  temp2 = static_cast< std::vector< unsigned char >::value_type >(val2);
  arg2 = &temp2;
  (arg1)->push_back((std::vector< unsigned char >::value_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_front(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< unsigned char >::value_type *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "VectorOfBytes_front", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_front" "', argument " "1"" of type '" "std::vector< uint8_t > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  result = (std::vector< unsigned char >::value_type *) &((std::vector< uint8_t > const *)arg1)->front();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(*result));
  (void)swig::container_owner<swig::traits<std::vector< unsigned char >::value_type>::category>::back_reference(resultobj, self);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_back(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< unsigned char >::value_type *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "VectorOfBytes_back", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_back" "', argument " "1"" of type '" "std::vector< uint8_t > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  result = (std::vector< unsigned char >::value_type *) &((std::vector< uint8_t > const *)arg1)->back();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(*result));
  (void)swig::container_owner<swig::traits<std::vector< unsigned char >::value_type>::category>::back_reference(resultobj, self);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_assign(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  std::vector< unsigned char >::size_type arg2 ;
  std::vector< unsigned char >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  std::vector< unsigned char >::value_type temp3 ;
  unsigned char val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "VectorOfBytes_assign", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_assign" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorOfBytes_assign" "', argument " "2"" of type '" "std::vector< unsigned char >::size_type""'");
  } 
  arg2 = static_cast< std::vector< unsigned char >::size_type >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_char(swig_obj[1], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorOfBytes_assign" "', argument " "3"" of type '" "std::vector< unsigned char >::value_type""'");
  } 
  temp3 = static_cast< std::vector< unsigned char >::value_type >(val3);
  arg3 = &temp3;
  (arg1)->assign(arg2,(std::vector< unsigned char >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_resize__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  std::vector< unsigned char >::size_type arg2 ;
  std::vector< unsigned char >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  std::vector< unsigned char >::value_type temp3 ;
  unsigned char val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_resize" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorOfBytes_resize" "', argument " "2"" of type '" "std::vector< unsigned char >::size_type""'");
  } 
  arg2 = static_cast< std::vector< unsigned char >::size_type >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_char(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorOfBytes_resize" "', argument " "3"" of type '" "std::vector< unsigned char >::value_type""'");
  } 
  temp3 = static_cast< std::vector< unsigned char >::value_type >(val3);
  arg3 = &temp3;
  (arg1)->resize(arg2,(std::vector< unsigned char >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_resize(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "VectorOfBytes_resize", 0, 3, argv+1))) SWIG_fail;
  argv[0] = self;
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< unsigned char,std::allocator< unsigned char > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VectorOfBytes_resize__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< unsigned char,std::allocator< unsigned char > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_char(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_VectorOfBytes_resize__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'VectorOfBytes_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< uint8_t >::resize(std::vector< unsigned char >::size_type)\n"
    "    std::vector< uint8_t >::resize(std::vector< unsigned char >::size_type,std::vector< unsigned char >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_insert__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  SwigValueWrapper< std::vector< unsigned char >::iterator > arg2 ;
  std::vector< unsigned char >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  std::vector< unsigned char >::value_type temp3 ;
  unsigned char val3 ;
  int ecode3 = 0 ;
  SwigValueWrapper< std::vector< unsigned char >::iterator > result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_insert" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VectorOfBytes_insert" "', argument " "2"" of type '" "std::vector< unsigned char >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< unsigned char >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< unsigned char >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VectorOfBytes_insert" "', argument " "2"" of type '" "std::vector< unsigned char >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_unsigned_SS_char(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorOfBytes_insert" "', argument " "3"" of type '" "std::vector< unsigned char >::value_type""'");
  } 
  temp3 = static_cast< std::vector< unsigned char >::value_type >(val3);
  arg3 = &temp3;
  result = std_vector_Sl_uint8_t_Sg__insert__SWIG_0(arg1,arg2,(unsigned char const &)*arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< unsigned char >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_insert__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  SwigValueWrapper< std::vector< unsigned char >::iterator > arg2 ;
  std::vector< unsigned char >::size_type arg3 ;
  std::vector< unsigned char >::value_type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  std::vector< unsigned char >::value_type temp4 ;
  unsigned char val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_insert" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VectorOfBytes_insert" "', argument " "2"" of type '" "std::vector< unsigned char >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< unsigned char >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< unsigned char >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "VectorOfBytes_insert" "', argument " "2"" of type '" "std::vector< unsigned char >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorOfBytes_insert" "', argument " "3"" of type '" "std::vector< unsigned char >::size_type""'");
  } 
  arg3 = static_cast< std::vector< unsigned char >::size_type >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_char(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VectorOfBytes_insert" "', argument " "4"" of type '" "std::vector< unsigned char >::value_type""'");
  } 
  temp4 = static_cast< std::vector< unsigned char >::value_type >(val4);
  arg4 = &temp4;
  std_vector_Sl_uint8_t_Sg__insert__SWIG_1(arg1,arg2,arg3,(unsigned char const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_insert(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "VectorOfBytes_insert", 0, 4, argv+1))) SWIG_fail;
  argv[0] = self;
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< unsigned char,std::allocator< unsigned char > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< unsigned char >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_char(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_VectorOfBytes_insert__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector< unsigned char,std::allocator< unsigned char > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< unsigned char >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_char(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_VectorOfBytes_insert__SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'VectorOfBytes_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< uint8_t >::insert(std::vector< unsigned char >::iterator,std::vector< unsigned char >::value_type const &)\n"
    "    std::vector< uint8_t >::insert(std::vector< unsigned char >::iterator,std::vector< unsigned char >::size_type,std::vector< unsigned char >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_reserve(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  std::vector< unsigned char >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_reserve" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorOfBytes_reserve" "', argument " "2"" of type '" "std::vector< unsigned char >::size_type""'");
  } 
  arg2 = static_cast< std::vector< unsigned char >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorOfBytes_capacity(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< unsigned char >::size_type result;
  
  if (!SWIG_Python_UnpackTuple(args, "VectorOfBytes_capacity", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorOfBytes_capacity" "', argument " "1"" of type '" "std::vector< uint8_t > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  result = ((std::vector< uint8_t > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_VectorOfBytes(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< uint8_t > *arg1 = (std::vector< uint8_t > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delete_VectorOfBytes", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VectorOfBytes" "', argument " "1"" of type '" "std::vector< uint8_t > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< uint8_t > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGPY_GETITERFUNC_CLOSURE(_wrap_VectorOfBytes_iterator) /* defines _wrap_VectorOfBytes_iterator_getiterfunc_closure */

SWIGPY_INQUIRY_CLOSURE(_wrap_VectorOfBytes___nonzero__) /* defines _wrap_VectorOfBytes___nonzero___inquiry_closure */

SWIGPY_LENFUNC_CLOSURE(_wrap_VectorOfBytes___len__) /* defines _wrap_VectorOfBytes___len___lenfunc_closure */

SWIGPY_BINARYFUNC_CLOSURE(_wrap_VectorOfBytes___getitem__) /* defines _wrap_VectorOfBytes___getitem___binaryfunc_closure */

SWIGPY_OBJOBJARGPROC_CLOSURE(_wrap_VectorOfBytes___setitem__) /* defines _wrap_VectorOfBytes___setitem___objobjargproc_closure */

SWIGPY_DESTRUCTOR_CLOSURE(_wrap_delete_VectorOfBytes) /* defines _wrap_delete_VectorOfBytes_destructor_closure */

SWIGINTERN int _wrap_new_classic_interface__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (kkt_driver::classic_interface *)new kkt_driver::classic_interface();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_kkt_driver__classic_interface, SWIG_BUILTIN_INIT |  0 );
  return resultobj == Py_None ? -1 : 0;
fail:
  return -1;
}


SWIGINTERN int _wrap_new_classic_interface__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  kkt_driver::classic_interface *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_classic_interface" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_classic_interface" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  result = (kkt_driver::classic_interface *)new kkt_driver::classic_interface((std::string const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_kkt_driver__classic_interface, SWIG_BUILTIN_INIT |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj == Py_None ? -1 : 0;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return -1;
}


SWIGINTERN int _wrap_new_classic_interface(PyObject *self, PyObject *args, PyObject *kwargs) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!SWIG_Python_CheckNoKeywords(kwargs, "new_classic_interface")) SWIG_fail;
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_classic_interface", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_classic_interface__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_classic_interface__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_classic_interface'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    kkt_driver::classic_interface::classic_interface()\n"
    "    kkt_driver::classic_interface::classic_interface(std::string const &)\n");
  return -1;
}


SWIGINTERN PyObject *_wrap_delete_classic_interface(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!SWIG_Python_UnpackTuple(args, "delete_classic_interface", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_classic_interface" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_AddLD(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_AddLD", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_AddLD" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->AddLD();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Beep(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Beep", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Beep" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->Beep();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Buy(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Buy", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Buy" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->Buy();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BuyEx(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BuyEx", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BuyEx" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->BuyEx();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CancelCheck(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CancelCheck", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CancelCheck" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->CancelCheck();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CashIncome(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CashIncome", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CashIncome" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->CashIncome();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CashOutcome(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CashOutcome", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CashOutcome" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->CashOutcome();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Charge(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Charge", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Charge" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->Charge();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CheckSubTotal(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CheckSubTotal", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CheckSubTotal" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->CheckSubTotal();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CloseCheck(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CloseCheck", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CloseCheck" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->CloseCheck();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ConfirmDate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ConfirmDate", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ConfirmDate" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ConfirmDate();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Connect(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Connect", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Connect" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->Connect();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ContinuePrint(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ContinuePrint", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ContinuePrint" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ContinuePrint();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Correction(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Correction", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Correction" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->Correction();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CutCheck(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CutCheck", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CutCheck" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->CutCheck();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DampRequest(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DampRequest", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DampRequest" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->DampRequest();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DeleteLD(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DeleteLD", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DeleteLD" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->DeleteLD();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Disconnect(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Disconnect", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Disconnect" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->Disconnect();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Discount(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Discount", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Discount" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->Discount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DozeOilCheck(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DozeOilCheck", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DozeOilCheck" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->DozeOilCheck();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Draw(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Draw", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Draw" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->Draw();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EKLZDepartmentReportInDatesRange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EKLZDepartmentReportInDatesRange", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EKLZDepartmentReportInDatesRange" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->EKLZDepartmentReportInDatesRange();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EKLZDepartmentReportInSessionsRange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EKLZDepartmentReportInSessionsRange", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EKLZDepartmentReportInSessionsRange" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->EKLZDepartmentReportInSessionsRange();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EKLZJournalOnSessionNumber(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EKLZJournalOnSessionNumber", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EKLZJournalOnSessionNumber" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->EKLZJournalOnSessionNumber();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EKLZSessionReportInDatesRange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EKLZSessionReportInDatesRange", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EKLZSessionReportInDatesRange" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->EKLZSessionReportInDatesRange();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EKLZSessionReportInSessionsRange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EKLZSessionReportInSessionsRange", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EKLZSessionReportInSessionsRange" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->EKLZSessionReportInSessionsRange();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ExchangeBytes(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ExchangeBytes", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ExchangeBytes" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ExchangeBytes();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FeedDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FeedDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FeedDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FeedDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Fiscalization(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Fiscalization", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Fiscalization" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->Fiscalization();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FiscalReportForDatesRange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FiscalReportForDatesRange", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FiscalReportForDatesRange" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FiscalReportForDatesRange();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FiscalReportForSessionRange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FiscalReportForSessionRange", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FiscalReportForSessionRange" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FiscalReportForSessionRange();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetActiveLD(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetActiveLD", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetActiveLD" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetActiveLD();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EnumLD(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EnumLD", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EnumLD" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->EnumLD();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetCashReg(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetCashReg", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetCashReg" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetCashReg();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetCountLD(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetCountLD", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetCountLD" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetCountLD();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetData(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetData", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetData" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetData();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetDeviceMetrics(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetDeviceMetrics", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetDeviceMetrics" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetDeviceMetrics();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetECRStatus(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetECRStatus", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetECRStatus" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetECRStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetShortECRStatus(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetShortECRStatus", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetShortECRStatus" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetShortECRStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetExchangeParam(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetExchangeParam", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetExchangeParam" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetExchangeParam();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetFieldStruct(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetFieldStruct", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetFieldStruct" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetFieldStruct();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetFiscalizationParameters(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetFiscalizationParameters", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetFiscalizationParameters" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetFiscalizationParameters();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetFMRecordsSum(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetFMRecordsSum", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetFMRecordsSum" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetFMRecordsSum();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetLastFMRecordDate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetLastFMRecordDate", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetLastFMRecordDate" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetLastFMRecordDate();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetLiterSumCounter(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetLiterSumCounter", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetLiterSumCounter" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetLiterSumCounter();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetOperationReg(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetOperationReg", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetOperationReg" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetOperationReg();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetParamLD(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetParamLD", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetParamLD" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetParamLD();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetRangeDatesAndSessions(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetRangeDatesAndSessions", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetRangeDatesAndSessions" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetRangeDatesAndSessions();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetRKStatus(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetRKStatus", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetRKStatus" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetRKStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetTableStruct(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetTableStruct", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetTableStruct" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetTableStruct();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_InitFM(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_InitFM", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_InitFM" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->InitFM();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_InitTable(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_InitTable", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_InitTable" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->InitTable();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_InterruptDataStream(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_InterruptDataStream", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_InterruptDataStream" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->InterruptDataStream();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_InterruptFullReport(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_InterruptFullReport", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_InterruptFullReport" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->InterruptFullReport();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_InterruptTest(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_InterruptTest", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_InterruptTest" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->InterruptTest();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LaunchRK(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LaunchRK", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LaunchRK" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->LaunchRK();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LoadLineData(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LoadLineData", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LoadLineData" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->LoadLineData();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OilSale(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OilSale", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OilSale" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->OilSale();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OpenCheck(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OpenCheck", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OpenCheck" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->OpenCheck();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OpenDrawer(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OpenDrawer", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OpenDrawer" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->OpenDrawer();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintBarCode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintBarCode", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintBarCode" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintBarCode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintDepartmentReport(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintDepartmentReport", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintDepartmentReport" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintDepartmentReport();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintDocumentTitle(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintDocumentTitle", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintDocumentTitle" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintDocumentTitle();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintOperationReg(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintOperationReg", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintOperationReg" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintOperationReg();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintReportWithCleaning(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintReportWithCleaning", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintReportWithCleaning" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintReportWithCleaning();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintReportWithoutCleaning(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintReportWithoutCleaning", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintReportWithoutCleaning" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintReportWithoutCleaning();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintString(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintString", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintString" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintString();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintWideString(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintWideString", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintWideString" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintWideString();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadEKLZDocumentOnKPK(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadEKLZDocumentOnKPK", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadEKLZDocumentOnKPK" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadEKLZDocumentOnKPK();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadEKLZSessionTotal(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadEKLZSessionTotal", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadEKLZSessionTotal" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadEKLZSessionTotal();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadLicense(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadLicense", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadLicense" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadLicense();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadTable(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadTable", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadTable" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadTable();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RepeatDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RepeatDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RepeatDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->RepeatDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ResetAllTRK(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ResetAllTRK", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ResetAllTRK" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ResetAllTRK();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ResetRK(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ResetRK", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ResetRK" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ResetRK();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ResetSettings(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ResetSettings", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ResetSettings" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ResetSettings();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ResetSummary(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ResetSummary", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ResetSummary" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ResetSummary();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReturnBuy(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReturnBuy", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReturnBuy" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReturnBuy();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReturnBuyEx(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReturnBuyEx", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReturnBuyEx" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReturnBuyEx();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReturnSale(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReturnSale", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReturnSale" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReturnSale();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReturnSaleEx(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReturnSaleEx", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReturnSaleEx" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReturnSaleEx();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Sale(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Sale", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Sale" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->Sale();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SaleEx(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SaleEx", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SaleEx" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->SaleEx();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SetActiveLD(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SetActiveLD", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SetActiveLD" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->SetActiveLD();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SetDate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SetDate", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SetDate" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->SetDate();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SetDozeInMilliliters(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SetDozeInMilliliters", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SetDozeInMilliliters" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->SetDozeInMilliliters();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SetDozeInMoney(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SetDozeInMoney", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SetDozeInMoney" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->SetDozeInMoney();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SetExchangeParam(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SetExchangeParam", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SetExchangeParam" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->SetExchangeParam();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SetParamLD(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SetParamLD", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SetParamLD" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->SetParamLD();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SetPointPosition(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SetPointPosition", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SetPointPosition" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->SetPointPosition();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SetRKParameters(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SetRKParameters", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SetRKParameters" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->SetRKParameters();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SetSerialNumber(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SetSerialNumber", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SetSerialNumber" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->SetSerialNumber();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SetTime(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SetTime", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SetTime" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->SetTime();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ShowProperties(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ShowProperties", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ShowProperties" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ShowProperties();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_StopEKLZDocumentPrinting(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_StopEKLZDocumentPrinting", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_StopEKLZDocumentPrinting" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->StopEKLZDocumentPrinting();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_StopRK(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_StopRK", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_StopRK" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->StopRK();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Storno(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Storno", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Storno" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->Storno();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_StornoEx(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_StornoEx", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_StornoEx" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->StornoEx();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_StornoCharge(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_StornoCharge", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_StornoCharge" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->StornoCharge();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_StornoDiscount(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_StornoDiscount", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_StornoDiscount" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->StornoDiscount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SummOilCheck(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SummOilCheck", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SummOilCheck" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->SummOilCheck();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SysAdminCancelCheck(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SysAdminCancelCheck", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SysAdminCancelCheck" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->SysAdminCancelCheck();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Test(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Test", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Test" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->Test();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_WriteLicense(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_WriteLicense", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_WriteLicense" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->WriteLicense();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_WriteTable(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_WriteTable", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_WriteTable" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->WriteTable();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintStringWithFont(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintStringWithFont", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintStringWithFont" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintStringWithFont();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_BatteryCondition(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_BatteryCondition", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_BatteryCondition" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_BatteryCondition();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_CheckResult(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_CheckResult", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_CheckResult" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)((kkt_driver::classic_interface const *)arg1)->Get_CheckResult();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_CheckResult(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_CheckResult" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_CheckResult" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  (arg1)->Set_CheckResult(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_CurrentDozeInMilliliters(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_CurrentDozeInMilliliters", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_CurrentDozeInMilliliters" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_CurrentDozeInMilliliters();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_CurrentDozeInMilliliters(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_CurrentDozeInMilliliters" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_CurrentDozeInMilliliters" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_CurrentDozeInMilliliters(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_CurrentDozeInMoney(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_CurrentDozeInMoney", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_CurrentDozeInMoney" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)((kkt_driver::classic_interface const *)arg1)->Get_CurrentDozeInMoney();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_CurrentDozeInMoney(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_CurrentDozeInMoney" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_CurrentDozeInMoney" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  (arg1)->Set_CurrentDozeInMoney(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_DozeInMilliliters(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_DozeInMilliliters", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_DozeInMilliliters" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_DozeInMilliliters();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_DozeInMilliliters(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_DozeInMilliliters" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_DozeInMilliliters" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_DozeInMilliliters(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_DozeInMoney(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_DozeInMoney", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_DozeInMoney" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)((kkt_driver::classic_interface const *)arg1)->Get_DozeInMoney();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_DozeInMoney(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_DozeInMoney" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_DozeInMoney" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  (arg1)->Set_DozeInMoney(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_EmergencyStopCode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_EmergencyStopCode", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_EmergencyStopCode" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_EmergencyStopCode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_EmergencyStopCodeDescription(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_EmergencyStopCodeDescription", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_EmergencyStopCodeDescription" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = ((kkt_driver::classic_interface const *)arg1)->Get_EmergencyStopCodeDescription();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_IsCheckClosed(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_IsCheckClosed", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_IsCheckClosed" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_IsCheckClosed();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_IsCheckMadeOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_IsCheckMadeOut", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_IsCheckMadeOut" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_IsCheckMadeOut();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_Motor(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_Motor", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_Motor" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_Motor();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_Pistol(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_Pistol", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_Pistol" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_Pistol();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_RKNumber(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_RKNumber", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_RKNumber" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_RKNumber();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_RKNumber(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_RKNumber" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_RKNumber" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_RKNumber(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_RoughValve(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_RoughValve", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_RoughValve" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_RoughValve();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_SlowingInMilliliters(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_SlowingInMilliliters", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_SlowingInMilliliters" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_SlowingInMilliliters();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_SlowingInMilliliters(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_SlowingInMilliliters" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_SlowingInMilliliters" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_SlowingInMilliliters(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_SlowingValve(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_SlowingValve", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_SlowingValve" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_SlowingValve();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_StatusRK(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_StatusRK", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_StatusRK" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_StatusRK();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_StatusRKDescription(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_StatusRKDescription", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_StatusRKDescription" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = ((kkt_driver::classic_interface const *)arg1)->Get_StatusRKDescription();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_TRKNumber(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_TRKNumber", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_TRKNumber" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_TRKNumber();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_TRKNumber(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_TRKNumber" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_TRKNumber" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_TRKNumber(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_WaitPrintingTime(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_WaitPrintingTime", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_WaitPrintingTime" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_WaitPrintingTime();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EKLZActivizationResult(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EKLZActivizationResult", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EKLZActivizationResult" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->EKLZActivizationResult();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EKLZActivization(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EKLZActivization", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EKLZActivization" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->EKLZActivization();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CloseEKLZArchive(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CloseEKLZArchive", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CloseEKLZArchive" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->CloseEKLZArchive();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetEKLZSerialNumber(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetEKLZSerialNumber", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetEKLZSerialNumber" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetEKLZSerialNumber();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EKLZInterrupt(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EKLZInterrupt", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EKLZInterrupt" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->EKLZInterrupt();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetEKLZCode1Report(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetEKLZCode1Report", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetEKLZCode1Report" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetEKLZCode1Report();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetEKLZCode2Report(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetEKLZCode2Report", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetEKLZCode2Report" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetEKLZCode2Report();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TestEKLZArchiveIntegrity(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TestEKLZArchiveIntegrity", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TestEKLZArchiveIntegrity" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->TestEKLZArchiveIntegrity();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_TestNumber(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_TestNumber", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_TestNumber" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_TestNumber();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_TestNumber(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_TestNumber" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_TestNumber" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_TestNumber(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetEKLZVersion(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetEKLZVersion", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetEKLZVersion" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetEKLZVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_InitEKLZArchive(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_InitEKLZArchive", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_InitEKLZArchive" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->InitEKLZArchive();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetEKLZData(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetEKLZData", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetEKLZData" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetEKLZData();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetEKLZJournal(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetEKLZJournal", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetEKLZJournal" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetEKLZJournal();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetEKLZDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetEKLZDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetEKLZDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetEKLZDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetEKLZDepartmentReportInDatesRange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetEKLZDepartmentReportInDatesRange", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetEKLZDepartmentReportInDatesRange" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetEKLZDepartmentReportInDatesRange();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetEKLZDepartmentReportInSessionsRange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetEKLZDepartmentReportInSessionsRange", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetEKLZDepartmentReportInSessionsRange" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetEKLZDepartmentReportInSessionsRange();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetEKLZSessionReportInDatesRange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetEKLZSessionReportInDatesRange", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetEKLZSessionReportInDatesRange" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetEKLZSessionReportInDatesRange();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetEKLZSessionReportInSessionsRange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetEKLZSessionReportInSessionsRange", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetEKLZSessionReportInSessionsRange" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetEKLZSessionReportInSessionsRange();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetEKLZSessionTotal(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetEKLZSessionTotal", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetEKLZSessionTotal" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetEKLZSessionTotal();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetEKLZActivizationResult(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetEKLZActivizationResult", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetEKLZActivizationResult" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetEKLZActivizationResult();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SetEKLZResultCode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SetEKLZResultCode", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SetEKLZResultCode" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->SetEKLZResultCode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_EKLZResultCode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_EKLZResultCode" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_EKLZResultCode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_EKLZResultCode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OpenFiscalSlipDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OpenFiscalSlipDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OpenFiscalSlipDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->OpenFiscalSlipDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OpenStandardFiscalSlipDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OpenStandardFiscalSlipDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OpenStandardFiscalSlipDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->OpenStandardFiscalSlipDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RegistrationOnSlipDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RegistrationOnSlipDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RegistrationOnSlipDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->RegistrationOnSlipDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_StandardRegistrationOnSlipDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_StandardRegistrationOnSlipDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_StandardRegistrationOnSlipDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->StandardRegistrationOnSlipDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ChargeOnSlipDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ChargeOnSlipDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ChargeOnSlipDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ChargeOnSlipDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_StandardChargeOnSlipDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_StandardChargeOnSlipDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_StandardChargeOnSlipDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->StandardChargeOnSlipDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CloseCheckOnSlipDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CloseCheckOnSlipDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CloseCheckOnSlipDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->CloseCheckOnSlipDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_StandardCloseCheckOnSlipDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_StandardCloseCheckOnSlipDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_StandardCloseCheckOnSlipDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->StandardCloseCheckOnSlipDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ConfigureSlipDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ConfigureSlipDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ConfigureSlipDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ConfigureSlipDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ConfigureStandardSlipDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ConfigureStandardSlipDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ConfigureStandardSlipDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ConfigureStandardSlipDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FillSlipDocumentWithUnfiscalInfo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FillSlipDocumentWithUnfiscalInfo", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FillSlipDocumentWithUnfiscalInfo" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FillSlipDocumentWithUnfiscalInfo();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ClearSlipDocumentBufferString(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ClearSlipDocumentBufferString", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ClearSlipDocumentBufferString" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ClearSlipDocumentBufferString();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ClearSlipDocumentBuffer(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ClearSlipDocumentBuffer", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ClearSlipDocumentBuffer" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ClearSlipDocumentBuffer();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintSlipDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintSlipDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintSlipDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintSlipDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DiscountOnSlipDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DiscountOnSlipDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DiscountOnSlipDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->DiscountOnSlipDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_StandardDiscountOnSlipDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_StandardDiscountOnSlipDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_StandardDiscountOnSlipDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->StandardDiscountOnSlipDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EjectSlipDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EjectSlipDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EjectSlipDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->EjectSlipDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LoadLineDataEx(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LoadLineDataEx", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LoadLineDataEx" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->LoadLineDataEx();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DrawEx(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DrawEx", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DrawEx" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->DrawEx();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ConfigureGeneralSlipDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ConfigureGeneralSlipDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ConfigureGeneralSlipDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ConfigureGeneralSlipDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_Tax1TurnOverFont(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_Tax1TurnOverFont", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_Tax1TurnOverFont" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_Tax1TurnOverFont();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_Tax1TurnOverFont(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_Tax1TurnOverFont" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_Tax1TurnOverFont" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_Tax1TurnOverFont(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_Tax2TurnOverFont(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_Tax2TurnOverFont", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_Tax2TurnOverFont" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_Tax2TurnOverFont();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_Tax2TurnOverFont(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_Tax2TurnOverFont" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_Tax2TurnOverFont" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_Tax2TurnOverFont(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_Tax3TurnOverFont(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_Tax3TurnOverFont", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_Tax3TurnOverFont" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_Tax3TurnOverFont();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_Tax3TurnOverFont(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_Tax3TurnOverFont" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_Tax3TurnOverFont" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_Tax3TurnOverFont(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_Tax4TurnOverFont(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_Tax4TurnOverFont", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_Tax4TurnOverFont" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_Tax4TurnOverFont();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_Tax4TurnOverFont(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_Tax4TurnOverFont" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_Tax4TurnOverFont" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_Tax4TurnOverFont(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_Tax1TurnOverSymbolNumber(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_Tax1TurnOverSymbolNumber", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_Tax1TurnOverSymbolNumber" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_Tax1TurnOverSymbolNumber();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_Tax1TurnOverSymbolNumber(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_Tax1TurnOverSymbolNumber" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_Tax1TurnOverSymbolNumber" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_Tax1TurnOverSymbolNumber(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_WideLoadLineData(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_WideLoadLineData", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_WideLoadLineData" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->WideLoadLineData();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintTaxReport(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintTaxReport", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintTaxReport" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintTaxReport();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_FileVersionMS(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint32_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_FileVersionMS", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_FileVersionMS" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (uint32_t)((kkt_driver::classic_interface const *)arg1)->Get_FileVersionMS();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_FileVersionLS(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint32_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_FileVersionLS", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_FileVersionLS" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (uint32_t)((kkt_driver::classic_interface const *)arg1)->Get_FileVersionLS();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetLongSerialNumberAndLongRNM(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetLongSerialNumberAndLongRNM", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetLongSerialNumberAndLongRNM" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetLongSerialNumberAndLongRNM();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SetLongSerialNumber(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SetLongSerialNumber", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SetLongSerialNumber" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->SetLongSerialNumber();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FiscalizationWithLongRNM(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FiscalizationWithLongRNM", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FiscalizationWithLongRNM" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FiscalizationWithLongRNM();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Connect2(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Connect2", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Connect2" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->Connect2();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetECRPrinterStatus(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetECRPrinterStatus", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetECRPrinterStatus" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetECRPrinterStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_PrinterStatus(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_PrinterStatus", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_PrinterStatus" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_PrinterStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ServerConnect(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ServerConnect", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ServerConnect" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ServerConnect();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ServerDisconnect(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ServerDisconnect", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ServerDisconnect" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ServerDisconnect();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LockPort(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LockPort", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LockPort" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->LockPort();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UnlockPort(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_UnlockPort", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UnlockPort" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->UnlockPort();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_AdminUnlockPort(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_AdminUnlockPort", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_AdminUnlockPort" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->AdminUnlockPort();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_AdminUnlockPorts(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_AdminUnlockPorts", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_AdminUnlockPorts" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->AdminUnlockPorts();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ServerCheckKey(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ServerCheckKey", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ServerCheckKey" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ServerCheckKey();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetFontMetrics(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetFontMetrics", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetFontMetrics" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetFontMetrics();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetFreeLDNumber(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetFreeLDNumber", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetFreeLDNumber" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetFreeLDNumber();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadTable2(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadTable2", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadTable2" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadTable2();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_WriteTable2(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_WriteTable2", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_WriteTable2" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->WriteTable2();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SetFieldMinValue(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SetFieldMinValue" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SetFieldMinValue" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->SetFieldMinValue(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SetFieldMaxValue(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SetFieldMaxValue" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SetFieldMaxValue" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->SetFieldMaxValue(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_CPLog(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_CPLog", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_CPLog" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_CPLog();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_CPLog(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_CPLog" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_CPLog" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Set_CPLog(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CashControlOpen(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CashControlOpen", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CashControlOpen" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->CashControlOpen();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CashControlClose(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CashControlClose", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CashControlClose" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->CashControlClose();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SaveParams(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SaveParams", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SaveParams" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->SaveParams();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_CPLogFile(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_CPLogFile", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_CPLogFile" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = ((kkt_driver::classic_interface const *)arg1)->Get_CPLogFile();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_CPLogFile(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_CPLogFile" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_Set_CPLogFile" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_Set_CPLogFile" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->Set_CPLogFile((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_ComLogFile(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_ComLogFile", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_ComLogFile" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = ((kkt_driver::classic_interface const *)arg1)->Get_ComLogFile();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_ComLogFile(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_ComLogFile" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_Set_ComLogFile" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_Set_ComLogFile" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->Set_ComLogFile((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_RecoverError165(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_RecoverError165", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_RecoverError165" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_RecoverError165();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_RecoverError165(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_RecoverError165" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_RecoverError165" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Set_RecoverError165(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_MaxRecoverCount(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_MaxRecoverCount", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_MaxRecoverCount" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_MaxRecoverCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_MaxRecoverCount(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_MaxRecoverCount" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_MaxRecoverCount" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_MaxRecoverCount(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetEKLZCode1Status(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetEKLZCode1Status", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetEKLZCode1Status" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetEKLZCode1Status();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetEKLZCode2Status(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetEKLZCode2Status", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetEKLZCode2Status" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetEKLZCode2Status();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadWriteFM(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadWriteFM", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadWriteFM" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadWriteFM();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintHeader(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintHeader", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintHeader" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintHeader();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CloseCheckWithResult(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CloseCheckWithResult", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CloseCheckWithResult" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->CloseCheckWithResult();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_OperationCode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_OperationCode", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_OperationCode" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_OperationCode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_AccType(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_AccType", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_AccType" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_AccType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_AccType(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_AccType" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_AccType" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_AccType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_Address(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_Address", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_Address" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_Address();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_Address(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_Address" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_Address" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_Address(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_WrittenByte(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_WrittenByte", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_WrittenByte" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_WrittenByte();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_WrittenByte(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_WrittenByte" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_WrittenByte" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_WrittenByte(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_ReadByte(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_ReadByte", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_ReadByte" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_ReadByte();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_TransferByte(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_TransferByte", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_TransferByte" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = ((kkt_driver::classic_interface const *)arg1)->Get_TransferByte();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_TransferByte(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_TransferByte" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_Set_TransferByte" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_Set_TransferByte" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->Set_TransferByte((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_AboutBox(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_AboutBox", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_AboutBox" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->AboutBox();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PresenterKeep(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PresenterKeep", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PresenterKeep" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PresenterKeep();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PresenterPush(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PresenterPush", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PresenterPush" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PresenterPush();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OpenScreen(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OpenScreen", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OpenScreen" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->OpenScreen();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CloseScreen(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CloseScreen", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CloseScreen" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->CloseScreen();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_ComLogOnlyErrors(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_ComLogOnlyErrors", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_ComLogOnlyErrors" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_ComLogOnlyErrors();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_ComLogOnlyErrors(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_ComLogOnlyErrors" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_ComLogOnlyErrors" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Set_ComLogOnlyErrors(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SetSCPassword(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SetSCPassword", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SetSCPassword" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->SetSCPassword();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MethodSupported(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MethodSupported", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MethodSupported" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)(arg1)->MethodSupported();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PropertySupported(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PropertySupported", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PropertySupported" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)(arg1)->PropertySupported();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LockPortTimeout(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LockPortTimeout", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LockPortTimeout" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->LockPortTimeout();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetIBMStatus(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetIBMStatus", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetIBMStatus" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetIBMStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetShortIBMStatus(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetShortIBMStatus", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetShortIBMStatus" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetShortIBMStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetCommandParams(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetCommandParams", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetCommandParams" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetCommandParams();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SetCommandParams(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SetCommandParams", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SetCommandParams" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->SetCommandParams();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SaveCommandParams(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SaveCommandParams", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SaveCommandParams" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->SaveCommandParams();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SetAllCommandsParams(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SetAllCommandsParams", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SetAllCommandsParams" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->SetAllCommandsParams();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SetDefCommandsParams(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SetDefCommandsParams", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SetDefCommandsParams" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->SetDefCommandsParams();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OpenSession(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OpenSession", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OpenSession" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->OpenSession();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_WaitForPrinting(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_WaitForPrinting", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_WaitForPrinting" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->WaitForPrinting();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetInterval(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetInterval", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetInterval" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetInterval();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SetInterval(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SetInterval", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SetInterval" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->SetInterval();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ShowTablesDlg(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ShowTablesDlg", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ShowTablesDlg" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ShowTablesDlg();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_ParamsPageIndex(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_ParamsPageIndex", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_ParamsPageIndex" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_ParamsPageIndex();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_ParamsPageIndex(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_ParamsPageIndex" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_ParamsPageIndex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_ParamsPageIndex(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ShowPayParams(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ShowPayParams", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ShowPayParams" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ShowPayParams();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReprintSlipDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReprintSlipDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReprintSlipDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReprintSlipDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CardPayProperties(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CardPayProperties", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CardPayProperties" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->CardPayProperties();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_CardPayEnabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_CardPayEnabled", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_CardPayEnabled" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_CardPayEnabled();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_CardPayEnabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_CardPayEnabled" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_CardPayEnabled" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Set_CardPayEnabled(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_CardPayType(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_CardPayType", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_CardPayType" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_CardPayType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_CardPayType(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_CardPayType" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_CardPayType" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_CardPayType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_LogCommands(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_LogCommands", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_LogCommands" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_LogCommands();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_LogCommands(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_LogCommands" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_LogCommands" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Set_LogCommands(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_LogMethods(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_LogMethods", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_LogMethods" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_LogMethods();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_LogMethods(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_LogMethods" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_LogMethods" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Set_LogMethods(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintLine(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintLine", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintLine" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintLine();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_JournalClear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_JournalClear", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_JournalClear" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->JournalClear();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_JournalGetRow(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_JournalGetRow", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_JournalGetRow" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->JournalGetRow();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_JournalInit(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_JournalInit", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_JournalInit" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->JournalInit();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FindDevice(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FindDevice", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FindDevice" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FindDevice();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LoadParams(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LoadParams", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LoadParams" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->LoadParams();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FinishDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FinishDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FinishDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FinishDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintTrailer(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintTrailer", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintTrailer" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintTrailer();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_WaitForCheckClose(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_WaitForCheckClose", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_WaitForCheckClose" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->WaitForCheckClose();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetSummFactor(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetSummFactor", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetSummFactor" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetSummFactor();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetQuantityFactor(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetQuantityFactor", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetQuantityFactor" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetQuantityFactor();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadDeviceMetrics(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadDeviceMetrics", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadDeviceMetrics" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadDeviceMetrics();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadEcrStatus(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadEcrStatus", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadEcrStatus" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadEcrStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SaveState(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SaveState", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SaveState" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->SaveState();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RestoreState(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RestoreState", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RestoreState" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->RestoreState();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_HasCashControlLicense(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_HasCashControlLicense", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_HasCashControlLicense" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_HasCashControlLicense();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LoadImage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LoadImage", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LoadImage" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->LoadImage();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetCashAcceptorStatus(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetCashAcceptorStatus", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetCashAcceptorStatus" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetCashAcceptorStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetCashAcceptorRegisters(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetCashAcceptorRegisters", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetCashAcceptorRegisters" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetCashAcceptorRegisters();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CashAcceptorReport(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CashAcceptorReport", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CashAcceptorReport" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->CashAcceptorReport();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ClearResult(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ClearResult", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ClearResult" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ClearResult();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MasterPayClearBuffer(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MasterPayClearBuffer", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MasterPayClearBuffer" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->MasterPayClearBuffer();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MasterPayAddTextBlock(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MasterPayAddTextBlock", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MasterPayAddTextBlock" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->MasterPayAddTextBlock();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MasterPayCreateMac(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MasterPayCreateMac", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MasterPayCreateMac" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->MasterPayCreateMac();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LoadBlockData(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LoadBlockData", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LoadBlockData" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->LoadBlockData();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetEKLZCode3Report(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetEKLZCode3Report", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetEKLZCode3Report" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetEKLZCode3Report();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadModemParameter(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadModemParameter", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadModemParameter" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadModemParameter();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_WriteModemParameter(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_WriteModemParameter", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_WriteModemParameter" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->WriteModemParameter();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_ParameterNumber(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_ParameterNumber", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_ParameterNumber" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_ParameterNumber();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_ParameterNumber(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_ParameterNumber" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_ParameterNumber" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_ParameterNumber(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetPortNames(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetPortNames", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetPortNames" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetPortNames();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OutputReceipt(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OutputReceipt", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OutputReceipt" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->OutputReceipt();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Sale2(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Sale2", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Sale2" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->Sale2();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintCliche(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintCliche", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintCliche" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintCliche();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintBarcodeLine(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintBarcodeLine", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintBarcodeLine" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintBarcodeLine();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintBarcodeGraph(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintBarcodeGraph", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintBarcodeGraph" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintBarcodeGraph();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_BarcodeTypes(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_BarcodeTypes", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_BarcodeTypes" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = ((kkt_driver::classic_interface const *)arg1)->Get_BarcodeTypes();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_BarcodeAlignments(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_BarcodeAlignments", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_BarcodeAlignments" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = ((kkt_driver::classic_interface const *)arg1)->Get_BarcodeAlignments();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ResetECR(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ResetECR", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ResetECR" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ResetECR();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintZReportFromBuffer(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintZReportFromBuffer", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintZReportFromBuffer" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintZReportFromBuffer();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintZReportInBuffer(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintZReportInBuffer", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintZReportInBuffer" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintZReportInBuffer();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_LogFileMaxSize(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_LogFileMaxSize", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_LogFileMaxSize" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_LogFileMaxSize();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_LogFileMaxSize(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_LogFileMaxSize" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_LogFileMaxSize" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_LogFileMaxSize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ClearPrintBuffer(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ClearPrintBuffer", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ClearPrintBuffer" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ClearPrintBuffer();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadPrintBufferLine(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadPrintBufferLine", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadPrintBufferLine" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadPrintBufferLine();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_PrintBufferLineNumber(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_PrintBufferLineNumber", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_PrintBufferLineNumber" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_PrintBufferLineNumber();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_NakCount(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_NakCount", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_NakCount" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_NakCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_NakCount(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_NakCount" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_NakCount" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_NakCount(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_MaxAnswerReadCount(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_MaxAnswerReadCount", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_MaxAnswerReadCount" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_MaxAnswerReadCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_MaxCommandSendCount(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_MaxCommandSendCount", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_MaxCommandSendCount" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_MaxCommandSendCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_MaxENQSendCount(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_MaxENQSendCount", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_MaxENQSendCount" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_MaxENQSendCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_MaxAnswerReadCount(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_MaxAnswerReadCount" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_MaxAnswerReadCount" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_MaxAnswerReadCount(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_MaxCommandSendCount(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_MaxCommandSendCount" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_MaxCommandSendCount" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_MaxCommandSendCount(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_MaxENQSendCount(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_MaxENQSendCount" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_MaxENQSendCount" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_MaxENQSendCount(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OpenNonfiscalDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OpenNonfiscalDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OpenNonfiscalDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->OpenNonfiscalDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CloseNonFiscalDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CloseNonFiscalDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CloseNonFiscalDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->CloseNonFiscalDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintAttribute(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintAttribute", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintAttribute" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintAttribute();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_ModelParamValue(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_ModelParamValue", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_ModelParamValue" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_ModelParamValue();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LoadCashControlParams(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LoadCashControlParams", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LoadCashControlParams" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->LoadCashControlParams();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_EnteredTaxPassword(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint32_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_EnteredTaxPassword", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_EnteredTaxPassword" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (uint32_t)((kkt_driver::classic_interface const *)arg1)->Get_EnteredTaxPassword();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_BanknoteType(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_BanknoteType" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_BanknoteType" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_BanknoteType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadBanknoteCount(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadBanknoteCount", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadBanknoteCount" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadBanknoteCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintOperationalTaxReport(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintOperationalTaxReport", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintOperationalTaxReport" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintOperationalTaxReport();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_CapOpenCheck(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_CapOpenCheck", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_CapOpenCheck" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_CapOpenCheck();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_PollDescription(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_PollDescription", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_PollDescription" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = ((kkt_driver::classic_interface const *)arg1)->Get_PollDescription();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_WaitConnection(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_WaitConnection", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_WaitConnection" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->WaitConnection();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadModelParamDescription(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadModelParamDescription", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadModelParamDescription" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadModelParamDescription();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintBarcodeUsingPrinter(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintBarcodeUsingPrinter", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintBarcodeUsingPrinter" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintBarcodeUsingPrinter();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CloseCheckWithKPK(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CloseCheckWithKPK", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CloseCheckWithKPK" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->CloseCheckWithKPK();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadEKLZActivizationParams(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadEKLZActivizationParams", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadEKLZActivizationParams" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadEKLZActivizationParams();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetShortReportInDatesRange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetShortReportInDatesRange", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetShortReportInDatesRange" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetShortReportInDatesRange();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetShortReportInSessionRange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetShortReportInSessionRange", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetShortReportInSessionRange" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetShortReportInSessionRange();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadLastReceipt(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadLastReceipt", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadLastReceipt" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadLastReceipt();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadLastReceiptLine(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadLastReceiptLine", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadLastReceiptLine" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadLastReceiptLine();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadLastReceiptMac(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadLastReceiptMac", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadLastReceiptMac" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadLastReceiptMac();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BeginDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BeginDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BeginDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->BeginDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EndDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EndDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EndDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->EndDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Print2DBarcode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Print2DBarcode", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Print2DBarcode" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->Print2DBarcode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LoadAndPrint2DBarcode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LoadAndPrint2DBarcode", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LoadAndPrint2DBarcode" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->LoadAndPrint2DBarcode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ExcisableOperation(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ExcisableOperation", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ExcisableOperation" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ExcisableOperation();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadReportBufferLine(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadReportBufferLine", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadReportBufferLine" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadReportBufferLine();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadParams(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadParams", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadParams" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadParams();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetCashRegEx(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetCashRegEx", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetCashRegEx" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetCashRegEx();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetWareBaseCashRegs(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetWareBaseCashRegs", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetWareBaseCashRegs" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetWareBaseCashRegs();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintCashierReport(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintCashierReport", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintCashierReport" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintCashierReport();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintHourlyReport(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintHourlyReport", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintHourlyReport" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintHourlyReport();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintWareReport(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintWareReport", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintWareReport" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintWareReport();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UpdateWare(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_UpdateWare", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UpdateWare" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->UpdateWare();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CheckFM(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CheckFM", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CheckFM" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->CheckFM();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RemoveWare(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RemoveWare", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RemoveWare" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->RemoveWare();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadErrorDescription(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadErrorDescription", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadErrorDescription" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadErrorDescription();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadLastErrorDescription(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadLastErrorDescription", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadLastErrorDescription" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadLastErrorDescription();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadWare(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadWare", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadWare" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadWare();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadModelParam(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadModelParam", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadModelParam" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadModelParam();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_InitEEPROM(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_InitEEPROM", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_InitEEPROM" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->InitEEPROM();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CheckConnection(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CheckConnection", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CheckConnection" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->CheckConnection();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ChangeProtocol(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ChangeProtocol", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ChangeProtocol" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ChangeProtocol();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetECRParams(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetECRParams", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetECRParams" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetECRParams();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ShowImportDlg(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ShowImportDlg", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ShowImportDlg" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ShowImportDlg();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_JournalOperation(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_JournalOperation", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_JournalOperation" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->JournalOperation();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MFPActivization(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MFPActivization", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MFPActivization" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->MFPActivization();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MFPCloseArchive(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MFPCloseArchive", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MFPCloseArchive" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->MFPCloseArchive();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MFPGetPermitActivizationCode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MFPGetPermitActivizationCode", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MFPGetPermitActivizationCode" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->MFPGetPermitActivizationCode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MFPGetCustomerCode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MFPGetCustomerCode", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MFPGetCustomerCode" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->MFPGetCustomerCode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MFPPrepareActivization(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MFPPrepareActivization", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MFPPrepareActivization" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->MFPPrepareActivization();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MFPSetCustomerCode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MFPSetCustomerCode", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MFPSetCustomerCode" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->MFPSetCustomerCode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MFPSetPermitActivizationCode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MFPSetPermitActivizationCode", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MFPSetPermitActivizationCode" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->MFPSetPermitActivizationCode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MFPGetPrepareActivizationResult(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MFPGetPrepareActivizationResult", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MFPGetPrepareActivizationResult" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->MFPGetPrepareActivizationResult();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CloseCheckEx(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CloseCheckEx", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CloseCheckEx" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->CloseCheckEx();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetMFPCode3Status(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetMFPCode3Status", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetMFPCode3Status" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetMFPCode3Status();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_ReadTimeout(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_ReadTimeout", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_ReadTimeout" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_ReadTimeout();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_ReadTimeout(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_ReadTimeout" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_ReadTimeout" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_ReadTimeout(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ClearReportBuffer(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ClearReportBuffer", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ClearReportBuffer" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ClearReportBuffer();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ShowAdditionalParams(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ShowAdditionalParams", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ShowAdditionalParams" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ShowAdditionalParams();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetCloudCashdeskParams(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetCloudCashdeskParams", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetCloudCashdeskParams" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetCloudCashdeskParams();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DrawScale(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DrawScale", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DrawScale" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->DrawScale();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LoadGraphics512(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LoadGraphics512", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LoadGraphics512" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->LoadGraphics512();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintGraphics512(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintGraphics512", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintGraphics512" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintGraphics512();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_GraphBufferType(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_GraphBufferType", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_GraphBufferType" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_GraphBufferType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_GraphBufferType(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_GraphBufferType" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_GraphBufferType" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_GraphBufferType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_LineLength(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_LineLength", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_LineLength" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_LineLength();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_LineLength(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_LineLength" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_LineLength" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_LineLength(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_FNDocumentData(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_FNDocumentData" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_FNDocumentData" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_FNDocumentData(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_FNLifeState(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_FNLifeState" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_FNLifeState" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_FNLifeState(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_FNSessionState(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_FNSessionState" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_FNSessionState" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_FNSessionState(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_FNSoftVersion(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_FNSoftVersion" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_Set_FNSoftVersion" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_Set_FNSoftVersion" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->Set_FNSoftVersion((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_FNWarningFlags(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_FNWarningFlags" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_FNWarningFlags" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_FNWarningFlags(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNGetExpirationTime(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNGetExpirationTime", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNGetExpirationTime" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNGetExpirationTime();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNGetSerial(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNGetSerial", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNGetSerial" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNGetSerial();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNGetStatus(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNGetStatus", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNGetStatus" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNGetStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNGetVersion(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNGetVersion", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNGetVersion" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNBeginFiscalization(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNBeginFiscalization", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNBeginFiscalization" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNBeginFiscalization();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNFiscalization(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNFiscalization", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNFiscalization" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNFiscalization();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_WorkMode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_WorkMode", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_WorkMode" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_WorkMode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_WorkMode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_WorkMode" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_WorkMode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_WorkMode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNCancelDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNCancelDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNCancelDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNCancelDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNResetState(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNResetState", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNResetState" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNResetState();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNFindDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNFindDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNFindDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNFindDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_DocumentData(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_DocumentData", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_DocumentData" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = ((kkt_driver::classic_interface const *)arg1)->Get_DocumentData();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_DocumentData(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_DocumentData" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_Set_DocumentData" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_Set_DocumentData" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->Set_DocumentData((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNOpenSession(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNOpenSession", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNOpenSession" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNOpenSession();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNSendTLV(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNSendTLV", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNSendTLV" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNSendTLV();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNDiscountOperation(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNDiscountOperation", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNDiscountOperation" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNDiscountOperation();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNStorno(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNStorno", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNStorno" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNStorno();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OFDExchange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OFDExchange", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OFDExchange" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->OFDExchange();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_OFDPort(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_OFDPort", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_OFDPort" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_OFDPort();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_OFDPort(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_OFDPort" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_OFDPort" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_OFDPort(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_OFDServer(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_OFDServer", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_OFDServer" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = ((kkt_driver::classic_interface const *)arg1)->Get_OFDServer();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_OFDServer(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_OFDServer" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_Set_OFDServer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_Set_OFDServer" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->Set_OFDServer((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_OFDPollPeriod(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_OFDPollPeriod", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_OFDPollPeriod" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_OFDPollPeriod();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_OFDPollPeriod(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_OFDPollPeriod" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_OFDPollPeriod" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_OFDPollPeriod(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_OFDEnabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_OFDEnabled", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_OFDEnabled" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_OFDEnabled();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_OFDEnabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_OFDEnabled" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_OFDEnabled" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Set_OFDEnabled(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNBeginCalculationStateReport(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNBeginCalculationStateReport", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNBeginCalculationStateReport" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNBeginCalculationStateReport();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNBeginCloseFiscalMode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNBeginCloseFiscalMode", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNBeginCloseFiscalMode" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNBeginCloseFiscalMode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNBeginCloseSession(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNBeginCloseSession", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNBeginCloseSession" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNBeginCloseSession();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNBeginCorrectionReceipt(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNBeginCorrectionReceipt", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNBeginCorrectionReceipt" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNBeginCorrectionReceipt();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNBeginOpenSession(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNBeginOpenSession", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNBeginOpenSession" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNBeginOpenSession();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNBeginRegistrationReport(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNBeginRegistrationReport", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNBeginRegistrationReport" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNBeginRegistrationReport();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNBuildCalculationStateReport(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNBuildCalculationStateReport", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNBuildCalculationStateReport" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNBuildCalculationStateReport();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNBuildCorrectionReceipt(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNBuildCorrectionReceipt", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNBuildCorrectionReceipt" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNBuildCorrectionReceipt();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNBuildRegistrationReport(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNBuildRegistrationReport", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNBuildRegistrationReport" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNBuildRegistrationReport();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNCloseFiscalMode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNCloseFiscalMode", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNCloseFiscalMode" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNCloseFiscalMode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNCloseSession(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNCloseSession", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNCloseSession" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNCloseSession();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNGetCurrentSessionParams(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNGetCurrentSessionParams", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNGetCurrentSessionParams" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNGetCurrentSessionParams();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNGetInfoExchangeStatus(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNGetInfoExchangeStatus", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNGetInfoExchangeStatus" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNGetInfoExchangeStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNGetOFDTicketByDocNumber(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNGetOFDTicketByDocNumber", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNGetOFDTicketByDocNumber" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNGetOFDTicketByDocNumber();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNGetUnconfirmedDocCount(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNGetUnconfirmedDocCount", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNGetUnconfirmedDocCount" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNGetUnconfirmedDocCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNReadFiscalDocumentTLV(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNReadFiscalDocumentTLV", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNReadFiscalDocumentTLV" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNReadFiscalDocumentTLV();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNRequestFiscalDocumentTLV(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNRequestFiscalDocumentTLV", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNRequestFiscalDocumentTLV" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNRequestFiscalDocumentTLV();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNBuildReregistrationReport(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNBuildReregistrationReport", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNBuildReregistrationReport" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNBuildReregistrationReport();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNGetFiscalizationResult(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNGetFiscalizationResult", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNGetFiscalizationResult" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNGetFiscalizationResult();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNDiscountTaxOperation(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNDiscountTaxOperation", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNDiscountTaxOperation" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNDiscountTaxOperation();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNCloseCheckEx(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNCloseCheckEx", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNCloseCheckEx" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNCloseCheckEx();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_TaxValue(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_TaxValue", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_TaxValue" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)((kkt_driver::classic_interface const *)arg1)->Get_TaxValue();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_TaxValue(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_TaxValue" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_TaxValue" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  (arg1)->Set_TaxValue(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_DiscountName(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_DiscountName", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_DiscountName" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = ((kkt_driver::classic_interface const *)arg1)->Get_DiscountName();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_DiscountName(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_DiscountName" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_Set_DiscountName" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_Set_DiscountName" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->Set_DiscountName((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNSendCustomerEmail(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNSendCustomerEmail", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNSendCustomerEmail" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNSendCustomerEmail();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Annulment(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Annulment", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Annulment" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->Annulment();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNDiscountChargeRN(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNDiscountChargeRN", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNDiscountChargeRN" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNDiscountChargeRN();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ExportTables(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ExportTables", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ExportTables" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ExportTables();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ImportTables(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ImportTables", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ImportTables" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ImportTables();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNSendTag(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNSendTag", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNSendTag" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNSendTag();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadSerialNumber(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadSerialNumber", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadSerialNumber" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadSerialNumber();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNPrintOperatorConfirm(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNPrintOperatorConfirm", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNPrintOperatorConfirm" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNPrintOperatorConfirm();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNGetFiscalizationResultByNumber(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNGetFiscalizationResultByNumber", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNGetFiscalizationResultByNumber" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNGetFiscalizationResultByNumber();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_AnnulmentRB(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_AnnulmentRB", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_AnnulmentRB" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->AnnulmentRB();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNGetTagDescription(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNGetTagDescription", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNGetTagDescription" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNGetTagDescription();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNPrintDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNPrintDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNPrintDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNPrintDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNGetDocumentAsString(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNGetDocumentAsString", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNGetDocumentAsString" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNGetDocumentAsString();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Ping(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Ping", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Ping" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->Ping();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_ICSEnabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_ICSEnabled", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_ICSEnabled" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_ICSEnabled();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_ICSPollPeriod(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_ICSPollPeriod", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_ICSPollPeriod" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_ICSPollPeriod();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_ICSEnabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_ICSEnabled" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_ICSEnabled" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Set_ICSEnabled(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_ICSPollPeriod(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_ICSPollPeriod" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_ICSPollPeriod" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_ICSPollPeriod(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNOperation(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNOperation", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNOperation" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNOperation();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNSendTLVOperation(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNSendTLVOperation", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNSendTLVOperation" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNSendTLVOperation();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_Summ1Enabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_Summ1Enabled", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_Summ1Enabled" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_Summ1Enabled();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_Summ1Enabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_Summ1Enabled" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_Summ1Enabled" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Set_Summ1Enabled(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_TaxValue2Enabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_TaxValue2Enabled", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_TaxValue2Enabled" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_TaxValue2Enabled();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_TaxValue3Enabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_TaxValue3Enabled", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_TaxValue3Enabled" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_TaxValue3Enabled();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_TaxValue4Enabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_TaxValue4Enabled", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_TaxValue4Enabled" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_TaxValue4Enabled();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_TaxValue5Enabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_TaxValue5Enabled", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_TaxValue5Enabled" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_TaxValue5Enabled();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_TaxValue6Enabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_TaxValue6Enabled", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_TaxValue6Enabled" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_TaxValue6Enabled();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_TaxValue7Enabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_TaxValue7Enabled", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_TaxValue7Enabled" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_TaxValue7Enabled();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_TaxValue8Enabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_TaxValue8Enabled", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_TaxValue8Enabled" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_TaxValue8Enabled();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_TaxValue9Enabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_TaxValue9Enabled", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_TaxValue9Enabled" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_TaxValue9Enabled();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_TaxValue10Enabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_TaxValue10Enabled", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_TaxValue10Enabled" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_TaxValue10Enabled();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_AddTaxesEnabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_AddTaxesEnabled", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_AddTaxesEnabled" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_AddTaxesEnabled();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_TaxValueEnabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_TaxValueEnabled", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_TaxValueEnabled" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_TaxValueEnabled();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_TaxValueEnabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_TaxValueEnabled" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_TaxValueEnabled" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Set_TaxValueEnabled(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_TaxValue2Enabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_TaxValue2Enabled" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_TaxValue2Enabled" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Set_TaxValue2Enabled(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_TaxValue3Enabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_TaxValue3Enabled" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_TaxValue3Enabled" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Set_TaxValue3Enabled(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_TaxValue4Enabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_TaxValue4Enabled" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_TaxValue4Enabled" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Set_TaxValue4Enabled(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_TaxValue5Enabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_TaxValue5Enabled" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_TaxValue5Enabled" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Set_TaxValue5Enabled(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_TaxValue6Enabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_TaxValue6Enabled" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_TaxValue6Enabled" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Set_TaxValue6Enabled(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_TaxValue7Enabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_TaxValue7Enabled" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_TaxValue7Enabled" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Set_TaxValue7Enabled(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_TaxValue8Enabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_TaxValue8Enabled" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_TaxValue8Enabled" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Set_TaxValue8Enabled(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_TaxValue9Enabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_TaxValue9Enabled" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_TaxValue9Enabled" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Set_TaxValue9Enabled(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_TaxValue10Enabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_TaxValue10Enabled" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_TaxValue10Enabled" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Set_TaxValue10Enabled(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_AddTaxesEnabled(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_AddTaxesEnabled" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_AddTaxesEnabled" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Set_AddTaxesEnabled(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNBuildCorrectionReceipt2(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNBuildCorrectionReceipt2", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNBuildCorrectionReceipt2" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNBuildCorrectionReceipt2();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_OFDReadTimeout(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_OFDReadTimeout", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_OFDReadTimeout" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_OFDReadTimeout();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_OFDReadTimeout(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_OFDReadTimeout" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_OFDReadTimeout" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_OFDReadTimeout(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNGetNonClearableSumm(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNGetNonClearableSumm", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNGetNonClearableSumm" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNGetNonClearableSumm();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_AutoEoD(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_AutoEoD", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_AutoEoD" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_AutoEoD();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_AutoEoD(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_AutoEoD" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_AutoEoD" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Set_AutoEoD(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ResetSerialNumber(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ResetSerialNumber", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ResetSerialNumber" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ResetSerialNumber();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DBFindDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DBFindDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DBFindDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->DBFindDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DBPrintDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DBPrintDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DBPrintDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->DBPrintDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_KKTLicense(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_KKTLicense", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_KKTLicense" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_KKTLicense();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_LicenseNumber(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_LicenseNumber", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_LicenseNumber" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_LicenseNumber();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_PUKCode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_PUKCode", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_PUKCode" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_PUKCode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadKKTLicenses(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadKKTLicenses", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadKKTLicenses" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadKKTLicenses();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_KKTLicense(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_KKTLicense" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_KKTLicense" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_KKTLicense(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_LicenseNumber(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_LicenseNumber" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_LicenseNumber" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_LicenseNumber(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_PUKCode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_PUKCode" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_PUKCode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_PUKCode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_OFDExchangeSuspended(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_OFDExchangeSuspended", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_OFDExchangeSuspended" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_OFDExchangeSuspended();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_OFDExchangeSuspended(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_OFDExchangeSuspended" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_OFDExchangeSuspended" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Set_OFDExchangeSuspended(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CloseCheckBel(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CloseCheckBel", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CloseCheckBel" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->CloseCheckBel();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_AutoOFDExchange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_AutoOFDExchange", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_AutoOFDExchange" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)((kkt_driver::classic_interface const *)arg1)->Get_AutoOFDExchange();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_AutoOFDExchange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_AutoOFDExchange" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_AutoOFDExchange" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->Set_AutoOFDExchange(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetKKTLicenseByNumber(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetKKTLicenseByNumber", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetKKTLicenseByNumber" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetKKTLicenseByNumber();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_WriteKKTLicense(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_WriteKKTLicense", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_WriteKKTLicense" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->WriteKKTLicense();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNSendSenderEmail(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNSendSenderEmail", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNSendSenderEmail" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNSendSenderEmail();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_EmailAddress(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_EmailAddress", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_EmailAddress" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = ((kkt_driver::classic_interface const *)arg1)->Get_EmailAddress();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_EmailAddress(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_EmailAddress" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_Set_EmailAddress" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_Set_EmailAddress" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->Set_EmailAddress((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_Summ1AsString(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_Summ1AsString", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_Summ1AsString" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = ((kkt_driver::classic_interface const *)arg1)->Get_Summ1AsString();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_Summ2AsString(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_Summ2AsString", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_Summ2AsString" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = ((kkt_driver::classic_interface const *)arg1)->Get_Summ2AsString();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_Summ3AsString(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_Summ3AsString", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_Summ3AsString" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = ((kkt_driver::classic_interface const *)arg1)->Get_Summ3AsString();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_Summ4AsString(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_Summ4AsString", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_Summ4AsString" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = ((kkt_driver::classic_interface const *)arg1)->Get_Summ4AsString();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DBGetNextDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DBGetNextDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DBGetNextDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->DBGetNextDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DBPrintNextDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DBPrintNextDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DBPrintNextDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->DBPrintNextDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DBQueryDocumentsInSession(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DBQueryDocumentsInSession", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DBQueryDocumentsInSession" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->DBQueryDocumentsInSession();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OnlinePay(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OnlinePay", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OnlinePay" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->OnlinePay();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OPGetLastRequisite(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OPGetLastRequisite", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OPGetLastRequisite" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->OPGetLastRequisite();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OPGetLastStatus(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OPGetLastStatus", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OPGetLastStatus" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->OPGetLastStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GenerateMonoToken(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GenerateMonoToken", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GenerateMonoToken" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GenerateMonoToken();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RebootKKT(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RebootKKT", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RebootKKT" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->RebootKKT();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNAddTag(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNAddTag", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNAddTag" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNAddTag();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNBeginSTLVTag(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNBeginSTLVTag", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNBeginSTLVTag" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNBeginSTLVTag();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNSendSTLVTag(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNSendSTLVTag", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNSendSTLVTag" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNSendSTLVTag();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNSendSTLVTagOperation(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNSendSTLVTagOperation", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNSendSTLVTagOperation" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNSendSTLVTagOperation();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNSendTagOperation(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNSendTagOperation", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNSendTagOperation" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNSendTagOperation();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_SymbolCode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_SymbolCode", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_SymbolCode" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_SymbolCode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_SymbolCode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_SymbolCode" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_SymbolCode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_SymbolCode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_SymbolWidth(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_SymbolWidth", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_SymbolWidth" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_SymbolWidth();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_SymbolWidth(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_SymbolWidth" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_SymbolWidth" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_SymbolWidth(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_SymbolHeight(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_SymbolHeight", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_SymbolHeight" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_SymbolHeight();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_SymbolHeight(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_SymbolHeight" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_SymbolHeight" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_SymbolHeight(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_FileType(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_FileType", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_FileType" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_FileType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_FileType(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_FileType" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_FileType" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_FileType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_DelayOnDisconnect(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_DelayOnDisconnect", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_DelayOnDisconnect" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_DelayOnDisconnect();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_DelayOnDisconnect(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_DelayOnDisconnect" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_DelayOnDisconnect" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_DelayOnDisconnect(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_GTIN(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_GTIN" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_Set_GTIN" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_Set_GTIN" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->Set_GTIN((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_GTIN(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_GTIN", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_GTIN" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = ((kkt_driver::classic_interface const *)arg1)->Get_GTIN();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNSendItemCodeData(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNSendItemCodeData", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNSendItemCodeData" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNSendItemCodeData();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNCheckItemBarcode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNCheckItemBarcode", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNCheckItemBarcode" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNCheckItemBarcode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNCheckItemBarcode2(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNCheckItemBarcode2", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNCheckItemBarcode2" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNCheckItemBarcode2();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNRequestRegistrationTLV(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNRequestRegistrationTLV", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNRequestRegistrationTLV" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNRequestRegistrationTLV();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadLoaderVersion(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadLoaderVersion", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadLoaderVersion" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadLoaderVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_RequestDocumentType(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_RequestDocumentType", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_RequestDocumentType" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_RequestDocumentType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_RequestDocumentType(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_RequestDocumentType" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_RequestDocumentType" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_RequestDocumentType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNOpenCheckCorrection(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNOpenCheckCorrection", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNOpenCheckCorrection" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNOpenCheckCorrection();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_WorkModeEx(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_WorkModeEx", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_WorkModeEx" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_WorkModeEx();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_WorkModeEx(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_WorkModeEx" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_WorkModeEx" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_WorkModeEx(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_INNOFD(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_INNOFD", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_INNOFD" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = ((kkt_driver::classic_interface const *)arg1)->Get_INNOFD();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_INNOFD(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_INNOFD" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_Set_INNOFD" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_Set_INNOFD" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->Set_INNOFD((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Get_RegistrationReasonCodeEx(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Get_RegistrationReasonCodeEx", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Get_RegistrationReasonCodeEx" "', argument " "1"" of type '" "kkt_driver::classic_interface const *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)((kkt_driver::classic_interface const *)arg1)->Get_RegistrationReasonCodeEx();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Set_RegistrationReasonCodeEx(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Set_RegistrationReasonCodeEx" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Set_RegistrationReasonCodeEx" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->Set_RegistrationReasonCodeEx(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNCountersSync(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNCountersSync", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNCountersSync" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNCountersSync();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNGetFreeMemoryResource(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNGetFreeMemoryResource", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNGetFreeMemoryResource" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNGetFreeMemoryResource();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadCashDrawerSum(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadCashDrawerSum", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadCashDrawerSum" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadCashDrawerSum();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadFeatureLicenses(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadFeatureLicenses", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadFeatureLicenses" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadFeatureLicenses();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_WriteFeatureLicenses(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_WriteFeatureLicenses", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_WriteFeatureLicenses" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->WriteFeatureLicenses();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SetDeviceFunction(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SetDeviceFunction", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SetDeviceFunction" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->SetDeviceFunction();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetDeviceFunction(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetDeviceFunction", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetDeviceFunction" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetDeviceFunction();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNSendItemBarcode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNSendItemBarcode", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNSendItemBarcode" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNSendItemBarcode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNGetKMServerExchangeStatus(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNGetKMServerExchangeStatus", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNGetKMServerExchangeStatus" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNGetKMServerExchangeStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNGetMarkingCodeWorkStatus(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNGetMarkingCodeWorkStatus", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNGetMarkingCodeWorkStatus" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNGetMarkingCodeWorkStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNBeginReadNotifications(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNBeginReadNotifications", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNBeginReadNotifications" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNBeginReadNotifications();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNReadNotificationBlock(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNReadNotificationBlock", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNReadNotificationBlock" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNReadNotificationBlock();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNConfirmNotificationRead(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNConfirmNotificationRead", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNConfirmNotificationRead" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNConfirmNotificationRead();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_GetTagAsTLV(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_GetTagAsTLV", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_GetTagAsTLV" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->GetTagAsTLV();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadRandomSequence(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadRandomSequence", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadRandomSequence" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadRandomSequence();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Authorization(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Authorization", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Authorization" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->Authorization();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNAcceptMarkingCode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNAcceptMarkingCode", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNAcceptMarkingCode" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNAcceptMarkingCode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNAcceptMakringCode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNAcceptMakringCode", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNAcceptMakringCode" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNAcceptMakringCode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNDeclineMarkingCode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNDeclineMarkingCode", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNDeclineMarkingCode" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNDeclineMarkingCode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNMarkingClearBuffer(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNMarkingClearBuffer", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNMarkingClearBuffer" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNMarkingClearBuffer();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNBindMarkingItem(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNBindMarkingItem", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNBindMarkingItem" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNBindMarkingItem();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNBeginReadArchive(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNBeginReadArchive", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNBeginReadArchive" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNBeginReadArchive();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNReadArchiveItem(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNReadArchiveItem", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNReadArchiveItem" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNReadArchiveItem();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNSaveArchive(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNSaveArchive", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNSaveArchive" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNSaveArchive();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNSendUserAttribute(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNSendUserAttribute", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNSendUserAttribute" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNSendUserAttribute();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RenderDeclarativeDocument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RenderDeclarativeDocument", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RenderDeclarativeDocument" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->RenderDeclarativeDocument();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LoadFont(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LoadFont", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LoadFont" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->LoadFont();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReadFontHash(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReadFontHash", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReadFontHash" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ReadFontHash();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ResetFont(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ResetFont", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ResetFont" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->ResetFont();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LoadFontSymbol(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LoadFontSymbol", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LoadFontSymbol" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->LoadFontSymbol();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DecodeTLVData(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DecodeTLVData", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DecodeTLVData" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->DecodeTLVData();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNGetImplementation(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNGetImplementation", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNGetImplementation" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNGetImplementation();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNGetOSUSupportStatus(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNGetOSUSupportStatus", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNGetOSUSupportStatus" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNGetOSUSupportStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNGetDocumentSize(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNGetDocumentSize", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNGetDocumentSize" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNGetDocumentSize();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNReadFiscalBarcode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNReadFiscalBarcode", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNReadFiscalBarcode" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNReadFiscalBarcode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintStringWithWrap(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintStringWithWrap", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintStringWithWrap" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->PrintStringWithWrap();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNCheckItemBarcodeCrpt(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNCheckItemBarcodeCrpt", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNCheckItemBarcodeCrpt" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)(arg1)->FNCheckItemBarcodeCrpt();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_setPropertyChangedCallback(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  SwigValueWrapper< std::function< void (std::string const &) > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_setPropertyChangedCallback" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[0], &argp2, SWIGTYPE_p_std__functionT_void_fstd__string_const_RF_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_setPropertyChangedCallback" "', argument " "2"" of type '" "std::function< void (std::string const &) >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_setPropertyChangedCallback" "', argument " "2"" of type '" "std::function< void (std::string const &) >""'");
    } else {
      std::function< void (std::string const &) > * temp = reinterpret_cast< std::function< void (std::string const &) > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->setPropertyChangedCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_setPropertyTouchedCallback(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  SwigValueWrapper< std::function< void (std::string const &) > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_setPropertyTouchedCallback" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[0], &argp2, SWIGTYPE_p_std__functionT_void_fstd__string_const_RF_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_setPropertyTouchedCallback" "', argument " "2"" of type '" "std::function< void (std::string const &) >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_setPropertyTouchedCallback" "', argument " "2"" of type '" "std::function< void (std::string const &) >""'");
    } else {
      std::function< void (std::string const &) > * temp = reinterpret_cast< std::function< void (std::string const &) > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->setPropertyTouchedCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_setLogCallback(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  void (*arg1)(std::string const &) = (void (*)(std::string const &)) (void (*)(std::string const &))0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  {
    int res = SWIG_ConvertFunctionPtr(swig_obj[0], (void**)(&arg1), SWIGTYPE_p_f_r_q_const__std__string__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "classic_interface_setLogCallback" "', argument " "1"" of type '" "void (*const )(std::string const &)""'"); 
    }
  }
  kkt_driver::classic_interface::setLogCallback(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_setLogCallback_v2(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  void (*arg1)(int,char const *,size_t,char const *,size_t) = (void (*)(int,char const *,size_t,char const *,size_t)) 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  {
    int res = SWIG_ConvertFunctionPtr(swig_obj[0], (void**)(&arg1), SWIGTYPE_p_f_int_p_q_const__char_size_t_p_q_const__char_size_t__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "classic_interface_setLogCallback_v2" "', argument " "1"" of type '" "void (*)(int,char const *,size_t,char const *,size_t)""'"); 
    }
  }
  kkt_driver::classic_interface::setLogCallback_v2(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ActivizationControlByte_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ActivizationControlByte_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ActivizationControlByte_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ActivizationControlByte_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ActivizationControlByte_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ActivizationControlByte_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ActivizationControlByte_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ActivizationControlByte_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ActivizationStatus_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ActivizationStatus_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ActivizationStatus_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ActivizationStatus_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ActivizationStatus_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ActivizationStatus_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ActivizationStatus_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ActivizationStatus_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_AdjustRITimeout_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_AdjustRITimeout_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_AdjustRITimeout_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_AdjustRITimeout_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_AdjustRITimeout_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_AdjustRITimeout_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_AdjustRITimeout_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_AdjustRITimeout_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_AnswerCode_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_AnswerCode_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_AnswerCode_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_AnswerCode_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_AnswerCode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_AnswerCode_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_AnswerCode_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_AnswerCode_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_AttributeNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_AttributeNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_AttributeNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_AttributeNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_AttributeNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_AttributeNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_AttributeNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_AttributeNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_AttributeValue_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_AttributeValue_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_AttributeValue_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_AttributeValue_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_AttributeValue_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_AttributeValue_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_AttributeValue_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_AttributeValue_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_AttributeValue_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_AutoSensorValues_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_AutoSensorValues_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_AutoSensorValues_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_AutoSensorValues_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_AutoSensorValues_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_AutoSensorValues_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_AutoSensorValues_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_AutoSensorValues_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_AutoStartSearch_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_AutoStartSearch_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_AutoStartSearch_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_AutoStartSearch_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_AutoStartSearch_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_AutoStartSearch_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_AutoStartSearch_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_AutoStartSearch_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BanknoteCount_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BanknoteCount_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BanknoteCount_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_BanknoteCount_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BanknoteType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BanknoteType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BanknoteType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_BanknoteType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarCode_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarCode_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_BarCode_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_BarCode_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_BarCode_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarCode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BarCode_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarCode_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_BarCode_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarcodeAlignment_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  kkt_driver::classic_interface::TBarcodeAlignment arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarcodeAlignment_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_BarcodeAlignment_set" "', argument " "2"" of type '" "kkt_driver::classic_interface::TBarcodeAlignment""'");
  } 
  arg2 = static_cast< kkt_driver::classic_interface::TBarcodeAlignment >(val2);
  kkt_driver_classic_interface_BarcodeAlignment_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarcodeAlignment_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  kkt_driver::classic_interface::TBarcodeAlignment result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BarcodeAlignment_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarcodeAlignment_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (kkt_driver::classic_interface::TBarcodeAlignment)kkt_driver_classic_interface_BarcodeAlignment_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarcodeDataLength_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarcodeDataLength_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_BarcodeDataLength_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_BarcodeDataLength_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarcodeDataLength_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BarcodeDataLength_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarcodeDataLength_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_BarcodeDataLength_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarcodeFirstLine_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarcodeFirstLine_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_BarcodeFirstLine_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_BarcodeFirstLine_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarcodeFirstLine_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BarcodeFirstLine_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarcodeFirstLine_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_BarcodeFirstLine_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarcodeHex_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarcodeHex_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_BarcodeHex_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_BarcodeHex_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_BarcodeHex_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarcodeHex_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BarcodeHex_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarcodeHex_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_BarcodeHex_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarcodeParameter1_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarcodeParameter1_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_BarcodeParameter1_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_BarcodeParameter1_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarcodeParameter1_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BarcodeParameter1_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarcodeParameter1_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_BarcodeParameter1_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarcodeParameter2_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarcodeParameter2_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_BarcodeParameter2_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_BarcodeParameter2_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarcodeParameter2_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BarcodeParameter2_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarcodeParameter2_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_BarcodeParameter2_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarcodeParameter3_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarcodeParameter3_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_BarcodeParameter3_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_BarcodeParameter3_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarcodeParameter3_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BarcodeParameter3_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarcodeParameter3_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_BarcodeParameter3_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarcodeParameter4_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarcodeParameter4_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_BarcodeParameter4_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_BarcodeParameter4_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarcodeParameter4_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BarcodeParameter4_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarcodeParameter4_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_BarcodeParameter4_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarcodeParameter5_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarcodeParameter5_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_BarcodeParameter5_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_BarcodeParameter5_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarcodeParameter5_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BarcodeParameter5_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarcodeParameter5_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_BarcodeParameter5_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarcodeStartBlockNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarcodeStartBlockNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_BarcodeStartBlockNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_BarcodeStartBlockNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarcodeStartBlockNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BarcodeStartBlockNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarcodeStartBlockNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_BarcodeStartBlockNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarcodeType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarcodeType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_BarcodeType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_BarcodeType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarcodeType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BarcodeType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarcodeType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_BarcodeType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarWidth_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarWidth_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_BarWidth_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_BarWidth_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BarWidth_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BarWidth_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BarWidth_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_BarWidth_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BatteryVoltage_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BatteryVoltage_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BatteryVoltage_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (double)kkt_driver_classic_interface_BatteryVoltage_get(arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BaudRate_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BaudRate_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_BaudRate_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_BaudRate_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BaudRate_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BaudRate_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BaudRate_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_BaudRate_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BinaryConversion_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  kkt_driver::classic_interface::TBinaryConversion arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BinaryConversion_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_BinaryConversion_set" "', argument " "2"" of type '" "kkt_driver::classic_interface::TBinaryConversion""'");
  } 
  arg2 = static_cast< kkt_driver::classic_interface::TBinaryConversion >(val2);
  kkt_driver_classic_interface_BinaryConversion_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BinaryConversion_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  kkt_driver::classic_interface::TBinaryConversion result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BinaryConversion_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BinaryConversion_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (kkt_driver::classic_interface::TBinaryConversion)kkt_driver_classic_interface_BinaryConversion_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BlockData_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::vector< uint8_t,std::allocator< uint8_t > > *arg2 = (std::vector< uint8_t,std::allocator< uint8_t > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BlockData_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[0], &argp2,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_BlockData_set" "', argument " "2"" of type '" "std::vector< uint8_t,std::allocator< uint8_t > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< uint8_t,std::allocator< uint8_t > > * >(argp2);
  kkt_driver_classic_interface_BlockData_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BlockData_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< uint8_t,std::allocator< uint8_t > > *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BlockData_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BlockData_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::vector< uint8_t,std::allocator< uint8_t > > *)kkt_driver_classic_interface_BlockData_get(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BlockDataHex_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BlockDataHex_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_BlockDataHex_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_BlockDataHex_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_BlockDataHex_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BlockDataHex_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BlockDataHex_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BlockDataHex_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_BlockDataHex_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BlockNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BlockNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_BlockNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_BlockNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BlockNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BlockNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BlockNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_BlockNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BlockType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BlockType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_BlockType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_BlockType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BlockType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BlockType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BlockType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_BlockType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BufferingType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BufferingType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_BufferingType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_BufferingType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_BufferingType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_BufferingType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_BufferingType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_BufferingType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CalculationSign_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CalculationSign_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CalculationSign_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_CalculationSign_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CalculationSign_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CalculationSign_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CalculationSign_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_CalculationSign_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CapGetShortECRStatus_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CapGetShortECRStatus_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CapGetShortECRStatus_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_CapGetShortECRStatus_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CarryStrings_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CarryStrings_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CarryStrings_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_CarryStrings_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CarryStrings_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CarryStrings_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CarryStrings_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_CarryStrings_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CashAcceptorPollingMode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CashAcceptorPollingMode_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CashAcceptorPollingMode_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_CashAcceptorPollingMode_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CashControlEnabled_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CashControlEnabled_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CashControlEnabled_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_CashControlEnabled_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CashControlEnabled_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CashControlEnabled_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CashControlEnabled_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_CashControlEnabled_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CashControlHost_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CashControlHost_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_CashControlHost_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_CashControlHost_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_CashControlHost_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CashControlHost_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CashControlHost_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CashControlHost_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_CashControlHost_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CashControlPassword_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CashControlPassword_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CashControlPassword_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_CashControlPassword_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CashControlPassword_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CashControlPassword_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CashControlPassword_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_CashControlPassword_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CashControlPort_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CashControlPort_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_CashControlPort_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_CashControlPort_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_CashControlPort_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CashControlPort_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CashControlPort_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CashControlPort_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_CashControlPort_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CashControlProtocols_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CashControlProtocols_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CashControlProtocols_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_CashControlProtocols_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CashControlUseTCP_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CashControlUseTCP_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CashControlUseTCP_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_CashControlUseTCP_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CashControlUseTCP_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CashControlUseTCP_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CashControlUseTCP_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_CashControlUseTCP_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ccHeaderLineCount_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ccHeaderLineCount_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ccHeaderLineCount_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ccHeaderLineCount_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ccHeaderLineCount_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ccHeaderLineCount_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ccHeaderLineCount_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ccHeaderLineCount_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ccUseTextAsWareName_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ccUseTextAsWareName_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ccUseTextAsWareName_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_ccUseTextAsWareName_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ccUseTextAsWareName_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ccUseTextAsWareName_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ccUseTextAsWareName_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_ccUseTextAsWareName_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ccWareNameLineNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ccWareNameLineNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ccWareNameLineNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ccWareNameLineNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ccWareNameLineNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ccWareNameLineNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ccWareNameLineNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ccWareNameLineNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CenterImage_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CenterImage_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CenterImage_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_CenterImage_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CenterImage_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CenterImage_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CenterImage_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_CenterImage_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Change_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Change_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Change_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Change_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ChangeFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ChangeFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ChangeFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ChangeFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ChangeFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ChangeFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ChangeFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ChangeFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ChangeOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ChangeOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ChangeOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ChangeOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ChangeOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ChangeOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ChangeOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ChangeOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ChangeStringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ChangeStringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ChangeStringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ChangeStringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ChangeStringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ChangeStringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ChangeStringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ChangeStringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ChangeSumFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ChangeSumFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ChangeSumFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ChangeSumFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ChangeSumFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ChangeSumFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ChangeSumFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ChangeSumFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ChangeSumOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ChangeSumOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ChangeSumOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ChangeSumOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ChangeSumOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ChangeSumOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ChangeSumOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ChangeSumOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ChangeSymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ChangeSymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ChangeSymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ChangeSymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ChangeSymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ChangeSymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ChangeSymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ChangeSymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ChargeValue_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ChargeValue_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ChargeValue_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_ChargeValue_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ChargeValue_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ChargeValue_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ChargeValue_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_ChargeValue_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CharHeight_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CharHeight_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CharHeight_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_CharHeight_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CharWidth_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CharWidth_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CharWidth_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_CharWidth_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CheckEJConnection_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CheckEJConnection_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CheckEJConnection_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_CheckEJConnection_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CheckEJConnection_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CheckEJConnection_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CheckEJConnection_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_CheckEJConnection_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CheckFMConnection_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CheckFMConnection_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CheckFMConnection_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_CheckFMConnection_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CheckFMConnection_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CheckFMConnection_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CheckFMConnection_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_CheckFMConnection_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CheckingType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CheckingType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CheckingType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_CheckingType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CheckingType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CheckingType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CheckingType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_CheckingType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CheckType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CheckType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CheckType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_CheckType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CheckType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CheckType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CheckType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_CheckType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ConnectionURI_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ConnectionURI_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_ConnectionURI_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_ConnectionURI_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_ConnectionURI_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ConnectionURI_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ConnectionURI_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ConnectionURI_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_ConnectionURI_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ClicheFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ClicheFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ClicheFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ClicheFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ClicheFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ClicheFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ClicheFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ClicheFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ClicheOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ClicheOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ClicheOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ClicheOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ClicheOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ClicheOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ClicheOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ClicheOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ClicheStringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ClicheStringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ClicheStringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ClicheStringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ClicheStringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ClicheStringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ClicheStringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ClicheStringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CloudCashdeskEnabled_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CloudCashdeskEnabled_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CloudCashdeskEnabled_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_CloudCashdeskEnabled_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CloudCashdeskEnabled_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CloudCashdeskEnabled_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CloudCashdeskEnabled_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_CloudCashdeskEnabled_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CodePage_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  kkt_driver::classic_interface::TCodePage arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CodePage_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CodePage_set" "', argument " "2"" of type '" "kkt_driver::classic_interface::TCodePage""'");
  } 
  arg2 = static_cast< kkt_driver::classic_interface::TCodePage >(val2);
  kkt_driver_classic_interface_CodePage_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CodePage_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  kkt_driver::classic_interface::TCodePage result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CodePage_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CodePage_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (kkt_driver::classic_interface::TCodePage)kkt_driver_classic_interface_CodePage_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CommandCode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CommandCode_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CommandCode_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_CommandCode_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CommandCount_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CommandCount_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CommandCount_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_CommandCount_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CommandDefTimeout_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CommandDefTimeout_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CommandDefTimeout_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_CommandDefTimeout_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CommandIndex_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CommandIndex_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CommandIndex_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_CommandIndex_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CommandIndex_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CommandIndex_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CommandIndex_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_CommandIndex_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CommandName_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CommandName_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CommandName_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_CommandName_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CommandRetryCount_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CommandRetryCount_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CommandRetryCount_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_CommandRetryCount_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CommandRetryCount_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CommandRetryCount_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CommandRetryCount_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_CommandRetryCount_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CommandTimeout_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CommandTimeout_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CommandTimeout_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_CommandTimeout_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CommandTimeout_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CommandTimeout_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CommandTimeout_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_CommandTimeout_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ComNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ComNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ComNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ComNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ComNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ComNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ComNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ComNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ComputerName_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ComputerName_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_ComputerName_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_ComputerName_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_ComputerName_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ComputerName_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ComputerName_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ComputerName_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_ComputerName_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Connected_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Connected_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Connected_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_Connected_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Connected_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Connected_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Connected_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_Connected_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ConnectionTimeout_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ConnectionTimeout_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ConnectionTimeout_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ConnectionTimeout_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ConnectionTimeout_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ConnectionTimeout_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ConnectionTimeout_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ConnectionTimeout_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ConnectionType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  kkt_driver::classic_interface::TConnectionType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ConnectionType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ConnectionType_set" "', argument " "2"" of type '" "kkt_driver::classic_interface::TConnectionType""'");
  } 
  arg2 = static_cast< kkt_driver::classic_interface::TConnectionType >(val2);
  kkt_driver_classic_interface_ConnectionType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ConnectionType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  kkt_driver::classic_interface::TConnectionType result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ConnectionType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ConnectionType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (kkt_driver::classic_interface::TConnectionType)kkt_driver_classic_interface_ConnectionType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ContentsOfCashRegister_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ContentsOfCashRegister_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ContentsOfCashRegister_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_ContentsOfCashRegister_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ContentsOfOperationRegister_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ContentsOfOperationRegister_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ContentsOfOperationRegister_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ContentsOfOperationRegister_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CopyOffset1_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CopyOffset1_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CopyOffset1_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_CopyOffset1_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CopyOffset1_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CopyOffset1_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CopyOffset1_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_CopyOffset1_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CopyOffset2_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CopyOffset2_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CopyOffset2_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_CopyOffset2_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CopyOffset2_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CopyOffset2_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CopyOffset2_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_CopyOffset2_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CopyOffset3_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CopyOffset3_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CopyOffset3_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_CopyOffset3_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CopyOffset3_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CopyOffset3_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CopyOffset3_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_CopyOffset3_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CopyOffset4_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CopyOffset4_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CopyOffset4_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_CopyOffset4_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CopyOffset4_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CopyOffset4_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CopyOffset4_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_CopyOffset4_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CopyOffset5_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CopyOffset5_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CopyOffset5_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_CopyOffset5_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CopyOffset5_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CopyOffset5_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CopyOffset5_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_CopyOffset5_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CopyType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CopyType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CopyType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_CopyType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CopyType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CopyType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CopyType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_CopyType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CorrectionType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CorrectionType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CorrectionType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_CorrectionType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CorrectionType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CorrectionType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CorrectionType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_CorrectionType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CustomerCode_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CustomerCode_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CustomerCode_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_CustomerCode_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CustomerCode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CustomerCode_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CustomerCode_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_CustomerCode_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CustomerEmail_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CustomerEmail_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_CustomerEmail_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_CustomerEmail_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_CustomerEmail_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CustomerEmail_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CustomerEmail_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CustomerEmail_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_CustomerEmail_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CutType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CutType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CutType_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_CutType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CutType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CutType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CutType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_CutType_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DataBlock_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DataBlock_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DataBlock_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_DataBlock_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DataBlockNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DataBlockNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DataBlockNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DataBlockNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DataLength_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DataLength_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DataLength_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_DataLength_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DataLength_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DataLength_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DataLength_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DataLength_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Date_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::time_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Date_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    if (!PyDateTimeAPI) {
      PyDateTime_IMPORT; 
    }
    if (!PyDateTime_Check(swig_obj[0])) {
      PyErr_SetString(PyExc_ValueError,"Expected a datetime"); return NULL;
    }
    struct tm t ={
      PyDateTime_DATE_GET_SECOND(swig_obj[0]),
      PyDateTime_DATE_GET_MINUTE(swig_obj[0]),
      PyDateTime_DATE_GET_HOUR(swig_obj[0]),
      PyDateTime_GET_DAY(swig_obj[0]),
      PyDateTime_GET_MONTH(swig_obj[0])-1,
      PyDateTime_GET_YEAR(swig_obj[0])-1900,
      0,
      0,
      0
    };
    arg2 = mktime(&t);
  }
  kkt_driver_classic_interface_Date_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Date_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::time_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Date_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Date_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = kkt_driver_classic_interface_Date_get(arg1);
  {
    if (!PyDateTimeAPI) {
      PyDateTime_IMPORT; 
    }
    PyObject *floatObj = NULL;
    PyObject *timeTuple = NULL;
    floatObj = PyFloat_FromDouble(static_cast<double>(result));
    timeTuple = Py_BuildValue("(O)", floatObj);
    resultobj = PyDateTime_FromTimestamp(timeTuple);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Date2_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::time_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Date2_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    if (!PyDateTimeAPI) {
      PyDateTime_IMPORT; 
    }
    if (!PyDateTime_Check(swig_obj[0])) {
      PyErr_SetString(PyExc_ValueError,"Expected a datetime"); return NULL;
    }
    struct tm t ={
      PyDateTime_DATE_GET_SECOND(swig_obj[0]),
      PyDateTime_DATE_GET_MINUTE(swig_obj[0]),
      PyDateTime_DATE_GET_HOUR(swig_obj[0]),
      PyDateTime_GET_DAY(swig_obj[0]),
      PyDateTime_GET_MONTH(swig_obj[0])-1,
      PyDateTime_GET_YEAR(swig_obj[0])-1900,
      0,
      0,
      0
    };
    arg2 = mktime(&t);
  }
  kkt_driver_classic_interface_Date2_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Date2_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::time_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Date2_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Date2_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = kkt_driver_classic_interface_Date2_get(arg1);
  {
    if (!PyDateTimeAPI) {
      PyDateTime_IMPORT; 
    }
    PyObject *floatObj = NULL;
    PyObject *timeTuple = NULL;
    floatObj = PyFloat_FromDouble(static_cast<double>(result));
    timeTuple = Py_BuildValue("(O)", floatObj);
    resultobj = PyDateTime_FromTimestamp(timeTuple);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DBDocType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DBDocType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DBDocType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_DBDocType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DBDocType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DBDocType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DBDocType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DBDocType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DBFilePath_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DBFilePath_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_DBFilePath_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_DBFilePath_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_DBFilePath_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DBFilePath_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DBFilePath_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DBFilePath_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_DBFilePath_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DelayedPrint_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DelayedPrint_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DelayedPrint_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_DelayedPrint_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DelayedPrint_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DelayedPrint_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DelayedPrint_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_DelayedPrint_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Department_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Department_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Department_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Department_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Department_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Department_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Department_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Department_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DepartmentFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DepartmentFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DepartmentFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_DepartmentFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DepartmentFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DepartmentFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DepartmentFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DepartmentFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DepartmentOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DepartmentOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DepartmentOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_DepartmentOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DepartmentOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DepartmentOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DepartmentOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DepartmentOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DepartmentStringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DepartmentStringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DepartmentStringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_DepartmentStringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DepartmentStringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DepartmentStringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DepartmentStringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DepartmentStringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DepartmentSymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DepartmentSymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DepartmentSymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_DepartmentSymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DepartmentSymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DepartmentSymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DepartmentSymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DepartmentSymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DeviceCode_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DeviceCode_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DeviceCode_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_DeviceCode_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DeviceCode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DeviceCode_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DeviceCode_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DeviceCode_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DeviceCodeDescription_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DeviceCodeDescription_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DeviceCodeDescription_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_DeviceCodeDescription_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Discount1_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Discount1_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Discount1_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Discount1_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Discount1_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Discount1_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Discount1_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Discount1_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Discount2_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Discount2_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Discount2_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Discount2_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Discount2_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Discount2_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Discount2_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Discount2_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Discount3_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Discount3_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Discount3_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Discount3_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Discount3_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Discount3_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Discount3_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Discount3_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Discount4_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Discount4_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Discount4_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Discount4_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Discount4_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Discount4_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Discount4_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Discount4_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DiscountOnCheck_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DiscountOnCheck_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DiscountOnCheck_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  kkt_driver_classic_interface_DiscountOnCheck_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DiscountOnCheck_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DiscountOnCheck_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DiscountOnCheck_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (double)kkt_driver_classic_interface_DiscountOnCheck_get(arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DiscountOnCheckFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DiscountOnCheckFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DiscountOnCheckFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_DiscountOnCheckFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DiscountOnCheckFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DiscountOnCheckFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DiscountOnCheckFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DiscountOnCheckFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DiscountOnCheckOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DiscountOnCheckOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DiscountOnCheckOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_DiscountOnCheckOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DiscountOnCheckOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DiscountOnCheckOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DiscountOnCheckOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DiscountOnCheckOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DiscountOnCheckStringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DiscountOnCheckStringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DiscountOnCheckStringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_DiscountOnCheckStringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DiscountOnCheckStringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DiscountOnCheckStringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DiscountOnCheckStringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DiscountOnCheckStringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DiscountOnCheckSumFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DiscountOnCheckSumFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DiscountOnCheckSumFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_DiscountOnCheckSumFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DiscountOnCheckSumFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DiscountOnCheckSumFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DiscountOnCheckSumFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DiscountOnCheckSumFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DiscountOnCheckSumOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DiscountOnCheckSumOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DiscountOnCheckSumOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_DiscountOnCheckSumOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DiscountOnCheckSumOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DiscountOnCheckSumOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DiscountOnCheckSumOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DiscountOnCheckSumOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DiscountOnCheckSumSymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DiscountOnCheckSumSymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DiscountOnCheckSumSymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_DiscountOnCheckSumSymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DiscountOnCheckSumSymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DiscountOnCheckSumSymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DiscountOnCheckSumSymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DiscountOnCheckSumSymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DiscountOnCheckSymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DiscountOnCheckSymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DiscountOnCheckSymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_DiscountOnCheckSymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DiscountOnCheckSymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DiscountOnCheckSymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DiscountOnCheckSymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DiscountOnCheckSymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DiscountValue_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DiscountValue_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DiscountValue_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_DiscountValue_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DiscountValue_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DiscountValue_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DiscountValue_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_DiscountValue_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DocumentCount_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DocumentCount_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DocumentCount_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_DocumentCount_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DocumentCount_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DocumentCount_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DocumentCount_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DocumentCount_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DocumentName_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DocumentName_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_DocumentName_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_DocumentName_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_DocumentName_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DocumentName_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DocumentName_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DocumentName_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_DocumentName_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DocumentNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DocumentNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DocumentNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_DocumentNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DocumentNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DocumentNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DocumentNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DocumentNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DocumentType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DocumentType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DocumentType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_DocumentType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DocumentType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DocumentType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DocumentType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DocumentType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DoNotSendENQ_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DoNotSendENQ_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DoNotSendENQ_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_DoNotSendENQ_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DoNotSendENQ_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DoNotSendENQ_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DoNotSendENQ_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_DoNotSendENQ_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DrawerNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DrawerNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DrawerNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_DrawerNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DrawerNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DrawerNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DrawerNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DrawerNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DriverBuild_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DriverBuild_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DriverBuild_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DriverBuild_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DriverMajorVersion_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DriverMajorVersion_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DriverMajorVersion_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DriverMajorVersion_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DriverMinorVersion_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DriverMinorVersion_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DriverMinorVersion_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DriverMinorVersion_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DriverRelease_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DriverRelease_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DriverRelease_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DriverRelease_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DriverVersion_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DriverVersion_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DriverVersion_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_DriverVersion_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ECRAdvancedMode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ECRAdvancedMode_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ECRAdvancedMode_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ECRAdvancedMode_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ECRAdvancedModeDescription_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ECRAdvancedModeDescription_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ECRAdvancedModeDescription_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_ECRAdvancedModeDescription_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ECRBuild_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ECRBuild_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ECRBuild_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ECRBuild_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ECRDate_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::time_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ECRDate_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    if (!PyDateTimeAPI) {
      PyDateTime_IMPORT; 
    }
    if (!PyDateTime_Check(swig_obj[0])) {
      PyErr_SetString(PyExc_ValueError,"Expected a datetime"); return NULL;
    }
    struct tm t ={
      PyDateTime_DATE_GET_SECOND(swig_obj[0]),
      PyDateTime_DATE_GET_MINUTE(swig_obj[0]),
      PyDateTime_DATE_GET_HOUR(swig_obj[0]),
      PyDateTime_GET_DAY(swig_obj[0]),
      PyDateTime_GET_MONTH(swig_obj[0])-1,
      PyDateTime_GET_YEAR(swig_obj[0])-1900,
      0,
      0,
      0
    };
    arg2 = mktime(&t);
  }
  kkt_driver_classic_interface_ECRDate_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ECRDate_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::time_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ECRDate_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ECRDate_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = kkt_driver_classic_interface_ECRDate_get(arg1);
  {
    if (!PyDateTimeAPI) {
      PyDateTime_IMPORT; 
    }
    PyObject *floatObj = NULL;
    PyObject *timeTuple = NULL;
    floatObj = PyFloat_FromDouble(static_cast<double>(result));
    timeTuple = Py_BuildValue("(O)", floatObj);
    resultobj = PyDateTime_FromTimestamp(timeTuple);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ECRFlags_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ECRFlags_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ECRFlags_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ECRFlags_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ECRID_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ECRID_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_ECRID_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_ECRID_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_ECRID_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ECRID_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ECRID_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ECRID_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_ECRID_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ECRInput_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ECRInput_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ECRInput_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_ECRInput_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ECRMode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ECRMode_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ECRMode_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ECRMode_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ECRMode8Status_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ECRMode8Status_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ECRMode8Status_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ECRMode8Status_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ECRModeDescription_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ECRModeDescription_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ECRModeDescription_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_ECRModeDescription_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ECRModeStatus_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ECRModeStatus_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ECRModeStatus_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ECRModeStatus_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ECROutput_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ECROutput_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ECROutput_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_ECROutput_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ECRSoftDate_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::time_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ECRSoftDate_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ECRSoftDate_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = kkt_driver_classic_interface_ECRSoftDate_get(arg1);
  {
    if (!PyDateTimeAPI) {
      PyDateTime_IMPORT; 
    }
    PyObject *floatObj = NULL;
    PyObject *timeTuple = NULL;
    floatObj = PyFloat_FromDouble(static_cast<double>(result));
    timeTuple = Py_BuildValue("(O)", floatObj);
    resultobj = PyDateTime_FromTimestamp(timeTuple);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ECRSoftVersion_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ECRSoftVersion_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ECRSoftVersion_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_ECRSoftVersion_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ECRTime_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::time_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ECRTime_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    if (!PyDateTimeAPI) {
      PyDateTime_IMPORT; 
    }
    if (!PyDateTime_Check(swig_obj[0])) {
      PyErr_SetString(PyExc_ValueError,"Expected a datetime"); return NULL;
    }
    struct tm t ={
      PyDateTime_DATE_GET_SECOND(swig_obj[0]),
      PyDateTime_DATE_GET_MINUTE(swig_obj[0]),
      PyDateTime_DATE_GET_HOUR(swig_obj[0]),
      PyDateTime_GET_DAY(swig_obj[0]),
      PyDateTime_GET_MONTH(swig_obj[0])-1,
      PyDateTime_GET_YEAR(swig_obj[0])-1900,
      0,
      0,
      0
    };
    arg2 = mktime(&t);
  }
  kkt_driver_classic_interface_ECRTime_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ECRTime_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::time_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ECRTime_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ECRTime_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = kkt_driver_classic_interface_ECRTime_get(arg1);
  {
    if (!PyDateTimeAPI) {
      PyDateTime_IMPORT; 
    }
    PyObject *floatObj = NULL;
    PyObject *timeTuple = NULL;
    floatObj = PyFloat_FromDouble(static_cast<double>(result));
    timeTuple = Py_BuildValue("(O)", floatObj);
    resultobj = PyDateTime_FromTimestamp(timeTuple);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EjectDirection_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EjectDirection_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_EjectDirection_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_EjectDirection_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EjectDirection_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EjectDirection_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EjectDirection_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_EjectDirection_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EKLZData_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EKLZData_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EKLZData_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_EKLZData_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EKLZFlags_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EKLZFlags_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EKLZFlags_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_EKLZFlags_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EKLZFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EKLZFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_EKLZFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_EKLZFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EKLZFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EKLZFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EKLZFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_EKLZFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EKLZIsPresent_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EKLZIsPresent_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EKLZIsPresent_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_EKLZIsPresent_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EKLZNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EKLZNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EKLZNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_EKLZNumber_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EKLZOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EKLZOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_EKLZOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_EKLZOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EKLZOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EKLZOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EKLZOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_EKLZOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EKLZResultCode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EKLZResultCode_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EKLZResultCode_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_EKLZResultCode_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EKLZStringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EKLZStringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_EKLZStringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_EKLZStringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EKLZStringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EKLZStringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EKLZStringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_EKLZStringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EKLZVersion_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EKLZVersion_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EKLZVersion_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_EKLZVersion_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ErrorCode_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ErrorCode_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ErrorCode_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ErrorCode_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ErrorCode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ErrorCode_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ErrorCode_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ErrorCode_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ErrorDescription_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ErrorDescription_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ErrorDescription_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_ErrorDescription_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EscapeIP_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EscapeIP_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_EscapeIP_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_EscapeIP_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_EscapeIP_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EscapeIP_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EscapeIP_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EscapeIP_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_EscapeIP_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EscapePort_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EscapePort_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_EscapePort_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_EscapePort_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EscapePort_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EscapePort_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EscapePort_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_EscapePort_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EscapeTimeout_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EscapeTimeout_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_EscapeTimeout_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_EscapeTimeout_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EscapeTimeout_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EscapeTimeout_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EscapeTimeout_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_EscapeTimeout_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ExciseCode_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ExciseCode_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ExciseCode_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ExciseCode_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ExciseCode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ExciseCode_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ExciseCode_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ExciseCode_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FeedAfterCut_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FeedAfterCut_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_FeedAfterCut_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_FeedAfterCut_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FeedAfterCut_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FeedAfterCut_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FeedAfterCut_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_FeedAfterCut_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FeedLineCount_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FeedLineCount_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_FeedLineCount_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_FeedLineCount_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FeedLineCount_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FeedLineCount_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FeedLineCount_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FeedLineCount_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FieldName_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FieldName_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FieldName_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_FieldName_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FieldNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FieldNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_FieldNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_FieldNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FieldNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FieldNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FieldNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FieldNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FieldSize_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FieldSize_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FieldSize_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FieldSize_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FieldType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FieldType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FieldType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_FieldType_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FileName_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FileName_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_FileName_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_FileName_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_FileName_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FileName_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FileName_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FileName_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_FileName_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FinishDocumentMode_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  kkt_driver::classic_interface::TFinishDocumentMode arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FinishDocumentMode_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_FinishDocumentMode_set" "', argument " "2"" of type '" "kkt_driver::classic_interface::TFinishDocumentMode""'");
  } 
  arg2 = static_cast< kkt_driver::classic_interface::TFinishDocumentMode >(val2);
  kkt_driver_classic_interface_FinishDocumentMode_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FinishDocumentMode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  kkt_driver::classic_interface::TFinishDocumentMode result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FinishDocumentMode_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FinishDocumentMode_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (kkt_driver::classic_interface::TFinishDocumentMode)kkt_driver_classic_interface_FinishDocumentMode_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FirstLineNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FirstLineNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_FirstLineNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_FirstLineNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FirstLineNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FirstLineNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FirstLineNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FirstLineNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FirstSessionDate_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::time_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FirstSessionDate_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    if (!PyDateTimeAPI) {
      PyDateTime_IMPORT; 
    }
    if (!PyDateTime_Check(swig_obj[0])) {
      PyErr_SetString(PyExc_ValueError,"Expected a datetime"); return NULL;
    }
    struct tm t ={
      PyDateTime_DATE_GET_SECOND(swig_obj[0]),
      PyDateTime_DATE_GET_MINUTE(swig_obj[0]),
      PyDateTime_DATE_GET_HOUR(swig_obj[0]),
      PyDateTime_GET_DAY(swig_obj[0]),
      PyDateTime_GET_MONTH(swig_obj[0])-1,
      PyDateTime_GET_YEAR(swig_obj[0])-1900,
      0,
      0,
      0
    };
    arg2 = mktime(&t);
  }
  kkt_driver_classic_interface_FirstSessionDate_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FirstSessionDate_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::time_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FirstSessionDate_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FirstSessionDate_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = kkt_driver_classic_interface_FirstSessionDate_get(arg1);
  {
    if (!PyDateTimeAPI) {
      PyDateTime_IMPORT; 
    }
    PyObject *floatObj = NULL;
    PyObject *timeTuple = NULL;
    floatObj = PyFloat_FromDouble(static_cast<double>(result));
    timeTuple = Py_BuildValue("(O)", floatObj);
    resultobj = PyDateTime_FromTimestamp(timeTuple);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FirstSessionNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FirstSessionNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_FirstSessionNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_FirstSessionNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FirstSessionNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FirstSessionNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FirstSessionNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FirstSessionNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FiscalSign_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FiscalSign_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_FiscalSign_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_FiscalSign_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FiscalSign_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FiscalSign_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FiscalSign_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FiscalSign_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FiscalSignAsString_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FiscalSignAsString_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FiscalSignAsString_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_FiscalSignAsString_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FiscalSignOFD_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FiscalSignOFD_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_FiscalSignOFD_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_FiscalSignOFD_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_FiscalSignOFD_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FiscalSignOFD_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FiscalSignOFD_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FiscalSignOFD_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_FiscalSignOFD_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FM1IsPresent_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FM1IsPresent_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FM1IsPresent_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_FM1IsPresent_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FM2IsPresent_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FM2IsPresent_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FM2IsPresent_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_FM2IsPresent_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FMBuild_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FMBuild_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FMBuild_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FMBuild_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FMFlags_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FMFlags_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FMFlags_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FMFlags_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FMFlagsEx_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FMFlagsEx_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FMFlagsEx_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FMFlagsEx_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FMMode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FMMode_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FMMode_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FMMode_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FMOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FMOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_FMOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_FMOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FMOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FMOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FMOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FMOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FMOverflow_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FMOverflow_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FMOverflow_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_FMOverflow_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FMResultCode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FMResultCode_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FMResultCode_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FMResultCode_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FMSoftDate_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::time_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FMSoftDate_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FMSoftDate_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = kkt_driver_classic_interface_FMSoftDate_get(arg1);
  {
    if (!PyDateTimeAPI) {
      PyDateTime_IMPORT; 
    }
    PyObject *floatObj = NULL;
    PyObject *timeTuple = NULL;
    floatObj = PyFloat_FromDouble(static_cast<double>(result));
    timeTuple = Py_BuildValue("(O)", floatObj);
    resultobj = PyDateTime_FromTimestamp(timeTuple);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FMSoftVersion_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FMSoftVersion_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FMSoftVersion_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_FMSoftVersion_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FMStringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FMStringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_FMStringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_FMStringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FMStringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FMStringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FMStringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FMStringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNCurrentDocument_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNCurrentDocument_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_FNCurrentDocument_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_FNCurrentDocument_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNCurrentDocument_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNCurrentDocument_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNCurrentDocument_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FNCurrentDocument_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNDocumentData_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNDocumentData_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNDocumentData_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FNDocumentData_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNLifeState_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNLifeState_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNLifeState_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FNLifeState_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNSessionState_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNSessionState_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNSessionState_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FNSessionState_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNSoftType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNSoftType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNSoftType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FNSoftType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNSoftVersion_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNSoftVersion_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNSoftVersion_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_FNSoftVersion_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNWarningFlags_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNWarningFlags_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNWarningFlags_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FNWarningFlags_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FontCount_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FontCount_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FontCount_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FontCount_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FontType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FontType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_FontType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_FontType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FontType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FontType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FontType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FontType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FreeRecordInFM_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FreeRecordInFM_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FreeRecordInFM_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FreeRecordInFM_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FreeRegistration_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FreeRegistration_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FreeRegistration_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FreeRegistration_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_HeaderFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_HeaderFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_HeaderFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_HeaderFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_HeaderFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_HeaderFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_HeaderFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_HeaderFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_HeaderOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_HeaderOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_HeaderOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_HeaderOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_HeaderOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_HeaderOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_HeaderOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_HeaderOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_HeaderStringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_HeaderStringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_HeaderStringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_HeaderStringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_HeaderStringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_HeaderStringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_HeaderStringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_HeaderStringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_HorizScale_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_HorizScale_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_HorizScale_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_HorizScale_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_HorizScale_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_HorizScale_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_HorizScale_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_HorizScale_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_HRIPosition_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_HRIPosition_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_HRIPosition_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_HRIPosition_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_HRIPosition_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_HRIPosition_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_HRIPosition_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_HRIPosition_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IBMDocumentNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IBMDocumentNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IBMDocumentNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_IBMDocumentNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IBMFlags_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IBMFlags_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IBMFlags_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_IBMFlags_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IBMLastBuyReceiptNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IBMLastBuyReceiptNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IBMLastBuyReceiptNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_IBMLastBuyReceiptNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IBMLastReturnBuyReceiptNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IBMLastReturnBuyReceiptNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IBMLastReturnBuyReceiptNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_IBMLastReturnBuyReceiptNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IBMLastReturnSaleReceiptNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IBMLastReturnSaleReceiptNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IBMLastReturnSaleReceiptNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_IBMLastReturnSaleReceiptNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IBMLastSaleReceiptNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IBMLastSaleReceiptNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IBMLastSaleReceiptNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_IBMLastSaleReceiptNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IBMSessionDateTime_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::time_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IBMSessionDateTime_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IBMSessionDateTime_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = kkt_driver_classic_interface_IBMSessionDateTime_get(arg1);
  {
    if (!PyDateTimeAPI) {
      PyDateTime_IMPORT; 
    }
    PyObject *floatObj = NULL;
    PyObject *timeTuple = NULL;
    floatObj = PyFloat_FromDouble(static_cast<double>(result));
    timeTuple = Py_BuildValue("(O)", floatObj);
    resultobj = PyDateTime_FromTimestamp(timeTuple);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IBMSessionDay_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IBMSessionDay_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IBMSessionDay_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_IBMSessionDay_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IBMSessionHour_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IBMSessionHour_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IBMSessionHour_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_IBMSessionHour_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IBMSessionMin_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IBMSessionMin_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IBMSessionMin_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_IBMSessionMin_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IBMSessionMonth_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IBMSessionMonth_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IBMSessionMonth_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_IBMSessionMonth_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IBMSessionSec_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IBMSessionSec_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IBMSessionSec_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_IBMSessionSec_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IBMSessionYear_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IBMSessionYear_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IBMSessionYear_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_IBMSessionYear_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IBMStatusByte1_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IBMStatusByte1_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IBMStatusByte1_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_IBMStatusByte1_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IBMStatusByte2_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IBMStatusByte2_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IBMStatusByte2_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_IBMStatusByte2_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IBMStatusByte3_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IBMStatusByte3_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IBMStatusByte3_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_IBMStatusByte3_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IBMStatusByte4_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IBMStatusByte4_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IBMStatusByte4_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_IBMStatusByte4_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IBMStatusByte5_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IBMStatusByte5_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IBMStatusByte5_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_IBMStatusByte5_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IBMStatusByte6_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IBMStatusByte6_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IBMStatusByte6_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_IBMStatusByte6_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IBMStatusByte7_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IBMStatusByte7_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IBMStatusByte7_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_IBMStatusByte7_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IBMStatusByte8_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IBMStatusByte8_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IBMStatusByte8_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_IBMStatusByte8_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_InfoExchangeStatus_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_InfoExchangeStatus_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_InfoExchangeStatus_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_InfoExchangeStatus_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_InfoExchangeStatus_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_InfoExchangeStatus_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_InfoExchangeStatus_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_InfoExchangeStatus_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_InfoType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_InfoType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_InfoType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_InfoType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_InfoType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_InfoType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_InfoType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_InfoType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_INN_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_INN_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_INN_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_INN_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_INN_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_INN_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_INN_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_INN_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_INN_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_INNAsInteger_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_INNAsInteger_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_INNAsInteger_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_INNAsInteger_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IntervalNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IntervalNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_IntervalNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_IntervalNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IntervalNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IntervalNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IntervalNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_IntervalNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IntervalValue_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IntervalValue_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_IntervalValue_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_IntervalValue_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IntervalValue_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IntervalValue_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IntervalValue_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_IntervalValue_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IPAddress_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IPAddress_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_IPAddress_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_IPAddress_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_IPAddress_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IPAddress_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IPAddress_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IPAddress_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_IPAddress_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IsASPDMode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IsASPDMode_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IsASPDMode_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_IsASPDMode_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IsBatteryLow_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IsBatteryLow_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IsBatteryLow_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_IsBatteryLow_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IsBlockedByWrongTaxPassword_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IsBlockedByWrongTaxPassword_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IsBlockedByWrongTaxPassword_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_IsBlockedByWrongTaxPassword_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IsClearUnfiscalInfo_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IsClearUnfiscalInfo_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_IsClearUnfiscalInfo_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_IsClearUnfiscalInfo_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IsClearUnfiscalInfo_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IsClearUnfiscalInfo_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IsClearUnfiscalInfo_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_IsClearUnfiscalInfo_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IsCorruptedFiscalizationInfo_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IsCorruptedFiscalizationInfo_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IsCorruptedFiscalizationInfo_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_IsCorruptedFiscalizationInfo_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IsCorruptedFMRecords_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IsCorruptedFMRecords_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IsCorruptedFMRecords_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_IsCorruptedFMRecords_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IsDrawerOpen_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IsDrawerOpen_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IsDrawerOpen_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_IsDrawerOpen_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IsEKLZOverflow_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IsEKLZOverflow_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IsEKLZOverflow_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_IsEKLZOverflow_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IsFM24HoursOver_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IsFM24HoursOver_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IsFM24HoursOver_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_IsFM24HoursOver_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IsFMSessionOpen_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IsFMSessionOpen_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IsFMSessionOpen_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_IsFMSessionOpen_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IsLastFMRecordCorrupted_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IsLastFMRecordCorrupted_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IsLastFMRecordCorrupted_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_IsLastFMRecordCorrupted_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IsPrinterLeftSensorFailure_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IsPrinterLeftSensorFailure_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IsPrinterLeftSensorFailure_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_IsPrinterLeftSensorFailure_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_IsPrinterRightSensorFailure_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_IsPrinterRightSensorFailure_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_IsPrinterRightSensorFailure_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_IsPrinterRightSensorFailure_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_JournalEnabled_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_JournalEnabled_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_JournalEnabled_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_JournalEnabled_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_JournalEnabled_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_JournalEnabled_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_JournalEnabled_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_JournalEnabled_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_JournalRibbonIsPresent_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_JournalRibbonIsPresent_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_JournalRibbonIsPresent_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_JournalRibbonIsPresent_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_JournalRibbonLever_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_JournalRibbonLever_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_JournalRibbonLever_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_JournalRibbonLever_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_JournalRibbonOpticalSensor_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_JournalRibbonOpticalSensor_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_JournalRibbonOpticalSensor_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_JournalRibbonOpticalSensor_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_JournalRow_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_JournalRow_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_JournalRow_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_JournalRow_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_JournalRowCount_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_JournalRowCount_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_JournalRowCount_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_JournalRowCount_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_JournalRowNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_JournalRowNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_JournalRowNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_JournalRowNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_JournalRowNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_JournalRowNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_JournalRowNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_JournalRowNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_JournalText_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_JournalText_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_JournalText_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_JournalText_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_KKTRegistrationNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_KKTRegistrationNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_KKTRegistrationNumber_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_KKTRegistrationNumber_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_KKTRegistrationNumber_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_KKTRegistrationNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_KKTRegistrationNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_KKTRegistrationNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_KKTRegistrationNumber_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_KPKFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_KPKFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_KPKFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_KPKFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_KPKFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_KPKFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_KPKFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_KPKFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_KPKNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_KPKNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_KPKNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_KPKNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_KPKNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_KPKNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_KPKNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_KPKNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_KPKOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_KPKOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_KPKOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_KPKOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_KPKOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_KPKOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_KPKOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_KPKOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_KPKStr_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_KPKStr_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_KPKStr_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_KPKStr_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_KPKValue_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_KPKValue_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_KPKValue_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_KPKValue_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_KPKValue_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_KPKValue_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_KPKValue_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_KPKValue_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_KSAInfo_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_KSAInfo_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_KSAInfo_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_KSAInfo_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_KSAInfo_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_KSAInfo_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_KSAInfo_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_KSAInfo_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_KSAInfo_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LastFMRecordType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LastFMRecordType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LastFMRecordType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_LastFMRecordType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LastKPKDate_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::time_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LastKPKDate_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LastKPKDate_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = kkt_driver_classic_interface_LastKPKDate_get(arg1);
  {
    if (!PyDateTimeAPI) {
      PyDateTime_IMPORT; 
    }
    PyObject *floatObj = NULL;
    PyObject *timeTuple = NULL;
    floatObj = PyFloat_FromDouble(static_cast<double>(result));
    timeTuple = Py_BuildValue("(O)", floatObj);
    resultobj = PyDateTime_FromTimestamp(timeTuple);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LastKPKDateStr_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LastKPKDateStr_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LastKPKDateStr_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_LastKPKDateStr_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LastKPKDocumentResult_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LastKPKDocumentResult_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LastKPKDocumentResult_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_LastKPKDocumentResult_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LastKPKNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LastKPKNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LastKPKNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_LastKPKNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LastKPKTime_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::time_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LastKPKTime_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LastKPKTime_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = kkt_driver_classic_interface_LastKPKTime_get(arg1);
  {
    if (!PyDateTimeAPI) {
      PyDateTime_IMPORT; 
    }
    PyObject *floatObj = NULL;
    PyObject *timeTuple = NULL;
    floatObj = PyFloat_FromDouble(static_cast<double>(result));
    timeTuple = Py_BuildValue("(O)", floatObj);
    resultobj = PyDateTime_FromTimestamp(timeTuple);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LastKPKTimeStr_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LastKPKTimeStr_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LastKPKTimeStr_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_LastKPKTimeStr_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LastLineNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LastLineNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_LastLineNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_LastLineNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LastLineNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LastLineNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LastLineNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_LastLineNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LastPrintResult_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LastPrintResult_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LastPrintResult_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_LastPrintResult_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LastSessionDate_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::time_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LastSessionDate_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    if (!PyDateTimeAPI) {
      PyDateTime_IMPORT; 
    }
    if (!PyDateTime_Check(swig_obj[0])) {
      PyErr_SetString(PyExc_ValueError,"Expected a datetime"); return NULL;
    }
    struct tm t ={
      PyDateTime_DATE_GET_SECOND(swig_obj[0]),
      PyDateTime_DATE_GET_MINUTE(swig_obj[0]),
      PyDateTime_DATE_GET_HOUR(swig_obj[0]),
      PyDateTime_GET_DAY(swig_obj[0]),
      PyDateTime_GET_MONTH(swig_obj[0])-1,
      PyDateTime_GET_YEAR(swig_obj[0])-1900,
      0,
      0,
      0
    };
    arg2 = mktime(&t);
  }
  kkt_driver_classic_interface_LastSessionDate_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LastSessionDate_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::time_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LastSessionDate_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LastSessionDate_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = kkt_driver_classic_interface_LastSessionDate_get(arg1);
  {
    if (!PyDateTimeAPI) {
      PyDateTime_IMPORT; 
    }
    PyObject *floatObj = NULL;
    PyObject *timeTuple = NULL;
    floatObj = PyFloat_FromDouble(static_cast<double>(result));
    timeTuple = Py_BuildValue("(O)", floatObj);
    resultobj = PyDateTime_FromTimestamp(timeTuple);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LastSessionNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LastSessionNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_LastSessionNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_LastSessionNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LastSessionNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LastSessionNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LastSessionNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_LastSessionNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDBaudrate_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDBaudrate_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_LDBaudrate_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_LDBaudrate_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDBaudrate_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LDBaudrate_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDBaudrate_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_LDBaudrate_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDComNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDComNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_LDComNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_LDComNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDComNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LDComNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDComNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_LDComNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDComputerName_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDComputerName_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_LDComputerName_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_LDComputerName_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_LDComputerName_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDComputerName_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LDComputerName_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDComputerName_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_LDComputerName_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDConnectionType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  kkt_driver::classic_interface::TConnectionType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDConnectionType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_LDConnectionType_set" "', argument " "2"" of type '" "kkt_driver::classic_interface::TConnectionType""'");
  } 
  arg2 = static_cast< kkt_driver::classic_interface::TConnectionType >(val2);
  kkt_driver_classic_interface_LDConnectionType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDConnectionType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  kkt_driver::classic_interface::TConnectionType result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LDConnectionType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDConnectionType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (kkt_driver::classic_interface::TConnectionType)kkt_driver_classic_interface_LDConnectionType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDCount_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LDCount_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDCount_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_LDCount_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDEscapeIP_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDEscapeIP_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_LDEscapeIP_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_LDEscapeIP_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_LDEscapeIP_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDEscapeIP_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LDEscapeIP_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDEscapeIP_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_LDEscapeIP_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDEscapePort_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDEscapePort_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_LDEscapePort_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_LDEscapePort_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDEscapePort_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LDEscapePort_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDEscapePort_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_LDEscapePort_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDEscapeTimeout_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDEscapeTimeout_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_LDEscapeTimeout_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_LDEscapeTimeout_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDEscapeTimeout_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LDEscapeTimeout_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDEscapeTimeout_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_LDEscapeTimeout_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDIndex_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDIndex_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_LDIndex_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_LDIndex_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDIndex_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LDIndex_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDIndex_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_LDIndex_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDIPAddress_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDIPAddress_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_LDIPAddress_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_LDIPAddress_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_LDIPAddress_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDIPAddress_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LDIPAddress_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDIPAddress_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_LDIPAddress_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDName_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDName_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_LDName_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_LDName_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_LDName_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDName_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LDName_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDName_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_LDName_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_LDNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_LDNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LDNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_LDNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDProtocolType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDProtocolType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_LDProtocolType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_LDProtocolType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDProtocolType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LDProtocolType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDProtocolType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_LDProtocolType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDSysAdminPassword_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDSysAdminPassword_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_LDSysAdminPassword_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_LDSysAdminPassword_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDSysAdminPassword_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LDSysAdminPassword_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDSysAdminPassword_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_LDSysAdminPassword_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDTCPPort_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDTCPPort_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_LDTCPPort_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_LDTCPPort_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDTCPPort_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LDTCPPort_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDTCPPort_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_LDTCPPort_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDTimeout_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDTimeout_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_LDTimeout_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_LDTimeout_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDTimeout_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LDTimeout_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDTimeout_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_LDTimeout_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDUseIPAddress_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDUseIPAddress_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_LDUseIPAddress_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_LDUseIPAddress_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LDUseIPAddress_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LDUseIPAddress_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LDUseIPAddress_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_LDUseIPAddress_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_License_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_License_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_License_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_License_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_License_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_License_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_License_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_License_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_License_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LicenseIsPresent_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LicenseIsPresent_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LicenseIsPresent_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_LicenseIsPresent_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LidPositionSensor_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LidPositionSensor_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LidPositionSensor_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_LidPositionSensor_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LineData_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LineData_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_LineData_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_LineData_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_LineData_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LineData_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LineData_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LineData_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_LineData_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LineData2_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LineData2_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_LineData2_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_LineData2_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_LineData2_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LineData2_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LineData2_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LineData2_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_LineData2_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LineDataHex_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LineDataHex_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_LineDataHex_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_LineDataHex_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_LineDataHex_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LineDataHex_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LineDataHex_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LineDataHex_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_LineDataHex_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LineNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LineNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_LineNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_LineNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LineNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LineNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LineNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_LineNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LineSwapBytes_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LineSwapBytes_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_LineSwapBytes_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_LineSwapBytes_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LineSwapBytes_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LineSwapBytes_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LineSwapBytes_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_LineSwapBytes_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LockTimeout_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LockTimeout_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_LockTimeout_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_LockTimeout_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LockTimeout_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LockTimeout_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LockTimeout_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_LockTimeout_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LogicalNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LogicalNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LogicalNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_LogicalNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LogMaxFileCount_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LogMaxFileCount_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_LogMaxFileCount_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_LogMaxFileCount_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LogMaxFileCount_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LogMaxFileCount_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LogMaxFileCount_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_LogMaxFileCount_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LogMaxFileSize_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LogMaxFileSize_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_LogMaxFileSize_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_LogMaxFileSize_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LogMaxFileSize_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LogMaxFileSize_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LogMaxFileSize_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_LogMaxFileSize_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LogOn_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LogOn_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_LogOn_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_LogOn_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LogOn_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LogOn_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LogOn_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_LogOn_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MAXValueOfField_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MAXValueOfField_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MAXValueOfField_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_MAXValueOfField_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MessageCount_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MessageCount_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_MessageCount_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_MessageCount_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MessageCount_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MessageCount_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MessageCount_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_MessageCount_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MessageState_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MessageState_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_MessageState_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_MessageState_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MessageState_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MessageState_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MessageState_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_MessageState_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MethodName_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MethodName_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_MethodName_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_MethodName_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_MethodName_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MethodName_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MethodName_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MethodName_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_MethodName_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MFPNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MFPNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_MFPNumber_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_MFPNumber_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_MFPNumber_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MFPNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MFPNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MFPNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_MFPNumber_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MFPStatus_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MFPStatus_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_MFPStatus_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_MFPStatus_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MFPStatus_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MFPStatus_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MFPStatus_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_MFPStatus_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MINValueOfField_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MINValueOfField_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MINValueOfField_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_MINValueOfField_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MobilePayEnabled_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MobilePayEnabled_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_MobilePayEnabled_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_MobilePayEnabled_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MobilePayEnabled_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MobilePayEnabled_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MobilePayEnabled_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_MobilePayEnabled_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ModelID_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ModelID_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ModelID_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ModelID_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ModelID_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ModelID_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ModelID_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ModelID_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ModelIndex_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ModelIndex_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ModelIndex_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ModelIndex_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ModelIndex_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ModelIndex_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ModelIndex_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ModelIndex_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ModelNames_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ModelNames_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ModelNames_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_ModelNames_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ModelParamCount_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ModelParamCount_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ModelParamCount_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ModelParamCount_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ModelParamDescription_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ModelParamDescription_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ModelParamDescription_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_ModelParamDescription_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ModelParamIndex_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ModelParamIndex_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ModelParamIndex_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ModelParamIndex_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ModelParamIndex_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ModelParamIndex_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ModelParamIndex_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ModelParamIndex_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ModelParamNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ModelParamNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ModelParamNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ModelParamNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ModelParamNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ModelParamNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ModelParamNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ModelParamNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ModelParamValue_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ModelParamValue_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ModelParamValue_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_ModelParamValue_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ModelsCount_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ModelsCount_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ModelsCount_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ModelsCount_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MultiplicationFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MultiplicationFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_MultiplicationFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_MultiplicationFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MultiplicationFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MultiplicationFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MultiplicationFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_MultiplicationFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_NameCashReg_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_NameCashReg_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_NameCashReg_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_NameCashReg_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_NameCashRegEx_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_NameCashRegEx_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_NameCashRegEx_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_NameCashRegEx_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_NameOperationReg_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_NameOperationReg_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_NameOperationReg_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_NameOperationReg_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_NewPasswordTI_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_NewPasswordTI_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_NewPasswordTI_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_NewPasswordTI_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_NewPasswordTI_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_NewPasswordTI_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_NewPasswordTI_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_NewPasswordTI_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_NewSCPassword_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_NewSCPassword_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_NewSCPassword_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_NewSCPassword_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_NewSCPassword_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_NewSCPassword_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_NewSCPassword_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_NewSCPassword_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_NumberOfCopies_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_NumberOfCopies_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_NumberOfCopies_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_NumberOfCopies_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_NumberOfCopies_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_NumberOfCopies_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_NumberOfCopies_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_NumberOfCopies_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OFDTicketReceived_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OFDTicketReceived_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_OFDTicketReceived_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_OFDTicketReceived_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OFDTicketReceived_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OFDTicketReceived_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OFDTicketReceived_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_OFDTicketReceived_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OPBarcodeInputType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OPBarcodeInputType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_OPBarcodeInputType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_OPBarcodeInputType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OPBarcodeInputType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OPBarcodeInputType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OPBarcodeInputType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_OPBarcodeInputType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OpenDocumentNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OpenDocumentNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OpenDocumentNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_OpenDocumentNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OperationBlockFirstString_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OperationBlockFirstString_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_OperationBlockFirstString_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_OperationBlockFirstString_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OperationBlockFirstString_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OperationBlockFirstString_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OperationBlockFirstString_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_OperationBlockFirstString_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OperationNameFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OperationNameFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_OperationNameFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_OperationNameFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OperationNameFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OperationNameFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OperationNameFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_OperationNameFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OperationNameOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OperationNameOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_OperationNameOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_OperationNameOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OperationNameOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OperationNameOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OperationNameOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_OperationNameOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OperationNameStringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OperationNameStringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_OperationNameStringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_OperationNameStringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OperationNameStringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OperationNameStringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OperationNameStringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_OperationNameStringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OperatorNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OperatorNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OperatorNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_OperatorNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OperationType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OperationType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_OperationType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_OperationType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OperationType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OperationType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OperationType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_OperationType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OPIdPayment_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OPIdPayment_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_OPIdPayment_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_OPIdPayment_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_OPIdPayment_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OPIdPayment_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OPIdPayment_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OPIdPayment_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_OPIdPayment_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OPRequisiteNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OPRequisiteNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_OPRequisiteNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_OPRequisiteNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OPRequisiteNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OPRequisiteNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OPRequisiteNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_OPRequisiteNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OPRequisiteValue_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OPRequisiteValue_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_OPRequisiteValue_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_OPRequisiteValue_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_OPRequisiteValue_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OPRequisiteValue_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OPRequisiteValue_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OPRequisiteValue_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_OPRequisiteValue_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OPSystem_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OPSystem_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_OPSystem_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_OPSystem_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OPSystem_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OPSystem_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OPSystem_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_OPSystem_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OPTransactionStatus_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OPTransactionStatus_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_OPTransactionStatus_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_OPTransactionStatus_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OPTransactionStatus_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OPTransactionStatus_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OPTransactionStatus_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_OPTransactionStatus_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OPTransactionType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OPTransactionType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_OPTransactionType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_OPTransactionType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OPTransactionType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OPTransactionType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OPTransactionType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_OPTransactionType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ParameterValue_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ParameterValue_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_ParameterValue_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_ParameterValue_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_ParameterValue_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ParameterValue_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ParameterValue_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ParameterValue_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_ParameterValue_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ParentWnd_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ParentWnd_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ParentWnd_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ParentWnd_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ParentWnd_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ParentWnd_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ParentWnd_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ParentWnd_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Password_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Password_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Password_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Password_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Password_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Password_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Password_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Password_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PayDepartment_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PayDepartment_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_PayDepartment_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_PayDepartment_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PayDepartment_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PayDepartment_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PayDepartment_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_PayDepartment_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PaymentItemSign_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PaymentItemSign_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_PaymentItemSign_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_PaymentItemSign_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PaymentItemSign_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PaymentItemSign_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PaymentItemSign_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_PaymentItemSign_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PaymentTypeSign_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PaymentTypeSign_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_PaymentTypeSign_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_PaymentTypeSign_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PaymentTypeSign_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PaymentTypeSign_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PaymentTypeSign_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_PaymentTypeSign_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PermitActivizationCode_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PermitActivizationCode_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_PermitActivizationCode_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_PermitActivizationCode_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PermitActivizationCode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PermitActivizationCode_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PermitActivizationCode_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_PermitActivizationCode_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PingResult_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PingResult_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_PingResult_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_PingResult_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PingResult_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PingResult_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PingResult_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_PingResult_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PingTime_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PingTime_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_PingTime_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_PingTime_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PingTime_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PingTime_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PingTime_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_PingTime_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PointPosition_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PointPosition_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_PointPosition_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_PointPosition_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PointPosition_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PointPosition_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PointPosition_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_PointPosition_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Poll1_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Poll1_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Poll1_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Poll1_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Poll2_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Poll2_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Poll2_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Poll2_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PosControlReceiptSeparator_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PosControlReceiptSeparator_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_PosControlReceiptSeparator_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_PosControlReceiptSeparator_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_PosControlReceiptSeparator_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PosControlReceiptSeparator_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PosControlReceiptSeparator_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PosControlReceiptSeparator_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_PosControlReceiptSeparator_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PortLocked_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PortLocked_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PortLocked_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_PortLocked_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PortNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PortNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_PortNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_PortNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PortNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PortNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PortNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_PortNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PowerSourceVoltage_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PowerSourceVoltage_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PowerSourceVoltage_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (double)kkt_driver_classic_interface_PowerSourceVoltage_get(arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrepareActivizationRemainCount_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrepareActivizationRemainCount_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_PrepareActivizationRemainCount_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_PrepareActivizationRemainCount_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrepareActivizationRemainCount_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrepareActivizationRemainCount_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrepareActivizationRemainCount_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_PrepareActivizationRemainCount_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PresenterIn_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PresenterIn_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PresenterIn_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_PresenterIn_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PresenterOut_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PresenterOut_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PresenterOut_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_PresenterOut_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Price_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Price_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Price_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Price_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Price_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Price_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Price_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Price_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PriceFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PriceFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_PriceFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_PriceFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PriceFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PriceFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PriceFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_PriceFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PriceSymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PriceSymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_PriceSymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_PriceSymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PriceSymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PriceSymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PriceSymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_PriceSymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintBarcodeText_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintBarcodeText_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_PrintBarcodeText_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_PrintBarcodeText_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintBarcodeText_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintBarcodeText_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintBarcodeText_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_PrintBarcodeText_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintBufferFormat_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintBufferFormat_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_PrintBufferFormat_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_PrintBufferFormat_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintBufferFormat_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintBufferFormat_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintBufferFormat_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_PrintBufferFormat_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintBufferLineNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintBufferLineNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintBufferLineNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_PrintBufferLineNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintingAlignment_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintingAlignment_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_PrintingAlignment_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_PrintingAlignment_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintingAlignment_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintingAlignment_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintingAlignment_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_PrintingAlignment_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintJournalBeforeZReport_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintJournalBeforeZReport_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_PrintJournalBeforeZReport_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_PrintJournalBeforeZReport_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintJournalBeforeZReport_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintJournalBeforeZReport_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintJournalBeforeZReport_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_PrintJournalBeforeZReport_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PrintWidth_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PrintWidth_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PrintWidth_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_PrintWidth_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PropertyName_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PropertyName_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_PropertyName_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_PropertyName_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_PropertyName_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_PropertyName_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_PropertyName_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_PropertyName_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_PropertyName_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ProtocolType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ProtocolType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ProtocolType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ProtocolType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ProtocolType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ProtocolType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ProtocolType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ProtocolType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Quantity_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Quantity_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Quantity_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  kkt_driver_classic_interface_Quantity_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Quantity_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Quantity_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Quantity_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (double)kkt_driver_classic_interface_Quantity_get(arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_QuantityFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_QuantityFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_QuantityFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_QuantityFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_QuantityFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_QuantityFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_QuantityFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_QuantityFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_QuantityFormat_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_QuantityFormat_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_QuantityFormat_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_QuantityFormat_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_QuantityFormat_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_QuantityFormat_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_QuantityFormat_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_QuantityFormat_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_QuantityOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_QuantityOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_QuantityOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_QuantityOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_QuantityOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_QuantityOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_QuantityOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_QuantityOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_QuantityOfOperations_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_QuantityOfOperations_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_QuantityOfOperations_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_QuantityOfOperations_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_QuantityPointPosition_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_QuantityPointPosition_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_QuantityPointPosition_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_QuantityPointPosition_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_QuantityStringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_QuantityStringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_QuantityStringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_QuantityStringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_QuantityStringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_QuantityStringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_QuantityStringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_QuantityStringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_QuantitySymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_QuantitySymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_QuantitySymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_QuantitySymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_QuantitySymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_QuantitySymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_QuantitySymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_QuantitySymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RealPayDepartment_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RealPayDepartment_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_RealPayDepartment_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_RealPayDepartment_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RealPayDepartment_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RealPayDepartment_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RealPayDepartment_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_RealPayDepartment_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReceiptNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReceiptNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ReceiptNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ReceiptNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReceiptNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReceiptNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReceiptNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ReceiptNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReceiptOutputType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReceiptOutputType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ReceiptOutputType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ReceiptOutputType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReceiptOutputType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReceiptOutputType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReceiptOutputType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ReceiptOutputType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReceiptRibbonIsPresent_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReceiptRibbonIsPresent_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReceiptRibbonIsPresent_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_ReceiptRibbonIsPresent_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReceiptRibbonLever_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReceiptRibbonLever_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReceiptRibbonLever_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_ReceiptRibbonLever_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReceiptRibbonOpticalSensor_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReceiptRibbonOpticalSensor_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReceiptRibbonOpticalSensor_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_ReceiptRibbonOpticalSensor_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReconnectPort_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReconnectPort_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ReconnectPort_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_ReconnectPort_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReconnectPort_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReconnectPort_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReconnectPort_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_ReconnectPort_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RecordCount_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RecordCount_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RecordCount_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_RecordCount_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RegBuyRec_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RegBuyRec_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RegBuyRec_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_RegBuyRec_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RegBuyReturnRec_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RegBuyReturnRec_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RegBuyReturnRec_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_RegBuyReturnRec_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RegBuyReturnSession_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RegBuyReturnSession_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RegBuyReturnSession_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_RegBuyReturnSession_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RegBuySession_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RegBuySession_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RegBuySession_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_RegBuySession_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RegisterNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RegisterNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_RegisterNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_RegisterNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RegisterNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RegisterNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RegisterNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_RegisterNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RegistrationNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RegistrationNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_RegistrationNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_RegistrationNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RegistrationNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RegistrationNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RegistrationNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_RegistrationNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RegistrationReasonCode_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RegistrationReasonCode_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_RegistrationReasonCode_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_RegistrationReasonCode_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RegistrationReasonCode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RegistrationReasonCode_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RegistrationReasonCode_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_RegistrationReasonCode_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RegSaleRec_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RegSaleRec_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RegSaleRec_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_RegSaleRec_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RegSaleReturnRec_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RegSaleReturnRec_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RegSaleReturnRec_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_RegSaleReturnRec_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RegSaleReturnSession_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RegSaleReturnSession_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RegSaleReturnSession_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_RegSaleReturnSession_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RegSaleSession_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RegSaleSession_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RegSaleSession_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_RegSaleSession_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReportType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReportType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ReportType_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_ReportType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReportType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReportType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReportType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_ReportType_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReportTypeInt_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReportTypeInt_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ReportTypeInt_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ReportTypeInt_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ReportTypeInt_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ReportTypeInt_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ReportTypeInt_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ReportTypeInt_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RequestErrorDescription_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RequestErrorDescription_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_RequestErrorDescription_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_RequestErrorDescription_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RequestErrorDescription_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RequestErrorDescription_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RequestErrorDescription_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_RequestErrorDescription_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RequestType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RequestType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_RequestType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_RequestType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RequestType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RequestType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RequestType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_RequestType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ResultCode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ResultCode_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ResultCode_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ResultCode_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ResultCodeDescription_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ResultCodeDescription_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ResultCodeDescription_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_ResultCodeDescription_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RNM_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RNM_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_RNM_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_RNM_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_RNM_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RNM_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RNM_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RNM_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_RNM_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RoundingSumm_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RoundingSumm_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_RoundingSumm_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_RoundingSumm_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RoundingSumm_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RoundingSumm_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RoundingSumm_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_RoundingSumm_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RowNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RowNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_RowNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_RowNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RowNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RowNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RowNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_RowNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RunningPeriod_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RunningPeriod_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_RunningPeriod_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_RunningPeriod_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RunningPeriod_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RunningPeriod_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RunningPeriod_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_RunningPeriod_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SaleError_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SaleError_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SaleError_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_SaleError_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SaleError_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SaleError_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SaleError_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_SaleError_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SaveSettingsType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SaveSettingsType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SaveSettingsType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_SaveSettingsType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SaveSettingsType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SaveSettingsType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SaveSettingsType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_SaveSettingsType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SCPassword_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SCPassword_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SCPassword_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_SCPassword_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SCPassword_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SCPassword_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SCPassword_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_SCPassword_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SearchTimeout_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SearchTimeout_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SearchTimeout_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_SearchTimeout_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SearchTimeout_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SearchTimeout_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SearchTimeout_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_SearchTimeout_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SerialNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SerialNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_SerialNumber_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_SerialNumber_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_SerialNumber_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SerialNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SerialNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SerialNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_SerialNumber_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SerialNumberAsInteger_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SerialNumberAsInteger_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SerialNumberAsInteger_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_SerialNumberAsInteger_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ServerConnected_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ServerConnected_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ServerConnected_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_ServerConnected_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ServerVersion_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ServerVersion_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ServerVersion_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_ServerVersion_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SessionNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SessionNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SessionNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_SessionNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SessionNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SessionNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SessionNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_SessionNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ShowProgress_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ShowProgress_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ShowProgress_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_ShowProgress_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ShowProgress_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ShowProgress_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ShowProgress_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_ShowProgress_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ShowTagNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ShowTagNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ShowTagNumber_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_ShowTagNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ShowTagNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ShowTagNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ShowTagNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_ShowTagNumber_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SKNOError_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SKNOError_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SKNOError_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_SKNOError_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SKNOError_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SKNOError_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SKNOError_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_SKNOError_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SKNOIdentifier_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SKNOIdentifier_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_SKNOIdentifier_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_SKNOIdentifier_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_SKNOIdentifier_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SKNOIdentifier_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SKNOIdentifier_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SKNOIdentifier_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_SKNOIdentifier_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SKNOStatus_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SKNOStatus_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SKNOStatus_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_SKNOStatus_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SKNOStatus_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SKNOStatus_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SKNOStatus_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_SKNOStatus_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SlipDocumentIsMoving_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SlipDocumentIsMoving_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SlipDocumentIsMoving_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_SlipDocumentIsMoving_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SlipDocumentIsPresent_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SlipDocumentIsPresent_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SlipDocumentIsPresent_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_SlipDocumentIsPresent_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SlipDocumentLength_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SlipDocumentLength_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SlipDocumentLength_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_SlipDocumentLength_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SlipDocumentLength_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SlipDocumentLength_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SlipDocumentLength_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_SlipDocumentLength_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SlipDocumentWidth_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SlipDocumentWidth_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SlipDocumentWidth_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_SlipDocumentWidth_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SlipDocumentWidth_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SlipDocumentWidth_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SlipDocumentWidth_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_SlipDocumentWidth_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SlipEqualStringIntervals_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SlipEqualStringIntervals_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SlipEqualStringIntervals_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_SlipEqualStringIntervals_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SlipEqualStringIntervals_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SlipEqualStringIntervals_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SlipEqualStringIntervals_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_SlipEqualStringIntervals_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SlipStringInterval_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SlipStringInterval_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SlipStringInterval_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_SlipStringInterval_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SlipStringInterval_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SlipStringInterval_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SlipStringInterval_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_SlipStringInterval_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SlipStringIntervals_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SlipStringIntervals_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_SlipStringIntervals_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_SlipStringIntervals_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_SlipStringIntervals_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SlipStringIntervals_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SlipStringIntervals_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SlipStringIntervals_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_SlipStringIntervals_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_StringForPrinting_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_StringForPrinting_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_StringForPrinting_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_StringForPrinting_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_StringForPrinting_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_StringForPrinting_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_StringForPrinting_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_StringForPrinting_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_StringForPrinting_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_StringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_StringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_StringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_StringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_StringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_StringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_StringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_StringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_StringQuantity_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_StringQuantity_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_StringQuantity_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_StringQuantity_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_StringQuantity_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_StringQuantity_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_StringQuantity_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_StringQuantity_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_StringQuantityInOperation_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_StringQuantityInOperation_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_StringQuantityInOperation_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_StringQuantityInOperation_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_StringQuantityInOperation_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_StringQuantityInOperation_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_StringQuantityInOperation_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_StringQuantityInOperation_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SubTotalFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SubTotalFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SubTotalFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_SubTotalFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SubTotalFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SubTotalFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SubTotalFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_SubTotalFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SubTotalOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SubTotalOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SubTotalOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_SubTotalOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SubTotalOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SubTotalOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SubTotalOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_SubTotalOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SubTotalStringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SubTotalStringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SubTotalStringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_SubTotalStringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SubTotalStringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SubTotalStringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SubTotalStringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_SubTotalStringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SubTotalSumFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SubTotalSumFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SubTotalSumFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_SubTotalSumFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SubTotalSumFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SubTotalSumFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SubTotalSumFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_SubTotalSumFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SubTotalSumOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SubTotalSumOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SubTotalSumOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_SubTotalSumOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SubTotalSumOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SubTotalSumOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SubTotalSumOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_SubTotalSumOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SubTotalSymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SubTotalSymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SubTotalSymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_SubTotalSymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SubTotalSymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SubTotalSymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SubTotalSymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_SubTotalSymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ1_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ1_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ1_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Summ1_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ1_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ1_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ1_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Summ1_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ1Font_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ1Font_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ1Font_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Summ1Font_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ1Font_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ1Font_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ1Font_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Summ1Font_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ1NameFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ1NameFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ1NameFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Summ1NameFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ1NameFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ1NameFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ1NameFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Summ1NameFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ1NameOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ1NameOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ1NameOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Summ1NameOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ1NameOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ1NameOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ1NameOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Summ1NameOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ1Offset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ1Offset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ1Offset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Summ1Offset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ1Offset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ1Offset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ1Offset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Summ1Offset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ1StringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ1StringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ1StringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Summ1StringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ1StringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ1StringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ1StringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Summ1StringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ1SymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ1SymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ1SymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Summ1SymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ1SymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ1SymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ1SymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Summ1SymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ2_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ2_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ2_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Summ2_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ2_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ2_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ2_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Summ2_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ2Font_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ2Font_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ2Font_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Summ2Font_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ2Font_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ2Font_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ2Font_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Summ2Font_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ2NameFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ2NameFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ2NameFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Summ2NameFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ2NameFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ2NameFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ2NameFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Summ2NameFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ2NameOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ2NameOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ2NameOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Summ2NameOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ2NameOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ2NameOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ2NameOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Summ2NameOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ2Offset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ2Offset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ2Offset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Summ2Offset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ2Offset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ2Offset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ2Offset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Summ2Offset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ2StringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ2StringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ2StringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Summ2StringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ2StringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ2StringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ2StringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Summ2StringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ2SymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ2SymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ2SymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Summ2SymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ2SymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ2SymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ2SymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Summ2SymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ3_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ3_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ3_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Summ3_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ3_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ3_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ3_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Summ3_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ3Font_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ3Font_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ3Font_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Summ3Font_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ3Font_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ3Font_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ3Font_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Summ3Font_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ3NameFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ3NameFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ3NameFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Summ3NameFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ3NameFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ3NameFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ3NameFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Summ3NameFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ3NameOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ3NameOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ3NameOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Summ3NameOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ3NameOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ3NameOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ3NameOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Summ3NameOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ3Offset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ3Offset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ3Offset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Summ3Offset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ3Offset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ3Offset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ3Offset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Summ3Offset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ3StringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ3StringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ3StringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Summ3StringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ3StringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ3StringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ3StringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Summ3StringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ3SymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ3SymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ3SymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Summ3SymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ3SymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ3SymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ3SymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Summ3SymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ4_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ4_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ4_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Summ4_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ4_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ4_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ4_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Summ4_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ4Font_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ4Font_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ4Font_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Summ4Font_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ4Font_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ4Font_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ4Font_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Summ4Font_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ4NameFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ4NameFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ4NameFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Summ4NameFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ4NameFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ4NameFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ4NameFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Summ4NameFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ4NameOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ4NameOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ4NameOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Summ4NameOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ4NameOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ4NameOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ4NameOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Summ4NameOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ4Offset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ4Offset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ4Offset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Summ4Offset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ4Offset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ4Offset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ4Offset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Summ4Offset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ4StringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ4StringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ4StringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Summ4StringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ4StringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ4StringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ4StringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Summ4StringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ4SymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ4SymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ4SymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Summ4SymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ4SymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ4SymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ4SymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Summ4SymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ5_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ5_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ5_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Summ5_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ5_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ5_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ5_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Summ5_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ6_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ6_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ6_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Summ6_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ6_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ6_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ6_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Summ6_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ7_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ7_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ7_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Summ7_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ7_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ7_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ7_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Summ7_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ8_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ8_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ8_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Summ8_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ8_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ8_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ8_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Summ8_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ9_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ9_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ9_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Summ9_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ9_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ9_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ9_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Summ9_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ10_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ10_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ10_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Summ10_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ10_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ10_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ10_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Summ10_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ11_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ11_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ11_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Summ11_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ11_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ11_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ11_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Summ11_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ12_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ12_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ12_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Summ12_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ12_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ12_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ12_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Summ12_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ13_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ13_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ13_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Summ13_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ13_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ13_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ13_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Summ13_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ14_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ14_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ14_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Summ14_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ14_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ14_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ14_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Summ14_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ15_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ15_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ15_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Summ15_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ15_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ15_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ15_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Summ15_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ16_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ16_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ16_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Summ16_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ16_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ16_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ16_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Summ16_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ17_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ17_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ17_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Summ17_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ17_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ17_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ17_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Summ17_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ18_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ18_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ18_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Summ18_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ18_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ18_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ18_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Summ18_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ19_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ19_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ19_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Summ19_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ19_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ19_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ19_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Summ19_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ20_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ20_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Summ20_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_Summ20_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Summ20_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Summ20_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Summ20_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_Summ20_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SummFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SummFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SummFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_SummFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SummFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SummFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SummFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_SummFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SummOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SummOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SummOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_SummOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SummOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SummOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SummOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_SummOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SummStringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SummStringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SummStringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_SummStringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SummStringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SummStringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SummStringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_SummStringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SummSymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SummSymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SummSymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_SummSymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SummSymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SummSymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SummSymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_SummSymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SwapBytesMode_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SwapBytesMode_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SwapBytesMode_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_SwapBytesMode_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SwapBytesMode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SwapBytesMode_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SwapBytesMode_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_SwapBytesMode_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SyncTimeout_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SyncTimeout_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SyncTimeout_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_SyncTimeout_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SyncTimeout_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SyncTimeout_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SyncTimeout_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_SyncTimeout_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SysAdminPassword_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SysAdminPassword_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SysAdminPassword_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_SysAdminPassword_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SysAdminPassword_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SysAdminPassword_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SysAdminPassword_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_SysAdminPassword_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TableName_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TableName_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TableName_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_TableName_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TableNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TableNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TableNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_TableNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TableNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TableNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TableNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TableNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TagDescription_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TagDescription_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_TagDescription_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_TagDescription_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_TagDescription_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TagDescription_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TagDescription_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TagDescription_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_TagDescription_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TagID_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TagID_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TagID_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_TagID_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TagID_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TagID_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TagID_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TagID_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TagType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TagType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TagType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_TagType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TagType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TagType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TagType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TagType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TagNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TagNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TagNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_TagNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TagNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TagNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TagNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TagNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TagValueBin_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TagValueBin_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_TagValueBin_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_TagValueBin_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_TagValueBin_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TagValueBin_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TagValueBin_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TagValueBin_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_TagValueBin_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TagValueDateTime_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::time_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TagValueDateTime_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    if (!PyDateTimeAPI) {
      PyDateTime_IMPORT; 
    }
    if (!PyDateTime_Check(swig_obj[0])) {
      PyErr_SetString(PyExc_ValueError,"Expected a datetime"); return NULL;
    }
    struct tm t ={
      PyDateTime_DATE_GET_SECOND(swig_obj[0]),
      PyDateTime_DATE_GET_MINUTE(swig_obj[0]),
      PyDateTime_DATE_GET_HOUR(swig_obj[0]),
      PyDateTime_GET_DAY(swig_obj[0]),
      PyDateTime_GET_MONTH(swig_obj[0])-1,
      PyDateTime_GET_YEAR(swig_obj[0])-1900,
      0,
      0,
      0
    };
    arg2 = mktime(&t);
  }
  kkt_driver_classic_interface_TagValueDateTime_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TagValueDateTime_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::time_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TagValueDateTime_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TagValueDateTime_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = kkt_driver_classic_interface_TagValueDateTime_get(arg1);
  {
    if (!PyDateTimeAPI) {
      PyDateTime_IMPORT; 
    }
    PyObject *floatObj = NULL;
    PyObject *timeTuple = NULL;
    floatObj = PyFloat_FromDouble(static_cast<double>(result));
    timeTuple = Py_BuildValue("(O)", floatObj);
    resultobj = PyDateTime_FromTimestamp(timeTuple);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TagValueFVLN_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TagValueFVLN_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TagValueFVLN_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_TagValueFVLN_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TagValueFVLN_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TagValueFVLN_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TagValueFVLN_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_TagValueFVLN_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TagValueLength_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TagValueLength_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TagValueLength_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_TagValueLength_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TagValueLength_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TagValueLength_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TagValueLength_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TagValueLength_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TagValueInt_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TagValueInt_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TagValueInt_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_TagValueInt_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TagValueInt_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TagValueInt_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TagValueInt_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TagValueInt_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TagValueStr_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TagValueStr_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_TagValueStr_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_TagValueStr_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_TagValueStr_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TagValueStr_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TagValueStr_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TagValueStr_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_TagValueStr_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TaxValue1_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TaxValue1_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TaxValue1_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_TaxValue1_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TaxValue1_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TaxValue1_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TaxValue1_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_TaxValue1_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TaxValue2_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TaxValue2_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TaxValue2_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_TaxValue2_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TaxValue2_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TaxValue2_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TaxValue2_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_TaxValue2_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TaxValue3_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TaxValue3_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TaxValue3_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_TaxValue3_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TaxValue3_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TaxValue3_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TaxValue3_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_TaxValue3_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TaxValue4_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TaxValue4_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TaxValue4_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_TaxValue4_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TaxValue4_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TaxValue4_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TaxValue4_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_TaxValue4_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TaxValue5_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TaxValue5_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TaxValue5_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_TaxValue5_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TaxValue5_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TaxValue5_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TaxValue5_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_TaxValue5_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TaxValue6_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TaxValue6_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TaxValue6_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_TaxValue6_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TaxValue6_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TaxValue6_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TaxValue6_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_TaxValue6_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TaxValue7_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TaxValue7_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TaxValue7_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_TaxValue7_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TaxValue7_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TaxValue7_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TaxValue7_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_TaxValue7_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TaxValue8_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TaxValue8_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TaxValue8_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_TaxValue8_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TaxValue8_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TaxValue8_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TaxValue8_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_TaxValue8_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TaxValue9_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TaxValue9_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TaxValue9_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_TaxValue9_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TaxValue9_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TaxValue9_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TaxValue9_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_TaxValue9_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TaxValue10_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TaxValue10_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TaxValue10_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_TaxValue10_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TaxValue10_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TaxValue10_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TaxValue10_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_TaxValue10_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TaxValue1Enabled_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TaxValue1Enabled_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TaxValue1Enabled_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_TaxValue1Enabled_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TaxValue1Enabled_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TaxValue1Enabled_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TaxValue1Enabled_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TaxValue1Enabled_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax1_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax1_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax1_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax1_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1NameFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1NameFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax1NameFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax1NameFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1NameFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax1NameFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1NameFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax1NameFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1NameOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1NameOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax1NameOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax1NameOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1NameOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax1NameOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1NameOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax1NameOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1NameSymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1NameSymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax1NameSymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax1NameSymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1NameSymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax1NameSymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1NameSymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax1NameSymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1RateFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1RateFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax1RateFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax1RateFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1RateFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax1RateFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1RateFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax1RateFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1RateOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1RateOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax1RateOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax1RateOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1RateOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax1RateOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1RateOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax1RateOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1RateSymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1RateSymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax1RateSymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax1RateSymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1RateSymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax1RateSymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1RateSymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax1RateSymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1SumFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1SumFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax1SumFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax1SumFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1SumFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax1SumFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1SumFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax1SumFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1SumOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1SumOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax1SumOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax1SumOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1SumOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax1SumOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1SumOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax1SumOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1SumStringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1SumStringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax1SumStringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax1SumStringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1SumStringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax1SumStringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1SumStringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax1SumStringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1SumSymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1SumSymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax1SumSymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax1SumSymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1SumSymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax1SumSymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1SumSymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax1SumSymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1TurnOverOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1TurnOverOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax1TurnOverOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax1TurnOverOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1TurnOverOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax1TurnOverOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1TurnOverOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax1TurnOverOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1TurnOverStringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1TurnOverStringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax1TurnOverStringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax1TurnOverStringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax1TurnOverStringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax1TurnOverStringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax1TurnOverStringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax1TurnOverStringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax2_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax2_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax2_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax2_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2NameFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2NameFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax2NameFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax2NameFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2NameFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax2NameFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2NameFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax2NameFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2NameOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2NameOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax2NameOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax2NameOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2NameOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax2NameOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2NameOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax2NameOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2NameSymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2NameSymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax2NameSymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax2NameSymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2NameSymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax2NameSymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2NameSymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax2NameSymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2RateFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2RateFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax2RateFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax2RateFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2RateFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax2RateFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2RateFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax2RateFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2RateOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2RateOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax2RateOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax2RateOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2RateOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax2RateOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2RateOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax2RateOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2RateSymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2RateSymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax2RateSymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax2RateSymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2RateSymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax2RateSymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2RateSymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax2RateSymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2SumFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2SumFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax2SumFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax2SumFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2SumFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax2SumFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2SumFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax2SumFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2SumOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2SumOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax2SumOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax2SumOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2SumOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax2SumOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2SumOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax2SumOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2SumStringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2SumStringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax2SumStringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax2SumStringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2SumStringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax2SumStringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2SumStringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax2SumStringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2SumSymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2SumSymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax2SumSymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax2SumSymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2SumSymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax2SumSymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2SumSymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax2SumSymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2TurnOverOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2TurnOverOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax2TurnOverOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax2TurnOverOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2TurnOverOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax2TurnOverOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2TurnOverOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax2TurnOverOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2TurnOverStringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2TurnOverStringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax2TurnOverStringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax2TurnOverStringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2TurnOverStringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax2TurnOverStringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2TurnOverStringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax2TurnOverStringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2TurnOverSymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2TurnOverSymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax2TurnOverSymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax2TurnOverSymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax2TurnOverSymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax2TurnOverSymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax2TurnOverSymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax2TurnOverSymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax3_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax3_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax3_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax3_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3NameFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3NameFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax3NameFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax3NameFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3NameFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax3NameFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3NameFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax3NameFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3NameOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3NameOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax3NameOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax3NameOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3NameOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax3NameOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3NameOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax3NameOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3NameSymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3NameSymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax3NameSymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax3NameSymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3NameSymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax3NameSymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3NameSymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax3NameSymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3RateFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3RateFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax3RateFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax3RateFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3RateFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax3RateFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3RateFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax3RateFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3RateOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3RateOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax3RateOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax3RateOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3RateOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax3RateOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3RateOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax3RateOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3RateSymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3RateSymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax3RateSymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax3RateSymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3RateSymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax3RateSymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3RateSymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax3RateSymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3SumFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3SumFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax3SumFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax3SumFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3SumFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax3SumFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3SumFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax3SumFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3SumOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3SumOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax3SumOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax3SumOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3SumOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax3SumOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3SumOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax3SumOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3SumStringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3SumStringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax3SumStringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax3SumStringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3SumStringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax3SumStringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3SumStringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax3SumStringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3SumSymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3SumSymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax3SumSymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax3SumSymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3SumSymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax3SumSymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3SumSymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax3SumSymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3TurnOverOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3TurnOverOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax3TurnOverOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax3TurnOverOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3TurnOverOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax3TurnOverOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3TurnOverOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax3TurnOverOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3TurnOverStringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3TurnOverStringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax3TurnOverStringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax3TurnOverStringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3TurnOverStringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax3TurnOverStringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3TurnOverStringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax3TurnOverStringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3TurnOverSymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3TurnOverSymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax3TurnOverSymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax3TurnOverSymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax3TurnOverSymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax3TurnOverSymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax3TurnOverSymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax3TurnOverSymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax4_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax4_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax4_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax4_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4NameFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4NameFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax4NameFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax4NameFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4NameFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax4NameFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4NameFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax4NameFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4NameOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4NameOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax4NameOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax4NameOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4NameOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax4NameOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4NameOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax4NameOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4NameSymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4NameSymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax4NameSymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax4NameSymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4NameSymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax4NameSymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4NameSymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax4NameSymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4RateFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4RateFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax4RateFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax4RateFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4RateFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax4RateFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4RateFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax4RateFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4RateOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4RateOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax4RateOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax4RateOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4RateOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax4RateOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4RateOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax4RateOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4RateSymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4RateSymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax4RateSymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax4RateSymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4RateSymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax4RateSymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4RateSymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax4RateSymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4SumFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4SumFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax4SumFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax4SumFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4SumFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax4SumFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4SumFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax4SumFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4SumOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4SumOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax4SumOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax4SumOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4SumOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax4SumOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4SumOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax4SumOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4SumStringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4SumStringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax4SumStringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax4SumStringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4SumStringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax4SumStringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4SumStringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax4SumStringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4SumSymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4SumSymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax4SumSymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax4SumSymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4SumSymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax4SumSymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4SumSymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax4SumSymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4TurnOverOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4TurnOverOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax4TurnOverOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax4TurnOverOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4TurnOverOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax4TurnOverOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4TurnOverOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax4TurnOverOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4TurnOverStringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4TurnOverStringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax4TurnOverStringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax4TurnOverStringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4TurnOverStringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax4TurnOverStringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4TurnOverStringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax4TurnOverStringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4TurnOverSymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4TurnOverSymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Tax4TurnOverSymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Tax4TurnOverSymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Tax4TurnOverSymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Tax4TurnOverSymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Tax4TurnOverSymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Tax4TurnOverSymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TaxType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TaxType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TaxType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_TaxType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TaxType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TaxType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TaxType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TaxType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TCPConnectionTimeout_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TCPConnectionTimeout_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TCPConnectionTimeout_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_TCPConnectionTimeout_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TCPConnectionTimeout_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TCPConnectionTimeout_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TCPConnectionTimeout_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TCPConnectionTimeout_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TCPPort_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TCPPort_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TCPPort_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_TCPPort_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TCPPort_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TCPPort_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TCPPort_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TCPPort_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TextBlock_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TextBlock_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_TextBlock_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_TextBlock_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_TextBlock_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TextBlock_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TextBlock_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TextBlock_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_TextBlock_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TextBlockNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TextBlockNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TextBlockNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_TextBlockNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TextBlockNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TextBlockNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TextBlockNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TextBlockNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TextFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TextFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TextFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_TextFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TextFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TextFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TextFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TextFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TextOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TextOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TextOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_TextOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TextOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TextOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TextOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TextOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TextStringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TextStringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TextStringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_TextStringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TextStringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TextStringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TextStringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TextStringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TextSymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TextSymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TextSymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_TextSymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TextSymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TextSymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TextSymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TextSymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Time_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::time_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Time_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    if (!PyDateTimeAPI) {
      PyDateTime_IMPORT; 
    }
    if (!PyDateTime_Check(swig_obj[0])) {
      PyErr_SetString(PyExc_ValueError,"Expected a datetime"); return NULL;
    }
    struct tm t ={
      PyDateTime_DATE_GET_SECOND(swig_obj[0]),
      PyDateTime_DATE_GET_MINUTE(swig_obj[0]),
      PyDateTime_DATE_GET_HOUR(swig_obj[0]),
      PyDateTime_GET_DAY(swig_obj[0]),
      PyDateTime_GET_MONTH(swig_obj[0])-1,
      PyDateTime_GET_YEAR(swig_obj[0])-1900,
      0,
      0,
      0
    };
    arg2 = mktime(&t);
  }
  kkt_driver_classic_interface_Time_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Time_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::time_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Time_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Time_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = kkt_driver_classic_interface_Time_get(arg1);
  {
    if (!PyDateTimeAPI) {
      PyDateTime_IMPORT; 
    }
    PyObject *floatObj = NULL;
    PyObject *timeTuple = NULL;
    floatObj = PyFloat_FromDouble(static_cast<double>(result));
    timeTuple = Py_BuildValue("(O)", floatObj);
    resultobj = PyDateTime_FromTimestamp(timeTuple);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Time2_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::time_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Time2_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    if (!PyDateTimeAPI) {
      PyDateTime_IMPORT; 
    }
    if (!PyDateTime_Check(swig_obj[0])) {
      PyErr_SetString(PyExc_ValueError,"Expected a datetime"); return NULL;
    }
    struct tm t ={
      PyDateTime_DATE_GET_SECOND(swig_obj[0]),
      PyDateTime_DATE_GET_MINUTE(swig_obj[0]),
      PyDateTime_DATE_GET_HOUR(swig_obj[0]),
      PyDateTime_GET_DAY(swig_obj[0]),
      PyDateTime_GET_MONTH(swig_obj[0])-1,
      PyDateTime_GET_YEAR(swig_obj[0])-1900,
      0,
      0,
      0
    };
    arg2 = mktime(&t);
  }
  kkt_driver_classic_interface_Time2_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Time2_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::time_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Time2_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Time2_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = kkt_driver_classic_interface_Time2_get(arg1);
  {
    if (!PyDateTimeAPI) {
      PyDateTime_IMPORT; 
    }
    PyObject *floatObj = NULL;
    PyObject *timeTuple = NULL;
    floatObj = PyFloat_FromDouble(static_cast<double>(result));
    timeTuple = Py_BuildValue("(O)", floatObj);
    resultobj = PyDateTime_FromTimestamp(timeTuple);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Timeout_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Timeout_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Timeout_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_Timeout_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Timeout_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Timeout_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Timeout_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_Timeout_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TimeoutsUsing_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TimeoutsUsing_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TimeoutsUsing_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_TimeoutsUsing_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TimeoutsUsing_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TimeoutsUsing_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TimeoutsUsing_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TimeoutsUsing_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TimeStr_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TimeStr_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_TimeStr_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_TimeStr_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_TimeStr_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TimeStr_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TimeStr_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TimeStr_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_TimeStr_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TLVData_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::vector< uint8_t,std::allocator< uint8_t > > *arg2 = (std::vector< uint8_t,std::allocator< uint8_t > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TLVData_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[0], &argp2,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_TLVData_set" "', argument " "2"" of type '" "std::vector< uint8_t,std::allocator< uint8_t > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< uint8_t,std::allocator< uint8_t > > * >(argp2);
  kkt_driver_classic_interface_TLVData_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TLVData_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< uint8_t,std::allocator< uint8_t > > *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TLVData_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TLVData_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::vector< uint8_t,std::allocator< uint8_t > > *)kkt_driver_classic_interface_TLVData_get(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TLVDataHex_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TLVDataHex_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_TLVDataHex_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_TLVDataHex_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_TLVDataHex_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TLVDataHex_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TLVDataHex_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TLVDataHex_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_TLVDataHex_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Token_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Token_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_Token_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_Token_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_Token_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Token_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Token_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Token_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_Token_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TotalFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TotalFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TotalFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_TotalFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TotalFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TotalFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TotalFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TotalFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TotalOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TotalOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TotalOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_TotalOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TotalOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TotalOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TotalOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TotalOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TotalStringNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TotalStringNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TotalStringNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_TotalStringNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TotalStringNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TotalStringNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TotalStringNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TotalStringNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TotalSumFont_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TotalSumFont_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TotalSumFont_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_TotalSumFont_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TotalSumFont_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TotalSumFont_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TotalSumFont_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TotalSumFont_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TotalSumOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TotalSumOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TotalSumOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_TotalSumOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TotalSumOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TotalSumOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TotalSumOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TotalSumOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TotalSymbolNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TotalSymbolNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TotalSymbolNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_TotalSymbolNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TotalSymbolNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TotalSymbolNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TotalSymbolNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TotalSymbolNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TransferBytes_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TransferBytes_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_TransferBytes_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_TransferBytes_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_TransferBytes_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TransferBytes_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TransferBytes_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TransferBytes_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_TransferBytes_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TranslationEnabled_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TranslationEnabled_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TranslationEnabled_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_TranslationEnabled_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TranslationEnabled_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TranslationEnabled_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TranslationEnabled_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_TranslationEnabled_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TransmitDocumentNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TransmitDocumentNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TransmitDocumentNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TransmitDocumentNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TransmitQueueSize_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TransmitQueueSize_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TransmitQueueSize_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TransmitQueueSize_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TransmitSessionNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TransmitSessionNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TransmitSessionNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TransmitSessionNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TransmitStatus_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TransmitStatus_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TransmitStatus_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TransmitStatus_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TypeOfLastEntryFM_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TypeOfLastEntryFM_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TypeOfLastEntryFM_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_TypeOfLastEntryFM_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TypeOfLastEntryFMEx_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TypeOfLastEntryFMEx_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TypeOfLastEntryFMEx_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_TypeOfLastEntryFMEx_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TypeOfSumOfEntriesFM_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TypeOfSumOfEntriesFM_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_TypeOfSumOfEntriesFM_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_TypeOfSumOfEntriesFM_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_TypeOfSumOfEntriesFM_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_TypeOfSumOfEntriesFM_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_TypeOfSumOfEntriesFM_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_TypeOfSumOfEntriesFM_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UCodePage_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_UCodePage_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UCodePage_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_UCodePage_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UCodePageText_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_UCodePageText_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UCodePageText_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_UCodePageText_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UDescription_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_UDescription_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UDescription_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_UDescription_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UMajorProtocolVersion_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_UMajorProtocolVersion_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UMajorProtocolVersion_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_UMajorProtocolVersion_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UMajorType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_UMajorType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UMajorType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_UMajorType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UMinorProtocolVersion_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_UMinorProtocolVersion_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UMinorProtocolVersion_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_UMinorProtocolVersion_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UMinorType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_UMinorType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UMinorType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_UMinorType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UModel_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_UModel_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UModel_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_UModel_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_URL_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_URL_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_URL_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_URL_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_URL_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_URL_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_URL_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_URL_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_URL_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UseCommandTimeout_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UseCommandTimeout_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_UseCommandTimeout_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_UseCommandTimeout_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UseCommandTimeout_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_UseCommandTimeout_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UseCommandTimeout_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_UseCommandTimeout_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UseIPAddress_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UseIPAddress_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_UseIPAddress_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_UseIPAddress_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UseIPAddress_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_UseIPAddress_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UseIPAddress_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_UseIPAddress_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UseJournalRibbon_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UseJournalRibbon_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_UseJournalRibbon_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_UseJournalRibbon_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UseJournalRibbon_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_UseJournalRibbon_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UseJournalRibbon_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_UseJournalRibbon_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UseReceiptRibbon_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UseReceiptRibbon_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_UseReceiptRibbon_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_UseReceiptRibbon_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UseReceiptRibbon_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_UseReceiptRibbon_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UseReceiptRibbon_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_UseReceiptRibbon_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UseSlipCheck_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UseSlipCheck_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_UseSlipCheck_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_UseSlipCheck_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UseSlipCheck_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_UseSlipCheck_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UseSlipCheck_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_UseSlipCheck_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UseSlipDocument_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UseSlipDocument_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_UseSlipDocument_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_UseSlipDocument_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UseSlipDocument_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_UseSlipDocument_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UseSlipDocument_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_UseSlipDocument_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UseTaxDiscountBel_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UseTaxDiscountBel_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_UseTaxDiscountBel_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_UseTaxDiscountBel_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UseTaxDiscountBel_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_UseTaxDiscountBel_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UseTaxDiscountBel_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_UseTaxDiscountBel_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UseWareCode_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UseWareCode_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_UseWareCode_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_UseWareCode_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UseWareCode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_UseWareCode_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UseWareCode_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_UseWareCode_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ValueOfFieldInteger_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ValueOfFieldInteger_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ValueOfFieldInteger_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ValueOfFieldInteger_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ValueOfFieldInteger_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ValueOfFieldInteger_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ValueOfFieldInteger_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ValueOfFieldInteger_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ValueOfFieldString_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ValueOfFieldString_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_ValueOfFieldString_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_ValueOfFieldString_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_ValueOfFieldString_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ValueOfFieldString_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ValueOfFieldString_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ValueOfFieldString_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_ValueOfFieldString_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_VertScale_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_VertScale_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_VertScale_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_VertScale_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_VertScale_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_VertScale_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_VertScale_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_VertScale_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_WaitForPrintingDelay_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_WaitForPrintingDelay_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_WaitForPrintingDelay_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_WaitForPrintingDelay_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_WaitForPrintingDelay_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_WaitForPrintingDelay_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_WaitForPrintingDelay_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_WaitForPrintingDelay_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_WareCode_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_WareCode_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_WareCode_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_WareCode_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_WareCode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_WareCode_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_WareCode_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_WareCode_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SkipPrint_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SkipPrint_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_SkipPrint_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_SkipPrint_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_SkipPrint_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_SkipPrint_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_SkipPrint_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_SkipPrint_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DigitalSign_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DigitalSign_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_DigitalSign_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_DigitalSign_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_DigitalSign_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DigitalSign_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DigitalSign_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DigitalSign_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_DigitalSign_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DeviceFunctionNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DeviceFunctionNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DeviceFunctionNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_DeviceFunctionNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DeviceFunctionNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DeviceFunctionNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DeviceFunctionNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DeviceFunctionNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ValueOfFunctionInteger_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ValueOfFunctionInteger_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ValueOfFunctionInteger_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ValueOfFunctionInteger_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ValueOfFunctionInteger_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ValueOfFunctionInteger_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ValueOfFunctionInteger_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ValueOfFunctionInteger_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ValueOfFunctionString_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ValueOfFunctionString_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_ValueOfFunctionString_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_ValueOfFunctionString_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_ValueOfFunctionString_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ValueOfFunctionString_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ValueOfFunctionString_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ValueOfFunctionString_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_ValueOfFunctionString_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EnableCashcoreMarkCompatibility_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EnableCashcoreMarkCompatibility_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_EnableCashcoreMarkCompatibility_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_EnableCashcoreMarkCompatibility_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_EnableCashcoreMarkCompatibility_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_EnableCashcoreMarkCompatibility_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_EnableCashcoreMarkCompatibility_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_EnableCashcoreMarkCompatibility_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MarkingType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MarkingType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_MarkingType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_MarkingType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MarkingType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MarkingType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MarkingType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_MarkingType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MarkingTypeEx_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MarkingTypeEx_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_MarkingTypeEx_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_MarkingTypeEx_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MarkingTypeEx_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MarkingTypeEx_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MarkingTypeEx_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_MarkingTypeEx_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DataBlockSize_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DataBlockSize_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DataBlockSize_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_DataBlockSize_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DataBlockSize_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DataBlockSize_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DataBlockSize_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DataBlockSize_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MessageNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MessageNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_MessageNumber_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_MessageNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MessageNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MessageNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MessageNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_MessageNumber_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CheckItemLocalError_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CheckItemLocalError_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CheckItemLocalError_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_CheckItemLocalError_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CheckItemLocalError_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CheckItemLocalError_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CheckItemLocalError_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_CheckItemLocalError_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MeasureUnit_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MeasureUnit_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_MeasureUnit_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_MeasureUnit_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MeasureUnit_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MeasureUnit_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MeasureUnit_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_MeasureUnit_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DivisionalQuantity_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DivisionalQuantity_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DivisionalQuantity_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_DivisionalQuantity_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DivisionalQuantity_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DivisionalQuantity_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DivisionalQuantity_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_DivisionalQuantity_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Numerator_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  uint64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Numerator_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Numerator_set" "', argument " "2"" of type '" "uint64_t""'");
  } 
  arg2 = static_cast< uint64_t >(val2);
  kkt_driver_classic_interface_Numerator_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Numerator_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Numerator_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Numerator_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (uint64_t)kkt_driver_classic_interface_Numerator_get(arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Denominator_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  uint64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Denominator_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_Denominator_set" "', argument " "2"" of type '" "uint64_t""'");
  } 
  arg2 = static_cast< uint64_t >(val2);
  kkt_driver_classic_interface_Denominator_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_Denominator_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_Denominator_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_Denominator_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (uint64_t)kkt_driver_classic_interface_Denominator_get(arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FreeMemorySize_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FreeMemorySize_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_FreeMemorySize_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_FreeMemorySize_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FreeMemorySize_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FreeMemorySize_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FreeMemorySize_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FreeMemorySize_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MCCheckStatus_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MCCheckStatus_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_MCCheckStatus_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_MCCheckStatus_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MCCheckStatus_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MCCheckStatus_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MCCheckStatus_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_MCCheckStatus_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MCNotificationStatus_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MCNotificationStatus_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_MCNotificationStatus_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_MCNotificationStatus_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MCNotificationStatus_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MCNotificationStatus_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MCNotificationStatus_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_MCNotificationStatus_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MCCommandFlags_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MCCommandFlags_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_MCCommandFlags_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_MCCommandFlags_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MCCommandFlags_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MCCommandFlags_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MCCommandFlags_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_MCCommandFlags_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MCCheckResultSavedCount_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MCCheckResultSavedCount_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_MCCheckResultSavedCount_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_MCCheckResultSavedCount_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MCCheckResultSavedCount_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MCCheckResultSavedCount_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MCCheckResultSavedCount_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_MCCheckResultSavedCount_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MCRealizationCount_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MCRealizationCount_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_MCRealizationCount_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_MCRealizationCount_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MCRealizationCount_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MCRealizationCount_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MCRealizationCount_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_MCRealizationCount_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MCStorageSize_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MCStorageSize_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_MCStorageSize_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_MCStorageSize_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MCStorageSize_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MCStorageSize_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MCStorageSize_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_MCStorageSize_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CheckSum_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  uint64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CheckSum_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CheckSum_set" "', argument " "2"" of type '" "uint64_t""'");
  } 
  arg2 = static_cast< uint64_t >(val2);
  kkt_driver_classic_interface_CheckSum_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CheckSum_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CheckSum_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CheckSum_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (uint64_t)kkt_driver_classic_interface_CheckSum_get(arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_NotificationCount_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_NotificationCount_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_NotificationCount_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_NotificationCount_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_NotificationCount_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_NotificationCount_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_NotificationCount_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_NotificationCount_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_NotificationNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_NotificationNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_NotificationNumber_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_NotificationNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_NotificationNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_NotificationNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_NotificationNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_NotificationNumber_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_NotificationSize_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_NotificationSize_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_NotificationSize_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_NotificationSize_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_NotificationSize_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_NotificationSize_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_NotificationSize_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_NotificationSize_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DataOffset_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DataOffset_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DataOffset_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_DataOffset_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DataOffset_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DataOffset_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DataOffset_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DataOffset_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MarkingType2_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MarkingType2_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_MarkingType2_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_MarkingType2_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MarkingType2_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MarkingType2_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MarkingType2_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_MarkingType2_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RandomSequence_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::vector< uint8_t,std::allocator< uint8_t > > *arg2 = (std::vector< uint8_t,std::allocator< uint8_t > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RandomSequence_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[0], &argp2,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_RandomSequence_set" "', argument " "2"" of type '" "std::vector< uint8_t,std::allocator< uint8_t > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< uint8_t,std::allocator< uint8_t > > * >(argp2);
  kkt_driver_classic_interface_RandomSequence_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RandomSequence_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< uint8_t,std::allocator< uint8_t > > *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RandomSequence_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RandomSequence_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::vector< uint8_t,std::allocator< uint8_t > > *)kkt_driver_classic_interface_RandomSequence_get(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RandomSequenceHex_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RandomSequenceHex_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_RandomSequenceHex_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_RandomSequenceHex_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_RandomSequenceHex_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_RandomSequenceHex_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_RandomSequenceHex_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_RandomSequenceHex_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_RandomSequenceHex_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_AuthData_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::vector< uint8_t,std::allocator< uint8_t > > *arg2 = (std::vector< uint8_t,std::allocator< uint8_t > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_AuthData_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[0], &argp2,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_AuthData_set" "', argument " "2"" of type '" "std::vector< uint8_t,std::allocator< uint8_t > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< uint8_t,std::allocator< uint8_t > > * >(argp2);
  kkt_driver_classic_interface_AuthData_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_AuthData_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< uint8_t,std::allocator< uint8_t > > *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_AuthData_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_AuthData_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::vector< uint8_t,std::allocator< uint8_t > > *)kkt_driver_classic_interface_AuthData_get(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ItemStatus_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ItemStatus_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_ItemStatus_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_ItemStatus_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_ItemStatus_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_ItemStatus_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_ItemStatus_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_ItemStatus_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CheckItemMode_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CheckItemMode_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CheckItemMode_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_CheckItemMode_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CheckItemMode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CheckItemMode_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CheckItemMode_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_CheckItemMode_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CheckItemLocalResult_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CheckItemLocalResult_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CheckItemLocalResult_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_CheckItemLocalResult_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CheckItemLocalResult_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CheckItemLocalResult_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CheckItemLocalResult_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_CheckItemLocalResult_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_KMServerErrorCode_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_KMServerErrorCode_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_KMServerErrorCode_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_KMServerErrorCode_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_KMServerErrorCode_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_KMServerErrorCode_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_KMServerErrorCode_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_KMServerErrorCode_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_KMServerCheckingStatus_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_KMServerCheckingStatus_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_KMServerCheckingStatus_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_KMServerCheckingStatus_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_KMServerCheckingStatus_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_KMServerCheckingStatus_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_KMServerCheckingStatus_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_KMServerCheckingStatus_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LoaderVersion_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LoaderVersion_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LoaderVersion_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_LoaderVersion_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LastDocumentNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LastDocumentNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_LastDocumentNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_LastDocumentNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_LastDocumentNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_LastDocumentNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_LastDocumentNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_LastDocumentNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FirstDocumentNumber_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FirstDocumentNumber_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_FirstDocumentNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_FirstDocumentNumber_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FirstDocumentNumber_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FirstDocumentNumber_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FirstDocumentNumber_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FirstDocumentNumber_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNArchiveType_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNArchiveType_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_FNArchiveType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_FNArchiveType_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNArchiveType_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNArchiveType_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNArchiveType_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FNArchiveType_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MarkingOnly_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MarkingOnly_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_MarkingOnly_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_MarkingOnly_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MarkingOnly_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MarkingOnly_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MarkingOnly_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_MarkingOnly_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FN30DayResource_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FN30DayResource_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_FN30DayResource_set" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);
  kkt_driver_classic_interface_FN30DayResource_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FN30DayResource_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint32_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FN30DayResource_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FN30DayResource_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (uint32_t)kkt_driver_classic_interface_FN30DayResource_get(arg1);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FN5YearResource_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FN5YearResource_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_FN5YearResource_set" "', argument " "2"" of type '" "uint32_t""'");
  } 
  arg2 = static_cast< uint32_t >(val2);
  kkt_driver_classic_interface_FN5YearResource_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FN5YearResource_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  uint32_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FN5YearResource_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FN5YearResource_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (uint32_t)kkt_driver_classic_interface_FN5YearResource_get(arg1);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CrptExchangeCaCertPath_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CrptExchangeCaCertPath_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_CrptExchangeCaCertPath_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_CrptExchangeCaCertPath_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_CrptExchangeCaCertPath_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CrptExchangeCaCertPath_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CrptExchangeCaCertPath_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CrptExchangeCaCertPath_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_CrptExchangeCaCertPath_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CrptCdnListUrl_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CrptCdnListUrl_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_CrptCdnListUrl_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_CrptCdnListUrl_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_CrptCdnListUrl_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CrptCdnListUrl_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CrptCdnListUrl_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CrptCdnListUrl_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_CrptCdnListUrl_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CrptToken_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CrptToken_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_CrptToken_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_CrptToken_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_CrptToken_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CrptToken_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CrptToken_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CrptToken_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_CrptToken_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OutputStrJson_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OutputStrJson_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_OutputStrJson_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_OutputStrJson_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_OutputStrJson_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_OutputStrJson_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_OutputStrJson_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_OutputStrJson_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_OutputStrJson_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_InputStrJson_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_InputStrJson_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_InputStrJson_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_InputStrJson_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_InputStrJson_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_InputStrJson_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_InputStrJson_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_InputStrJson_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_InputStrJson_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CrptCheck_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CrptCheck_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_CrptCheck_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_CrptCheck_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_CrptCheck_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_CrptCheck_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_CrptCheck_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_CrptCheck_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_WrapStrings_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_WrapStrings_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_WrapStrings_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_WrapStrings_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_WrapStrings_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_WrapStrings_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_WrapStrings_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_WrapStrings_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNOSUSupportStatus_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNOSUSupportStatus_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_FNOSUSupportStatus_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_FNOSUSupportStatus_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNOSUSupportStatus_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNOSUSupportStatus_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNOSUSupportStatus_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_FNOSUSupportStatus_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNImplementation_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNImplementation_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_FNImplementation_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_FNImplementation_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_FNImplementation_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FNImplementation_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FNImplementation_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FNImplementation_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_FNImplementation_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DocumentSize_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DocumentSize_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_DocumentSize_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  kkt_driver_classic_interface_DocumentSize_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DocumentSize_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DocumentSize_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DocumentSize_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int)kkt_driver_classic_interface_DocumentSize_get(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_AutoOpenSession_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_AutoOpenSession_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_AutoOpenSession_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_AutoOpenSession_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_AutoOpenSession_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_AutoOpenSession_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_AutoOpenSession_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_AutoOpenSession_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MCOSUSign_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MCOSUSign_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_MCOSUSign_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  kkt_driver_classic_interface_MCOSUSign_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_MCOSUSign_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_MCOSUSign_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_MCOSUSign_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (bool)kkt_driver_classic_interface_MCOSUSign_get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_FontHashHex_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_FontHashHex_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_FontHashHex_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_FontHashHex_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DataBlockHex_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DataBlockHex_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DataBlockHex_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_DataBlockHex_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DeclarativeEndpointPath_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DeclarativeEndpointPath_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_DeclarativeEndpointPath_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_DeclarativeEndpointPath_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_DeclarativeEndpointPath_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DeclarativeEndpointPath_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DeclarativeEndpointPath_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DeclarativeEndpointPath_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_DeclarativeEndpointPath_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DeclarativeOutput_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DeclarativeOutput_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_DeclarativeOutput_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_DeclarativeOutput_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_DeclarativeOutput_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DeclarativeOutput_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DeclarativeOutput_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DeclarativeOutput_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_DeclarativeOutput_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DeclarativeInput_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DeclarativeInput_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_DeclarativeInput_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_DeclarativeInput_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_DeclarativeInput_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_DeclarativeInput_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_DeclarativeInput_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_DeclarativeInput_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_DeclarativeInput_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_WaitForPrintingTimeout_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_WaitForPrintingTimeout_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[0], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "classic_interface_WaitForPrintingTimeout_set" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  kkt_driver_classic_interface_WaitForPrintingTimeout_set(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_WaitForPrintingTimeout_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int64_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_WaitForPrintingTimeout_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_WaitForPrintingTimeout_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (int64_t)kkt_driver_classic_interface_WaitForPrintingTimeout_get(arg1);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UserAttributeValue_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UserAttributeValue_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_UserAttributeValue_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_UserAttributeValue_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_UserAttributeValue_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UserAttributeValue_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_UserAttributeValue_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UserAttributeValue_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_UserAttributeValue_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UserAttributeName_set(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UserAttributeName_set" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "classic_interface_UserAttributeName_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "classic_interface_UserAttributeName_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  kkt_driver_classic_interface_UserAttributeName_set(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_classic_interface_UserAttributeName_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  kkt_driver::classic_interface *arg1 = (kkt_driver::classic_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "classic_interface_UserAttributeName_get", 0, 0, 0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(self, &argp1,SWIGTYPE_p_kkt_driver__classic_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "classic_interface_UserAttributeName_get" "', argument " "1"" of type '" "kkt_driver::classic_interface *""'"); 
  }
  arg1 = reinterpret_cast< kkt_driver::classic_interface * >(argp1);
  result = (std::string *) &kkt_driver_classic_interface_UserAttributeName_get(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  delete result;
  return resultobj;
fail:
  return NULL;
}


SWIGPY_DESTRUCTOR_CLOSURE(_wrap_delete_classic_interface) /* defines _wrap_delete_classic_interface_destructor_closure */

static PyMethodDef SwigMethods[] = {
	 { "SWIG_PyInstanceMethod_New", SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { "classic_interface_setLogCallback", _wrap_classic_interface_setLogCallback, METH_O, NULL},
	 { "classic_interface_setLogCallback_v2", _wrap_classic_interface_setLogCallback_v2, METH_O, NULL},
	 { NULL, NULL, 0, NULL }
};

static PyMethodDef SwigMethods_proxydocs[] = {
	 { NULL, NULL, 0, NULL }
};

static SwigPyGetSet SwigPyIterator___dict___getset = { SwigPyObject_get___dict__, 0 };
SWIGINTERN PyGetSetDef SwigPyBuiltin__swig__SwigPyIterator_getset[] = {
    { (char *)"__dict__", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &SwigPyIterator___dict___getset },
    { NULL, NULL, NULL, NULL, NULL } /* Sentinel */
};

SWIGINTERN PyObject *
SwigPyBuiltin__swig__SwigPyIterator_richcompare(PyObject *self, PyObject *other, int op) {
  PyObject *result = NULL;
  switch (op) {
    case Py_EQ : result = _wrap_SwigPyIterator___eq__(self, other); break;
    case Py_NE : result = _wrap_SwigPyIterator___ne__(self, other); break;
    default : break;
  }
  if (!result) {
    if (SwigPyObject_Check(self) && SwigPyObject_Check(other)) {
      result = SwigPyObject_richcompare((SwigPyObject *)self, (SwigPyObject *)other, op);
    } else {
      result = Py_NotImplemented;
      Py_INCREF(result);
    }
  }
  return result;
}

SWIGINTERN PyMethodDef SwigPyBuiltin__swig__SwigPyIterator_methods[] = {
  { "value", _wrap_SwigPyIterator_value, METH_NOARGS, "" },
  { "incr", _wrap_SwigPyIterator_incr, METH_VARARGS, "" },
  { "decr", _wrap_SwigPyIterator_decr, METH_VARARGS, "" },
  { "distance", _wrap_SwigPyIterator_distance, METH_O, "" },
  { "equal", _wrap_SwigPyIterator_equal, METH_O, "" },
  { "copy", _wrap_SwigPyIterator_copy, METH_NOARGS, "" },
  { "next", _wrap_SwigPyIterator_next, METH_NOARGS, "" },
  { "__next__", _wrap_SwigPyIterator___next__, METH_NOARGS, "" },
  { "previous", _wrap_SwigPyIterator_previous, METH_NOARGS, "" },
  { "advance", _wrap_SwigPyIterator_advance, METH_O, "" },
  { "__eq__", _wrap_SwigPyIterator___eq__, METH_O, "" },
  { "__ne__", _wrap_SwigPyIterator___ne__, METH_O, "" },
  { "__iadd__", _wrap_SwigPyIterator___iadd__, METH_O, "" },
  { "__isub__", _wrap_SwigPyIterator___isub__, METH_O, "" },
  { "__add__", _wrap_SwigPyIterator___add__, METH_O, "" },
  { "__sub__", _wrap_SwigPyIterator___sub__, METH_VARARGS, "" },
  { NULL, NULL, 0, NULL } /* Sentinel */
};

static PyHeapTypeObject SwigPyBuiltin__swig__SwigPyIterator_type = {
  {
#if PY_VERSION_HEX >= 0x03000000
    PyVarObject_HEAD_INIT(NULL, 0)
#else
    PyObject_HEAD_INIT(NULL)
    0,                                        /* ob_size */
#endif
    "fr_drv_ngx.SwigPyIterator",              /* tp_name */
    sizeof(SwigPyObject),                     /* tp_basicsize */
    0,                                        /* tp_itemsize */
    _wrap_delete_SwigPyIterator_destructor_closure,               /* tp_dealloc */
    (printfunc) 0,                            /* tp_print */
    (getattrfunc) 0,                          /* tp_getattr */
    (setattrfunc) 0,                          /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
    0,                                        /* tp_compare */
#else
    (cmpfunc) 0,                              /* tp_compare */
#endif
    (reprfunc) 0,                             /* tp_repr */
    &SwigPyBuiltin__swig__SwigPyIterator_type.as_number,          /* tp_as_number */
    &SwigPyBuiltin__swig__SwigPyIterator_type.as_sequence,        /* tp_as_sequence */
    &SwigPyBuiltin__swig__SwigPyIterator_type.as_mapping,         /* tp_as_mapping */
    SwigPyObject_hash,                        /* tp_hash */
    (ternaryfunc) 0,                          /* tp_call */
    (reprfunc) 0,                             /* tp_str */
    (getattrofunc) 0,                         /* tp_getattro */
    (setattrofunc) 0,                         /* tp_setattro */
    &SwigPyBuiltin__swig__SwigPyIterator_type.as_buffer,          /* tp_as_buffer */
#if PY_VERSION_HEX >= 0x03000000
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE,   /* tp_flags */
#else
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_CHECKTYPES, /* tp_flags */
#endif
    "swig::SwigPyIterator",                   /* tp_doc */
    (traverseproc) 0,                         /* tp_traverse */
    (inquiry) 0,                              /* tp_clear */
    SwigPyBuiltin__swig__SwigPyIterator_richcompare,              /* tp_richcompare */
    0,                                        /* tp_weaklistoffset */
    &swig::make_output_iterator_builtin,      /* tp_iter */
    _wrap_SwigPyIterator___next___iternextfunc_closure,           /* tp_iternext */
    SwigPyBuiltin__swig__SwigPyIterator_methods,                  /* tp_methods */
    0,                                        /* tp_members */
    SwigPyBuiltin__swig__SwigPyIterator_getset,                   /* tp_getset */
    0,                                        /* tp_base */
    0,                                        /* tp_dict */
    (descrgetfunc) 0,                         /* tp_descr_get */
    (descrsetfunc) 0,                         /* tp_descr_set */
    offsetof(SwigPyObject, dict),             /* tp_dictoffset */
    SwigPyBuiltin_BadInit,                    /* tp_init */
    (allocfunc) 0,                            /* tp_alloc */
    (newfunc) 0,                              /* tp_new */
    (freefunc) 0,                             /* tp_free */
    (inquiry) 0,                              /* tp_is_gc */
    (PyObject *) 0,                           /* tp_bases */
    (PyObject *) 0,                           /* tp_mro */
    (PyObject *) 0,                           /* tp_cache */
    (PyObject *) 0,                           /* tp_subclasses */
    (PyObject *) 0,                           /* tp_weaklist */
    (destructor) 0,                           /* tp_del */
    (int) 0,                                  /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
    (destructor) 0,                           /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
    (vectorcallfunc) 0,                       /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
    0,                                        /* tp_print */
#endif
#ifdef COUNT_ALLOCS
    (Py_ssize_t) 0,                           /* tp_allocs */
    (Py_ssize_t) 0,                           /* tp_frees */
    (Py_ssize_t) 0,                           /* tp_maxalloc */
    0,                                        /* tp_prev */
    0,                                        /* tp_next */
#endif
  },
#if PY_VERSION_HEX >= 0x03050000
  {
    (unaryfunc) 0,                            /* am_await */
    (unaryfunc) 0,                            /* am_aiter */
    (unaryfunc) 0,                            /* am_anext */
  },
#endif
  {
    _wrap_SwigPyIterator___add__,             /* nb_add */
    _wrap_SwigPyIterator___sub___binaryfunc_closure,              /* nb_subtract */
    (binaryfunc) 0,                           /* nb_multiply */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc) 0,                           /* nb_divide */
#endif
    (binaryfunc) 0,                           /* nb_remainder */
    (binaryfunc) 0,                           /* nb_divmod */
    (ternaryfunc) 0,                          /* nb_power */
    (unaryfunc) 0,                            /* nb_negative */
    (unaryfunc) 0,                            /* nb_positive */
    (unaryfunc) 0,                            /* nb_absolute */
    (inquiry) 0,                              /* nb_nonzero */
    (unaryfunc) 0,                            /* nb_invert */
    (binaryfunc) 0,                           /* nb_lshift */
    (binaryfunc) 0,                           /* nb_rshift */
    (binaryfunc) 0,                           /* nb_and */
    (binaryfunc) 0,                           /* nb_xor */
    (binaryfunc) 0,                           /* nb_or */
#if PY_VERSION_HEX < 0x03000000
    (coercion) 0,                             /* nb_coerce */
#endif
    (unaryfunc) 0,                            /* nb_int */
#if PY_VERSION_HEX >= 0x03000000
    (void *) 0,                               /* nb_reserved */
#else
    (unaryfunc) 0,                            /* nb_long */
#endif
    (unaryfunc) 0,                            /* nb_float */
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc) 0,                            /* nb_oct */
    (unaryfunc) 0,                            /* nb_hex */
#endif
    _wrap_SwigPyIterator___iadd__,            /* nb_inplace_add */
    _wrap_SwigPyIterator___isub__,            /* nb_inplace_subtract */
    (binaryfunc) 0,                           /* nb_inplace_multiply */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc) 0,                           /* nb_inplace_divide */
#endif
    (binaryfunc) 0,                           /* nb_inplace_remainder */
    (ternaryfunc) 0,                          /* nb_inplace_power */
    (binaryfunc) 0,                           /* nb_inplace_lshift */
    (binaryfunc) 0,                           /* nb_inplace_rshift */
    (binaryfunc) 0,                           /* nb_inplace_and */
    (binaryfunc) 0,                           /* nb_inplace_xor */
    (binaryfunc) 0,                           /* nb_inplace_or */
    (binaryfunc) 0,                           /* nb_floor_divide */
    (binaryfunc) 0,                           /* nb_true_divide */
    (binaryfunc) 0,                           /* nb_inplace_floor_divide */
    (binaryfunc) 0,                           /* nb_inplace_true_divide */
    (unaryfunc) 0,                            /* nb_index */
#if PY_VERSION_HEX >= 0x03050000
    (binaryfunc) 0,                           /* nb_matrix_multiply */
    (binaryfunc) 0,                           /* nb_inplace_matrix_multiply */
#endif
  },
  {
    (lenfunc) 0,                              /* mp_length */
    (binaryfunc) 0,                           /* mp_subscript */
    (objobjargproc) 0,                        /* mp_ass_subscript */
  },
  {
    (lenfunc) 0,                              /* sq_length */
    (binaryfunc) 0,                           /* sq_concat */
    (ssizeargfunc) 0,                         /* sq_repeat */
    (ssizeargfunc) 0,                         /* sq_item */
#if PY_VERSION_HEX >= 0x03000000
    (void *) 0,                               /* was_sq_slice */
#else
    (ssizessizeargfunc) 0,                    /* sq_slice */
#endif
    (ssizeobjargproc) 0,                      /* sq_ass_item */
#if PY_VERSION_HEX >= 0x03000000
    (void *) 0,                               /* was_sq_ass_slice */
#else
    (ssizessizeobjargproc) 0,                 /* sq_ass_slice */
#endif
    (objobjproc) 0,                           /* sq_contains */
    (binaryfunc) 0,                           /* sq_inplace_concat */
    (ssizeargfunc) 0,                         /* sq_inplace_repeat */
  },
  {
#if PY_VERSION_HEX < 0x03000000
    (readbufferproc) 0,                       /* bf_getreadbuffer */
    (writebufferproc) 0,                      /* bf_getwritebuffer */
    (segcountproc) 0,                         /* bf_getsegcount */
    (charbufferproc) 0,                       /* bf_getcharbuffer */
#endif
    (getbufferproc) 0,                        /* bf_getbuffer */
    (releasebufferproc) 0,                    /* bf_releasebuffer */
  },
    (PyObject *) 0,                           /* ht_name */
    (PyObject *) 0,                           /* ht_slots */
#if PY_VERSION_HEX >= 0x03030000
    (PyObject *) 0,                           /* ht_qualname */
    0,                                        /* ht_cached_keys */
#endif
};

SWIGINTERN SwigPyClientData SwigPyBuiltin__swig__SwigPyIterator_clientdata = {0, 0, 0, 0, 0, 0, (PyTypeObject *)&SwigPyBuiltin__swig__SwigPyIterator_type};

static SwigPyGetSet VectorOfBytes___dict___getset = { SwigPyObject_get___dict__, 0 };
SWIGINTERN PyGetSetDef SwigPyBuiltin__std__vectorT_uint8_t_t_getset[] = {
    { (char *)"__dict__", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &VectorOfBytes___dict___getset },
    { NULL, NULL, NULL, NULL, NULL } /* Sentinel */
};

SWIGINTERN PyObject *
SwigPyBuiltin__std__vectorT_uint8_t_t_richcompare(PyObject *self, PyObject *other, int op) {
  PyObject *result = NULL;
  if (!result) {
    if (SwigPyObject_Check(self) && SwigPyObject_Check(other)) {
      result = SwigPyObject_richcompare((SwigPyObject *)self, (SwigPyObject *)other, op);
    } else {
      result = Py_NotImplemented;
      Py_INCREF(result);
    }
  }
  return result;
}

SWIGINTERN PyMethodDef SwigPyBuiltin__std__vectorT_uint8_t_t_methods[] = {
  { "iterator", _wrap_VectorOfBytes_iterator, METH_NOARGS, "" },
  { "__nonzero__", _wrap_VectorOfBytes___nonzero__, METH_NOARGS, "" },
  { "__bool__", _wrap_VectorOfBytes___bool__, METH_NOARGS, "" },
  { "__len__", _wrap_VectorOfBytes___len__, METH_NOARGS, "" },
  { "__getslice__", _wrap_VectorOfBytes___getslice__, METH_VARARGS, "" },
  { "__setslice__", _wrap_VectorOfBytes___setslice__, METH_VARARGS, "" },
  { "__delslice__", _wrap_VectorOfBytes___delslice__, METH_VARARGS, "" },
  { "__delitem__", _wrap_VectorOfBytes___delitem__, METH_VARARGS, "" },
  { "__getitem__", _wrap_VectorOfBytes___getitem__, METH_VARARGS, "" },
  { "__setitem__", _wrap_VectorOfBytes___setitem__, METH_VARARGS, "" },
  { "pop", _wrap_VectorOfBytes_pop, METH_NOARGS, "" },
  { "append", _wrap_VectorOfBytes_append, METH_O, "" },
  { "empty", _wrap_VectorOfBytes_empty, METH_NOARGS, "" },
  { "size", _wrap_VectorOfBytes_size, METH_NOARGS, "" },
  { "swap", _wrap_VectorOfBytes_swap, METH_O, "" },
  { "begin", _wrap_VectorOfBytes_begin, METH_NOARGS, "" },
  { "end", _wrap_VectorOfBytes_end, METH_NOARGS, "" },
  { "rbegin", _wrap_VectorOfBytes_rbegin, METH_NOARGS, "" },
  { "rend", _wrap_VectorOfBytes_rend, METH_NOARGS, "" },
  { "clear", _wrap_VectorOfBytes_clear, METH_NOARGS, "" },
  { "get_allocator", _wrap_VectorOfBytes_get_allocator, METH_NOARGS, "" },
  { "pop_back", _wrap_VectorOfBytes_pop_back, METH_NOARGS, "" },
  { "resize", _wrap_VectorOfBytes_resize, METH_VARARGS, "" },
  { "erase", _wrap_VectorOfBytes_erase, METH_VARARGS, "" },
  { "push_back", _wrap_VectorOfBytes_push_back, METH_O, "" },
  { "front", _wrap_VectorOfBytes_front, METH_NOARGS, "" },
  { "back", _wrap_VectorOfBytes_back, METH_NOARGS, "" },
  { "assign", _wrap_VectorOfBytes_assign, METH_VARARGS, "" },
  { "insert", _wrap_VectorOfBytes_insert, METH_VARARGS, "" },
  { "reserve", _wrap_VectorOfBytes_reserve, METH_O, "" },
  { "capacity", _wrap_VectorOfBytes_capacity, METH_NOARGS, "" },
  { NULL, NULL, 0, NULL } /* Sentinel */
};

static PyHeapTypeObject SwigPyBuiltin__std__vectorT_uint8_t_t_type = {
  {
#if PY_VERSION_HEX >= 0x03000000
    PyVarObject_HEAD_INIT(NULL, 0)
#else
    PyObject_HEAD_INIT(NULL)
    0,                                        /* ob_size */
#endif
    "fr_drv_ngx.VectorOfBytes",               /* tp_name */
    sizeof(SwigPyObject),                     /* tp_basicsize */
    0,                                        /* tp_itemsize */
    _wrap_delete_VectorOfBytes_destructor_closure,                /* tp_dealloc */
    (printfunc) 0,                            /* tp_print */
    (getattrfunc) 0,                          /* tp_getattr */
    (setattrfunc) 0,                          /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
    0,                                        /* tp_compare */
#else
    (cmpfunc) 0,                              /* tp_compare */
#endif
    (reprfunc) 0,                             /* tp_repr */
    &SwigPyBuiltin__std__vectorT_uint8_t_t_type.as_number,        /* tp_as_number */
    &SwigPyBuiltin__std__vectorT_uint8_t_t_type.as_sequence,      /* tp_as_sequence */
    &SwigPyBuiltin__std__vectorT_uint8_t_t_type.as_mapping,       /* tp_as_mapping */
    SwigPyObject_hash,                        /* tp_hash */
    (ternaryfunc) 0,                          /* tp_call */
    (reprfunc) 0,                             /* tp_str */
    (getattrofunc) 0,                         /* tp_getattro */
    (setattrofunc) 0,                         /* tp_setattro */
    &SwigPyBuiltin__std__vectorT_uint8_t_t_type.as_buffer,        /* tp_as_buffer */
#if PY_VERSION_HEX >= 0x03000000
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE,   /* tp_flags */
#else
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_CHECKTYPES, /* tp_flags */
#endif
    "std::vector< uint8_t >",                 /* tp_doc */
    (traverseproc) 0,                         /* tp_traverse */
    (inquiry) 0,                              /* tp_clear */
    SwigPyBuiltin__std__vectorT_uint8_t_t_richcompare,            /* tp_richcompare */
    0,                                        /* tp_weaklistoffset */
    _wrap_VectorOfBytes_iterator_getiterfunc_closure,             /* tp_iter */
    (iternextfunc) 0,                         /* tp_iternext */
    SwigPyBuiltin__std__vectorT_uint8_t_t_methods,                /* tp_methods */
    0,                                        /* tp_members */
    SwigPyBuiltin__std__vectorT_uint8_t_t_getset,                 /* tp_getset */
    0,                                        /* tp_base */
    0,                                        /* tp_dict */
    (descrgetfunc) 0,                         /* tp_descr_get */
    (descrsetfunc) 0,                         /* tp_descr_set */
    offsetof(SwigPyObject, dict),             /* tp_dictoffset */
    _wrap_new_VectorOfBytes,                  /* tp_init */
    (allocfunc) 0,                            /* tp_alloc */
    (newfunc) 0,                              /* tp_new */
    (freefunc) 0,                             /* tp_free */
    (inquiry) 0,                              /* tp_is_gc */
    (PyObject *) 0,                           /* tp_bases */
    (PyObject *) 0,                           /* tp_mro */
    (PyObject *) 0,                           /* tp_cache */
    (PyObject *) 0,                           /* tp_subclasses */
    (PyObject *) 0,                           /* tp_weaklist */
    (destructor) 0,                           /* tp_del */
    (int) 0,                                  /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
    (destructor) 0,                           /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
    (vectorcallfunc) 0,                       /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
    0,                                        /* tp_print */
#endif
#ifdef COUNT_ALLOCS
    (Py_ssize_t) 0,                           /* tp_allocs */
    (Py_ssize_t) 0,                           /* tp_frees */
    (Py_ssize_t) 0,                           /* tp_maxalloc */
    0,                                        /* tp_prev */
    0,                                        /* tp_next */
#endif
  },
#if PY_VERSION_HEX >= 0x03050000
  {
    (unaryfunc) 0,                            /* am_await */
    (unaryfunc) 0,                            /* am_aiter */
    (unaryfunc) 0,                            /* am_anext */
  },
#endif
  {
    (binaryfunc) 0,                           /* nb_add */
    (binaryfunc) 0,                           /* nb_subtract */
    (binaryfunc) 0,                           /* nb_multiply */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc) 0,                           /* nb_divide */
#endif
    (binaryfunc) 0,                           /* nb_remainder */
    (binaryfunc) 0,                           /* nb_divmod */
    (ternaryfunc) 0,                          /* nb_power */
    (unaryfunc) 0,                            /* nb_negative */
    (unaryfunc) 0,                            /* nb_positive */
    (unaryfunc) 0,                            /* nb_absolute */
    _wrap_VectorOfBytes___nonzero___inquiry_closure,              /* nb_nonzero */
    (unaryfunc) 0,                            /* nb_invert */
    (binaryfunc) 0,                           /* nb_lshift */
    (binaryfunc) 0,                           /* nb_rshift */
    (binaryfunc) 0,                           /* nb_and */
    (binaryfunc) 0,                           /* nb_xor */
    (binaryfunc) 0,                           /* nb_or */
#if PY_VERSION_HEX < 0x03000000
    (coercion) 0,                             /* nb_coerce */
#endif
    (unaryfunc) 0,                            /* nb_int */
#if PY_VERSION_HEX >= 0x03000000
    (void *) 0,                               /* nb_reserved */
#else
    (unaryfunc) 0,                            /* nb_long */
#endif
    (unaryfunc) 0,                            /* nb_float */
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc) 0,                            /* nb_oct */
    (unaryfunc) 0,                            /* nb_hex */
#endif
    (binaryfunc) 0,                           /* nb_inplace_add */
    (binaryfunc) 0,                           /* nb_inplace_subtract */
    (binaryfunc) 0,                           /* nb_inplace_multiply */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc) 0,                           /* nb_inplace_divide */
#endif
    (binaryfunc) 0,                           /* nb_inplace_remainder */
    (ternaryfunc) 0,                          /* nb_inplace_power */
    (binaryfunc) 0,                           /* nb_inplace_lshift */
    (binaryfunc) 0,                           /* nb_inplace_rshift */
    (binaryfunc) 0,                           /* nb_inplace_and */
    (binaryfunc) 0,                           /* nb_inplace_xor */
    (binaryfunc) 0,                           /* nb_inplace_or */
    (binaryfunc) 0,                           /* nb_floor_divide */
    (binaryfunc) 0,                           /* nb_true_divide */
    (binaryfunc) 0,                           /* nb_inplace_floor_divide */
    (binaryfunc) 0,                           /* nb_inplace_true_divide */
    (unaryfunc) 0,                            /* nb_index */
#if PY_VERSION_HEX >= 0x03050000
    (binaryfunc) 0,                           /* nb_matrix_multiply */
    (binaryfunc) 0,                           /* nb_inplace_matrix_multiply */
#endif
  },
  {
    (lenfunc) 0,                              /* mp_length */
    _wrap_VectorOfBytes___getitem___binaryfunc_closure,           /* mp_subscript */
    _wrap_VectorOfBytes___setitem___objobjargproc_closure,        /* mp_ass_subscript */
  },
  {
    _wrap_VectorOfBytes___len___lenfunc_closure,                  /* sq_length */
    (binaryfunc) 0,                           /* sq_concat */
    (ssizeargfunc) 0,                         /* sq_repeat */
    (ssizeargfunc) 0,                         /* sq_item */
#if PY_VERSION_HEX >= 0x03000000
    (void *) 0,                               /* was_sq_slice */
#else
    (ssizessizeargfunc) 0,                    /* sq_slice */
#endif
    (ssizeobjargproc) 0,                      /* sq_ass_item */
#if PY_VERSION_HEX >= 0x03000000
    (void *) 0,                               /* was_sq_ass_slice */
#else
    (ssizessizeobjargproc) 0,                 /* sq_ass_slice */
#endif
    (objobjproc) 0,                           /* sq_contains */
    (binaryfunc) 0,                           /* sq_inplace_concat */
    (ssizeargfunc) 0,                         /* sq_inplace_repeat */
  },
  {
#if PY_VERSION_HEX < 0x03000000
    (readbufferproc) 0,                       /* bf_getreadbuffer */
    (writebufferproc) 0,                      /* bf_getwritebuffer */
    (segcountproc) 0,                         /* bf_getsegcount */
    (charbufferproc) 0,                       /* bf_getcharbuffer */
#endif
    (getbufferproc) 0,                        /* bf_getbuffer */
    (releasebufferproc) 0,                    /* bf_releasebuffer */
  },
    (PyObject *) 0,                           /* ht_name */
    (PyObject *) 0,                           /* ht_slots */
#if PY_VERSION_HEX >= 0x03030000
    (PyObject *) 0,                           /* ht_qualname */
    0,                                        /* ht_cached_keys */
#endif
};

SWIGINTERN SwigPyClientData SwigPyBuiltin__std__vectorT_uint8_t_t_clientdata = {0, 0, 0, 0, 0, 0, (PyTypeObject *)&SwigPyBuiltin__std__vectorT_uint8_t_t_type};

static SwigPyGetSet classic_interface_CopyType_getset = { _wrap_classic_interface_CopyType_get, _wrap_classic_interface_CopyType_set };
static SwigPyGetSet classic_interface_BarCode_getset = { _wrap_classic_interface_BarCode_get, _wrap_classic_interface_BarCode_set };
static SwigPyGetSet classic_interface_Time_getset = { _wrap_classic_interface_Time_get, _wrap_classic_interface_Time_set };
static SwigPyGetSet classic_interface_ECRTime_getset = { _wrap_classic_interface_ECRTime_get, _wrap_classic_interface_ECRTime_set };
static SwigPyGetSet classic_interface_BanknoteCount_getset = { _wrap_classic_interface_BanknoteCount_get, 0 };
static SwigPyGetSet classic_interface_ccHeaderLineCount_getset = { _wrap_classic_interface_ccHeaderLineCount_get, _wrap_classic_interface_ccHeaderLineCount_set };
static SwigPyGetSet classic_interface_FeedLineCount_getset = { _wrap_classic_interface_FeedLineCount_get, _wrap_classic_interface_FeedLineCount_set };
static SwigPyGetSet classic_interface_LogMaxFileCount_getset = { _wrap_classic_interface_LogMaxFileCount_get, _wrap_classic_interface_LogMaxFileCount_set };
static SwigPyGetSet classic_interface_RecordCount_getset = { _wrap_classic_interface_RecordCount_get, 0 };
static SwigPyGetSet classic_interface_CommandCount_getset = { _wrap_classic_interface_CommandCount_get, 0 };
static SwigPyGetSet classic_interface_LDBaudrate_getset = { _wrap_classic_interface_LDBaudrate_get, _wrap_classic_interface_LDBaudrate_set };
static SwigPyGetSet classic_interface_EKLZFont_getset = { _wrap_classic_interface_EKLZFont_get, _wrap_classic_interface_EKLZFont_set };
static SwigPyGetSet classic_interface_QuantityFormat_getset = { _wrap_classic_interface_QuantityFormat_get, _wrap_classic_interface_QuantityFormat_set };
static SwigPyGetSet classic_interface_UDescription_getset = { _wrap_classic_interface_UDescription_get, 0 };
static SwigPyGetSet classic_interface_TagDescription_getset = { _wrap_classic_interface_TagDescription_get, _wrap_classic_interface_TagDescription_set };
static SwigPyGetSet classic_interface_ResultCodeDescription_getset = { _wrap_classic_interface_ResultCodeDescription_get, 0 };
static SwigPyGetSet classic_interface_RequestErrorDescription_getset = { _wrap_classic_interface_RequestErrorDescription_get, _wrap_classic_interface_RequestErrorDescription_set };
static SwigPyGetSet classic_interface_ErrorDescription_getset = { _wrap_classic_interface_ErrorDescription_get, 0 };
static SwigPyGetSet classic_interface_ECRModeDescription_getset = { _wrap_classic_interface_ECRModeDescription_get, 0 };
static SwigPyGetSet classic_interface_ECRAdvancedModeDescription_getset = { _wrap_classic_interface_ECRAdvancedModeDescription_get, 0 };
static SwigPyGetSet classic_interface_DeviceCodeDescription_getset = { _wrap_classic_interface_DeviceCodeDescription_get, 0 };
static SwigPyGetSet classic_interface_ModelParamDescription_getset = { _wrap_classic_interface_ModelParamDescription_get, 0 };
static SwigPyGetSet classic_interface_QuantityFont_getset = { _wrap_classic_interface_QuantityFont_get, _wrap_classic_interface_QuantityFont_set };
static SwigPyGetSet classic_interface_IBMSessionMin_getset = { _wrap_classic_interface_IBMSessionMin_get, 0 };
static SwigPyGetSet classic_interface_Poll1_getset = { _wrap_classic_interface_Poll1_get, 0 };
static SwigPyGetSet classic_interface_Poll2_getset = { _wrap_classic_interface_Poll2_get, 0 };
static SwigPyGetSet classic_interface_SlipStringInterval_getset = { _wrap_classic_interface_SlipStringInterval_get, _wrap_classic_interface_SlipStringInterval_set };
static SwigPyGetSet classic_interface_JournalRowCount_getset = { _wrap_classic_interface_JournalRowCount_get, 0 };
static SwigPyGetSet classic_interface_PrintingAlignment_getset = { _wrap_classic_interface_PrintingAlignment_get, _wrap_classic_interface_PrintingAlignment_set };
static SwigPyGetSet classic_interface_BarcodeAlignment_getset = { _wrap_classic_interface_BarcodeAlignment_get, _wrap_classic_interface_BarcodeAlignment_set };
static SwigPyGetSet classic_interface_FNImplementation_getset = { _wrap_classic_interface_FNImplementation_get, _wrap_classic_interface_FNImplementation_set };
static SwigPyGetSet classic_interface_FinishDocumentMode_getset = { _wrap_classic_interface_FinishDocumentMode_get, _wrap_classic_interface_FinishDocumentMode_set };
static SwigPyGetSet classic_interface_UCodePage_getset = { _wrap_classic_interface_UCodePage_get, 0 };
static SwigPyGetSet classic_interface_CodePage_getset = { _wrap_classic_interface_CodePage_get, _wrap_classic_interface_CodePage_set };
static SwigPyGetSet classic_interface_IBMSessionHour_getset = { _wrap_classic_interface_IBMSessionHour_get, 0 };
static SwigPyGetSet classic_interface_FreeRegistration_getset = { _wrap_classic_interface_FreeRegistration_get, 0 };
static SwigPyGetSet classic_interface_RegSaleRec_getset = { _wrap_classic_interface_RegSaleRec_get, 0 };
static SwigPyGetSet classic_interface_CustomerCode_getset = { _wrap_classic_interface_CustomerCode_get, _wrap_classic_interface_CustomerCode_set };
static SwigPyGetSet classic_interface_AnswerCode_getset = { _wrap_classic_interface_AnswerCode_get, _wrap_classic_interface_AnswerCode_set };
static SwigPyGetSet classic_interface_NotificationCount_getset = { _wrap_classic_interface_NotificationCount_get, _wrap_classic_interface_NotificationCount_set };
static SwigPyGetSet classic_interface_MCRealizationCount_getset = { _wrap_classic_interface_MCRealizationCount_get, _wrap_classic_interface_MCRealizationCount_set };
static SwigPyGetSet classic_interface_PrepareActivizationRemainCount_getset = { _wrap_classic_interface_PrepareActivizationRemainCount_get, _wrap_classic_interface_PrepareActivizationRemainCount_set };
static SwigPyGetSet classic_interface_KPKFont_getset = { _wrap_classic_interface_KPKFont_get, _wrap_classic_interface_KPKFont_set };
static SwigPyGetSet classic_interface_ModelParamCount_getset = { _wrap_classic_interface_ModelParamCount_get, 0 };
static SwigPyGetSet classic_interface_PropertyName_getset = { _wrap_classic_interface_PropertyName_get, _wrap_classic_interface_PropertyName_set };
static SwigPyGetSet classic_interface_IsFM24HoursOver_getset = { _wrap_classic_interface_IsFM24HoursOver_get, 0 };
static SwigPyGetSet classic_interface_JournalText_getset = { _wrap_classic_interface_JournalText_get, 0 };
static SwigPyGetSet classic_interface_FMOverflow_getset = { _wrap_classic_interface_FMOverflow_get, 0 };
static SwigPyGetSet classic_interface_IsEKLZOverflow_getset = { _wrap_classic_interface_IsEKLZOverflow_get, 0 };
static SwigPyGetSet classic_interface_ECRAdvancedMode_getset = { _wrap_classic_interface_ECRAdvancedMode_get, 0 };
static SwigPyGetSet classic_interface_RandomSequence_getset = { _wrap_classic_interface_RandomSequence_get, _wrap_classic_interface_RandomSequence_set };
static SwigPyGetSet classic_interface_MessageCount_getset = { _wrap_classic_interface_MessageCount_get, _wrap_classic_interface_MessageCount_set };
static SwigPyGetSet classic_interface_MCCheckResultSavedCount_getset = { _wrap_classic_interface_MCCheckResultSavedCount_get, _wrap_classic_interface_MCCheckResultSavedCount_set };
static SwigPyGetSet classic_interface_LDCount_getset = { _wrap_classic_interface_LDCount_get, 0 };
static SwigPyGetSet classic_interface_DiscountValue_getset = { _wrap_classic_interface_DiscountValue_get, _wrap_classic_interface_DiscountValue_set };
static SwigPyGetSet classic_interface_DocumentSize_getset = { _wrap_classic_interface_DocumentSize_get, _wrap_classic_interface_DocumentSize_set };
static SwigPyGetSet classic_interface_Date_getset = { _wrap_classic_interface_Date_get, _wrap_classic_interface_Date_set };
static SwigPyGetSet classic_interface_PrintBufferFormat_getset = { _wrap_classic_interface_PrintBufferFormat_get, _wrap_classic_interface_PrintBufferFormat_set };
static SwigPyGetSet classic_interface_UseIPAddress_getset = { _wrap_classic_interface_UseIPAddress_get, _wrap_classic_interface_UseIPAddress_set };
static SwigPyGetSet classic_interface_IPAddress_getset = { _wrap_classic_interface_IPAddress_get, _wrap_classic_interface_IPAddress_set };
static SwigPyGetSet classic_interface_LDIPAddress_getset = { _wrap_classic_interface_LDIPAddress_get, _wrap_classic_interface_LDIPAddress_set };
static SwigPyGetSet classic_interface_LDUseIPAddress_getset = { _wrap_classic_interface_LDUseIPAddress_get, _wrap_classic_interface_LDUseIPAddress_set };
static SwigPyGetSet classic_interface_FieldSize_getset = { _wrap_classic_interface_FieldSize_get, 0 };
static SwigPyGetSet classic_interface_CustomerEmail_getset = { _wrap_classic_interface_CustomerEmail_get, _wrap_classic_interface_CustomerEmail_set };
static SwigPyGetSet classic_interface_ECRDate_getset = { _wrap_classic_interface_ECRDate_get, _wrap_classic_interface_ECRDate_set };
static SwigPyGetSet classic_interface_VertScale_getset = { _wrap_classic_interface_VertScale_get, _wrap_classic_interface_VertScale_set };
static SwigPyGetSet classic_interface_UseTaxDiscountBel_getset = { _wrap_classic_interface_UseTaxDiscountBel_get, _wrap_classic_interface_UseTaxDiscountBel_set };
static SwigPyGetSet classic_interface_BlockType_getset = { _wrap_classic_interface_BlockType_get, _wrap_classic_interface_BlockType_set };
static SwigPyGetSet classic_interface_CheckType_getset = { _wrap_classic_interface_CheckType_get, _wrap_classic_interface_CheckType_set };
static SwigPyGetSet classic_interface_OPRequisiteValue_getset = { _wrap_classic_interface_OPRequisiteValue_get, _wrap_classic_interface_OPRequisiteValue_set };
static SwigPyGetSet classic_interface_AttributeValue_getset = { _wrap_classic_interface_AttributeValue_get, _wrap_classic_interface_AttributeValue_set };
static SwigPyGetSet classic_interface_UserAttributeValue_getset = { _wrap_classic_interface_UserAttributeValue_get, _wrap_classic_interface_UserAttributeValue_set };
static SwigPyGetSet classic_interface_TransmitQueueSize_getset = { _wrap_classic_interface_TransmitQueueSize_get, 0 };
static SwigPyGetSet classic_interface_OFDTicketReceived_getset = { _wrap_classic_interface_OFDTicketReceived_get, _wrap_classic_interface_OFDTicketReceived_set };
static SwigPyGetSet classic_interface_StringQuantityInOperation_getset = { _wrap_classic_interface_StringQuantityInOperation_get, _wrap_classic_interface_StringQuantityInOperation_set };
static SwigPyGetSet classic_interface_TextBlock_getset = { _wrap_classic_interface_TextBlock_get, _wrap_classic_interface_TextBlock_set };
static SwigPyGetSet classic_interface_CommandCode_getset = { _wrap_classic_interface_CommandCode_get, 0 };
static SwigPyGetSet classic_interface_ProtocolType_getset = { _wrap_classic_interface_ProtocolType_get, _wrap_classic_interface_ProtocolType_set };
static SwigPyGetSet classic_interface_LDProtocolType_getset = { _wrap_classic_interface_LDProtocolType_get, _wrap_classic_interface_LDProtocolType_set };
static SwigPyGetSet classic_interface_ResultCode_getset = { _wrap_classic_interface_ResultCode_get, 0 };
static SwigPyGetSet classic_interface_EKLZResultCode_getset = { _wrap_classic_interface_EKLZResultCode_get, 0 };
static SwigPyGetSet classic_interface_FMResultCode_getset = { _wrap_classic_interface_FMResultCode_get, 0 };
static SwigPyGetSet classic_interface_LineData2_getset = { _wrap_classic_interface_LineData2_get, _wrap_classic_interface_LineData2_set };
static SwigPyGetSet classic_interface_TotalFont_getset = { _wrap_classic_interface_TotalFont_get, _wrap_classic_interface_TotalFont_set };
static SwigPyGetSet classic_interface_SubTotalFont_getset = { _wrap_classic_interface_SubTotalFont_get, _wrap_classic_interface_SubTotalFont_set };
static SwigPyGetSet classic_interface_KMServerCheckingStatus_getset = { _wrap_classic_interface_KMServerCheckingStatus_get, _wrap_classic_interface_KMServerCheckingStatus_set };
static SwigPyGetSet classic_interface_ItemStatus_getset = { _wrap_classic_interface_ItemStatus_get, _wrap_classic_interface_ItemStatus_set };
static SwigPyGetSet classic_interface_MCCheckStatus_getset = { _wrap_classic_interface_MCCheckStatus_get, _wrap_classic_interface_MCCheckStatus_set };
static SwigPyGetSet classic_interface_SKNOStatus_getset = { _wrap_classic_interface_SKNOStatus_get, _wrap_classic_interface_SKNOStatus_set };
static SwigPyGetSet classic_interface_ECRModeStatus_getset = { _wrap_classic_interface_ECRModeStatus_get, 0 };
static SwigPyGetSet classic_interface_InfoExchangeStatus_getset = { _wrap_classic_interface_InfoExchangeStatus_get, _wrap_classic_interface_InfoExchangeStatus_set };
static SwigPyGetSet classic_interface_ShowProgress_getset = { _wrap_classic_interface_ShowProgress_get, _wrap_classic_interface_ShowProgress_set };
static SwigPyGetSet classic_interface_MCOSUSign_getset = { _wrap_classic_interface_MCOSUSign_get, _wrap_classic_interface_MCOSUSign_set };
static SwigPyGetSet classic_interface_LogMaxFileSize_getset = { _wrap_classic_interface_LogMaxFileSize_get, _wrap_classic_interface_LogMaxFileSize_set };
static SwigPyGetSet classic_interface_Price_getset = { _wrap_classic_interface_Price_get, _wrap_classic_interface_Price_set };
static SwigPyGetSet classic_interface_PowerSourceVoltage_getset = { _wrap_classic_interface_PowerSourceVoltage_get, 0 };
static SwigPyGetSet classic_interface_BatteryVoltage_getset = { _wrap_classic_interface_BatteryVoltage_get, 0 };
static SwigPyGetSet classic_interface_MCStorageSize_getset = { _wrap_classic_interface_MCStorageSize_get, _wrap_classic_interface_MCStorageSize_set };
static SwigPyGetSet classic_interface_DiscountOnCheckFont_getset = { _wrap_classic_interface_DiscountOnCheckFont_get, _wrap_classic_interface_DiscountOnCheckFont_set };
static SwigPyGetSet classic_interface_ParameterValue_getset = { _wrap_classic_interface_ParameterValue_get, _wrap_classic_interface_ParameterValue_set };
static SwigPyGetSet classic_interface_HorizScale_getset = { _wrap_classic_interface_HorizScale_get, _wrap_classic_interface_HorizScale_set };
static SwigPyGetSet classic_interface_ExciseCode_getset = { _wrap_classic_interface_ExciseCode_get, _wrap_classic_interface_ExciseCode_set };
static SwigPyGetSet classic_interface_WareCode_getset = { _wrap_classic_interface_WareCode_get, _wrap_classic_interface_WareCode_set };
static SwigPyGetSet classic_interface_UseWareCode_getset = { _wrap_classic_interface_UseWareCode_get, _wrap_classic_interface_UseWareCode_set };
static SwigPyGetSet classic_interface_DataBlock_getset = { _wrap_classic_interface_DataBlock_get, 0 };
static SwigPyGetSet classic_interface_CashControlPort_getset = { _wrap_classic_interface_CashControlPort_get, _wrap_classic_interface_CashControlPort_set };
static SwigPyGetSet classic_interface_ModelParamValue_getset = { _wrap_classic_interface_ModelParamValue_get, 0 };
static SwigPyGetSet classic_interface_OPSystem_getset = { _wrap_classic_interface_OPSystem_get, _wrap_classic_interface_OPSystem_set };
static SwigPyGetSet classic_interface_EjectDirection_getset = { _wrap_classic_interface_EjectDirection_get, _wrap_classic_interface_EjectDirection_set };
static SwigPyGetSet classic_interface_CheckEJConnection_getset = { _wrap_classic_interface_CheckEJConnection_get, _wrap_classic_interface_CheckEJConnection_set };
static SwigPyGetSet classic_interface_CheckFMConnection_getset = { _wrap_classic_interface_CheckFMConnection_get, _wrap_classic_interface_CheckFMConnection_set };
static SwigPyGetSet classic_interface_IntervalValue_getset = { _wrap_classic_interface_IntervalValue_get, _wrap_classic_interface_IntervalValue_set };
static SwigPyGetSet classic_interface_KPKValue_getset = { _wrap_classic_interface_KPKValue_get, _wrap_classic_interface_KPKValue_set };
static SwigPyGetSet classic_interface_TagValueDateTime_getset = { _wrap_classic_interface_TagValueDateTime_get, _wrap_classic_interface_TagValueDateTime_set };
static SwigPyGetSet classic_interface_IBMSessionDateTime_getset = { _wrap_classic_interface_IBMSessionDateTime_get, 0 };
static SwigPyGetSet classic_interface_SlipStringIntervals_getset = { _wrap_classic_interface_SlipStringIntervals_get, _wrap_classic_interface_SlipStringIntervals_set };
static SwigPyGetSet classic_interface_SlipEqualStringIntervals_getset = { _wrap_classic_interface_SlipEqualStringIntervals_get, _wrap_classic_interface_SlipEqualStringIntervals_set };
static SwigPyGetSet classic_interface_ChargeValue_getset = { _wrap_classic_interface_ChargeValue_get, _wrap_classic_interface_ChargeValue_set };
static SwigPyGetSet classic_interface_CashAcceptorPollingMode_getset = { _wrap_classic_interface_CashAcceptorPollingMode_get, 0 };
static SwigPyGetSet classic_interface_CrptCheck_getset = { _wrap_classic_interface_CrptCheck_get, _wrap_classic_interface_CrptCheck_set };
static SwigPyGetSet classic_interface_TypeOfLastEntryFMEx_getset = { _wrap_classic_interface_TypeOfLastEntryFMEx_get, 0 };
static SwigPyGetSet classic_interface_Tax1_getset = { _wrap_classic_interface_Tax1_get, _wrap_classic_interface_Tax1_set };
static SwigPyGetSet classic_interface_Tax2_getset = { _wrap_classic_interface_Tax2_get, _wrap_classic_interface_Tax2_set };
static SwigPyGetSet classic_interface_DeviceCode_getset = { _wrap_classic_interface_DeviceCode_get, _wrap_classic_interface_DeviceCode_set };
static SwigPyGetSet classic_interface_Tax3_getset = { _wrap_classic_interface_Tax3_get, _wrap_classic_interface_Tax3_set };
static SwigPyGetSet classic_interface_Tax4_getset = { _wrap_classic_interface_Tax4_get, _wrap_classic_interface_Tax4_set };
static SwigPyGetSet classic_interface_DeclarativeOutput_getset = { _wrap_classic_interface_DeclarativeOutput_get, _wrap_classic_interface_DeclarativeOutput_set };
static SwigPyGetSet classic_interface_TimeStr_getset = { _wrap_classic_interface_TimeStr_get, _wrap_classic_interface_TimeStr_set };
static SwigPyGetSet classic_interface_LastKPKTimeStr_getset = { _wrap_classic_interface_LastKPKTimeStr_get, 0 };
static SwigPyGetSet classic_interface_ContentsOfOperationRegister_getset = { _wrap_classic_interface_ContentsOfOperationRegister_get, 0 };
static SwigPyGetSet classic_interface_ContentsOfCashRegister_getset = { _wrap_classic_interface_ContentsOfCashRegister_get, 0 };
static SwigPyGetSet classic_interface_CenterImage_getset = { _wrap_classic_interface_CenterImage_get, _wrap_classic_interface_CenterImage_set };
static SwigPyGetSet classic_interface_MCNotificationStatus_getset = { _wrap_classic_interface_MCNotificationStatus_get, _wrap_classic_interface_MCNotificationStatus_set };
static SwigPyGetSet classic_interface_TransmitStatus_getset = { _wrap_classic_interface_TransmitStatus_get, 0 };
static SwigPyGetSet classic_interface_OPTransactionStatus_getset = { _wrap_classic_interface_OPTransactionStatus_get, _wrap_classic_interface_OPTransactionStatus_set };
static SwigPyGetSet classic_interface_ECRMode8Status_getset = { _wrap_classic_interface_ECRMode8Status_get, 0 };
static SwigPyGetSet classic_interface_CapGetShortECRStatus_getset = { _wrap_classic_interface_CapGetShortECRStatus_get, 0 };
static SwigPyGetSet classic_interface_ActivizationStatus_getset = { _wrap_classic_interface_ActivizationStatus_get, _wrap_classic_interface_ActivizationStatus_set };
static SwigPyGetSet classic_interface_MFPStatus_getset = { _wrap_classic_interface_MFPStatus_get, _wrap_classic_interface_MFPStatus_set };
static SwigPyGetSet classic_interface_FNOSUSupportStatus_getset = { _wrap_classic_interface_FNOSUSupportStatus_get, _wrap_classic_interface_FNOSUSupportStatus_set };
static SwigPyGetSet classic_interface_SlipDocumentIsMoving_getset = { _wrap_classic_interface_SlipDocumentIsMoving_get, 0 };
static SwigPyGetSet classic_interface_TotalSumFont_getset = { _wrap_classic_interface_TotalSumFont_get, _wrap_classic_interface_TotalSumFont_set };
static SwigPyGetSet classic_interface_Tax4SumFont_getset = { _wrap_classic_interface_Tax4SumFont_get, _wrap_classic_interface_Tax4SumFont_set };
static SwigPyGetSet classic_interface_Tax3SumFont_getset = { _wrap_classic_interface_Tax3SumFont_get, _wrap_classic_interface_Tax3SumFont_set };
static SwigPyGetSet classic_interface_Tax2SumFont_getset = { _wrap_classic_interface_Tax2SumFont_get, _wrap_classic_interface_Tax2SumFont_set };
static SwigPyGetSet classic_interface_Tax1SumFont_getset = { _wrap_classic_interface_Tax1SumFont_get, _wrap_classic_interface_Tax1SumFont_set };
static SwigPyGetSet classic_interface_SubTotalSumFont_getset = { _wrap_classic_interface_SubTotalSumFont_get, _wrap_classic_interface_SubTotalSumFont_set };
static SwigPyGetSet classic_interface_DiscountOnCheckSumFont_getset = { _wrap_classic_interface_DiscountOnCheckSumFont_get, _wrap_classic_interface_DiscountOnCheckSumFont_set };
static SwigPyGetSet classic_interface_ChangeSumFont_getset = { _wrap_classic_interface_ChangeSumFont_get, _wrap_classic_interface_ChangeSumFont_set };
static SwigPyGetSet classic_interface_DivisionalQuantity_getset = { _wrap_classic_interface_DivisionalQuantity_get, _wrap_classic_interface_DivisionalQuantity_set };
static SwigPyGetSet classic_interface_StringQuantity_getset = { _wrap_classic_interface_StringQuantity_get, _wrap_classic_interface_StringQuantity_set };
static SwigPyGetSet classic_interface_Quantity_getset = { _wrap_classic_interface_Quantity_get, _wrap_classic_interface_Quantity_set };
static SwigPyGetSet classic_interface_FNLifeState_getset = { _wrap_classic_interface_FNLifeState_get, 0 };
static SwigPyGetSet classic_interface_RandomSequenceHex_getset = { _wrap_classic_interface_RandomSequenceHex_get, _wrap_classic_interface_RandomSequenceHex_set };
static SwigPyGetSet classic_interface_PaymentTypeSign_getset = { _wrap_classic_interface_PaymentTypeSign_get, _wrap_classic_interface_PaymentTypeSign_set };
static SwigPyGetSet classic_interface_InfoType_getset = { _wrap_classic_interface_InfoType_get, _wrap_classic_interface_InfoType_set };
static SwigPyGetSet classic_interface_FontHashHex_getset = { _wrap_classic_interface_FontHashHex_get, 0 };
static SwigPyGetSet classic_interface_OPTransactionType_getset = { _wrap_classic_interface_OPTransactionType_get, _wrap_classic_interface_OPTransactionType_set };
static SwigPyGetSet classic_interface_OperationType_getset = { _wrap_classic_interface_OperationType_get, _wrap_classic_interface_OperationType_set };
static SwigPyGetSet classic_interface_CorrectionType_getset = { _wrap_classic_interface_CorrectionType_get, _wrap_classic_interface_CorrectionType_set };
static SwigPyGetSet classic_interface_ConnectionType_getset = { _wrap_classic_interface_ConnectionType_get, _wrap_classic_interface_ConnectionType_set };
static SwigPyGetSet classic_interface_LDConnectionType_getset = { _wrap_classic_interface_LDConnectionType_get, _wrap_classic_interface_LDConnectionType_set };
static SwigPyGetSet classic_interface_SummFont_getset = { _wrap_classic_interface_SummFont_get, _wrap_classic_interface_SummFont_set };
static SwigPyGetSet classic_interface_CashControlProtocols_getset = { _wrap_classic_interface_CashControlProtocols_get, 0 };
static SwigPyGetSet classic_interface_FNDocumentData_getset = { _wrap_classic_interface_FNDocumentData_get, 0 };
static SwigPyGetSet classic_interface_FreeRecordInFM_getset = { _wrap_classic_interface_FreeRecordInFM_get, 0 };
static SwigPyGetSet classic_interface_IBMSessionMonth_getset = { _wrap_classic_interface_IBMSessionMonth_get, 0 };
static SwigPyGetSet classic_interface_ECRFlags_getset = { _wrap_classic_interface_ECRFlags_get, 0 };
static SwigPyGetSet classic_interface_RegBuyRec_getset = { _wrap_classic_interface_RegBuyRec_get, 0 };
static SwigPyGetSet classic_interface_DataBlockHex_getset = { _wrap_classic_interface_DataBlockHex_get, 0 };
static SwigPyGetSet classic_interface_URL_getset = { _wrap_classic_interface_URL_get, _wrap_classic_interface_URL_set };
static SwigPyGetSet classic_interface_TypeOfLastEntryFM_getset = { _wrap_classic_interface_TypeOfLastEntryFM_get, 0 };
static SwigPyGetSet classic_interface_TaxValue1_getset = { _wrap_classic_interface_TaxValue1_get, _wrap_classic_interface_TaxValue1_set };
static SwigPyGetSet classic_interface_TaxValue2_getset = { _wrap_classic_interface_TaxValue2_get, _wrap_classic_interface_TaxValue2_set };
static SwigPyGetSet classic_interface_TaxValue3_getset = { _wrap_classic_interface_TaxValue3_get, _wrap_classic_interface_TaxValue3_set };
static SwigPyGetSet classic_interface_TaxValue4_getset = { _wrap_classic_interface_TaxValue4_get, _wrap_classic_interface_TaxValue4_set };
static SwigPyGetSet classic_interface_TaxValue5_getset = { _wrap_classic_interface_TaxValue5_get, _wrap_classic_interface_TaxValue5_set };
static SwigPyGetSet classic_interface_TaxValue6_getset = { _wrap_classic_interface_TaxValue6_get, _wrap_classic_interface_TaxValue6_set };
static SwigPyGetSet classic_interface_TaxValue7_getset = { _wrap_classic_interface_TaxValue7_get, _wrap_classic_interface_TaxValue7_set };
static SwigPyGetSet classic_interface_TaxValue8_getset = { _wrap_classic_interface_TaxValue8_get, _wrap_classic_interface_TaxValue8_set };
static SwigPyGetSet classic_interface_TaxValue9_getset = { _wrap_classic_interface_TaxValue9_get, _wrap_classic_interface_TaxValue9_set };
static SwigPyGetSet classic_interface_Time2_getset = { _wrap_classic_interface_Time2_get, _wrap_classic_interface_Time2_set };
static SwigPyGetSet classic_interface_ECRSoftDate_getset = { _wrap_classic_interface_ECRSoftDate_get, 0 };
static SwigPyGetSet classic_interface_FMSoftDate_getset = { _wrap_classic_interface_FMSoftDate_get, 0 };
static SwigPyGetSet classic_interface_BarcodeHex_getset = { _wrap_classic_interface_BarcodeHex_get, _wrap_classic_interface_BarcodeHex_set };
static SwigPyGetSet classic_interface_NameOperationReg_getset = { _wrap_classic_interface_NameOperationReg_get, 0 };
static SwigPyGetSet classic_interface_FNSessionState_getset = { _wrap_classic_interface_FNSessionState_get, 0 };
static SwigPyGetSet classic_interface_FNWarningFlags_getset = { _wrap_classic_interface_FNWarningFlags_get, 0 };
static SwigPyGetSet classic_interface_FMFlagsEx_getset = { _wrap_classic_interface_FMFlagsEx_get, 0 };
static SwigPyGetSet classic_interface_MultiplicationFont_getset = { _wrap_classic_interface_MultiplicationFont_get, _wrap_classic_interface_MultiplicationFont_set };
static SwigPyGetSet classic_interface_TagValueInt_getset = { _wrap_classic_interface_TagValueInt_get, _wrap_classic_interface_TagValueInt_set };
static SwigPyGetSet classic_interface_UseSlipCheck_getset = { _wrap_classic_interface_UseSlipCheck_get, _wrap_classic_interface_UseSlipCheck_set };
static SwigPyGetSet classic_interface_MCCommandFlags_getset = { _wrap_classic_interface_MCCommandFlags_get, _wrap_classic_interface_MCCommandFlags_set };
static SwigPyGetSet classic_interface_ECROutput_getset = { _wrap_classic_interface_ECROutput_get, 0 };
static SwigPyGetSet classic_interface_TaxValue10_getset = { _wrap_classic_interface_TaxValue10_get, _wrap_classic_interface_TaxValue10_set };
static SwigPyGetSet classic_interface_DiscountOnCheck_getset = { _wrap_classic_interface_DiscountOnCheck_get, _wrap_classic_interface_DiscountOnCheck_set };
static SwigPyGetSet classic_interface_MeasureUnit_getset = { _wrap_classic_interface_MeasureUnit_get, _wrap_classic_interface_MeasureUnit_set };
static SwigPyGetSet classic_interface_CrptToken_getset = { _wrap_classic_interface_CrptToken_get, _wrap_classic_interface_CrptToken_set };
static SwigPyGetSet classic_interface_UModel_getset = { _wrap_classic_interface_UModel_get, 0 };
static SwigPyGetSet classic_interface_LineData_getset = { _wrap_classic_interface_LineData_get, _wrap_classic_interface_LineData_set };
static SwigPyGetSet classic_interface_PingTime_getset = { _wrap_classic_interface_PingTime_get, _wrap_classic_interface_PingTime_set };
static SwigPyGetSet classic_interface_ECRInput_getset = { _wrap_classic_interface_ECRInput_get, 0 };
static SwigPyGetSet classic_interface_MessageState_getset = { _wrap_classic_interface_MessageState_get, _wrap_classic_interface_MessageState_set };
static SwigPyGetSet classic_interface_MessageNumber_getset = { _wrap_classic_interface_MessageNumber_get, _wrap_classic_interface_MessageNumber_set };
static SwigPyGetSet classic_interface_TotalStringNumber_getset = { _wrap_classic_interface_TotalStringNumber_get, _wrap_classic_interface_TotalStringNumber_set };
static SwigPyGetSet classic_interface_TextStringNumber_getset = { _wrap_classic_interface_TextStringNumber_get, _wrap_classic_interface_TextStringNumber_set };
static SwigPyGetSet classic_interface_TextBlockNumber_getset = { _wrap_classic_interface_TextBlockNumber_get, _wrap_classic_interface_TextBlockNumber_set };
static SwigPyGetSet classic_interface_Tax4TurnOverStringNumber_getset = { _wrap_classic_interface_Tax4TurnOverStringNumber_get, _wrap_classic_interface_Tax4TurnOverStringNumber_set };
static SwigPyGetSet classic_interface_Tax4SumStringNumber_getset = { _wrap_classic_interface_Tax4SumStringNumber_get, _wrap_classic_interface_Tax4SumStringNumber_set };
static SwigPyGetSet classic_interface_Tax3TurnOverStringNumber_getset = { _wrap_classic_interface_Tax3TurnOverStringNumber_get, _wrap_classic_interface_Tax3TurnOverStringNumber_set };
static SwigPyGetSet classic_interface_Tax3SumStringNumber_getset = { _wrap_classic_interface_Tax3SumStringNumber_get, _wrap_classic_interface_Tax3SumStringNumber_set };
static SwigPyGetSet classic_interface_Tax2TurnOverStringNumber_getset = { _wrap_classic_interface_Tax2TurnOverStringNumber_get, _wrap_classic_interface_Tax2TurnOverStringNumber_set };
static SwigPyGetSet classic_interface_Tax2SumStringNumber_getset = { _wrap_classic_interface_Tax2SumStringNumber_get, _wrap_classic_interface_Tax2SumStringNumber_set };
static SwigPyGetSet classic_interface_Tax1TurnOverStringNumber_getset = { _wrap_classic_interface_Tax1TurnOverStringNumber_get, _wrap_classic_interface_Tax1TurnOverStringNumber_set };
static SwigPyGetSet classic_interface_Tax1SumStringNumber_getset = { _wrap_classic_interface_Tax1SumStringNumber_get, _wrap_classic_interface_Tax1SumStringNumber_set };
static SwigPyGetSet classic_interface_TagNumber_getset = { _wrap_classic_interface_TagNumber_get, _wrap_classic_interface_TagNumber_set };
static SwigPyGetSet classic_interface_TableNumber_getset = { _wrap_classic_interface_TableNumber_get, _wrap_classic_interface_TableNumber_set };
static SwigPyGetSet classic_interface_SummStringNumber_getset = { _wrap_classic_interface_SummStringNumber_get, _wrap_classic_interface_SummStringNumber_set };
static SwigPyGetSet classic_interface_Summ4StringNumber_getset = { _wrap_classic_interface_Summ4StringNumber_get, _wrap_classic_interface_Summ4StringNumber_set };
static SwigPyGetSet classic_interface_Summ3StringNumber_getset = { _wrap_classic_interface_Summ3StringNumber_get, _wrap_classic_interface_Summ3StringNumber_set };
static SwigPyGetSet classic_interface_Summ2StringNumber_getset = { _wrap_classic_interface_Summ2StringNumber_get, _wrap_classic_interface_Summ2StringNumber_set };
static SwigPyGetSet classic_interface_Summ1StringNumber_getset = { _wrap_classic_interface_Summ1StringNumber_get, _wrap_classic_interface_Summ1StringNumber_set };
static SwigPyGetSet classic_interface_SubTotalStringNumber_getset = { _wrap_classic_interface_SubTotalStringNumber_get, _wrap_classic_interface_SubTotalStringNumber_set };
static SwigPyGetSet classic_interface_StringNumber_getset = { _wrap_classic_interface_StringNumber_get, _wrap_classic_interface_StringNumber_set };
static SwigPyGetSet classic_interface_ShowTagNumber_getset = { _wrap_classic_interface_ShowTagNumber_get, _wrap_classic_interface_ShowTagNumber_set };
static SwigPyGetSet classic_interface_RowNumber_getset = { _wrap_classic_interface_RowNumber_get, _wrap_classic_interface_RowNumber_set };
static SwigPyGetSet classic_interface_QuantityStringNumber_getset = { _wrap_classic_interface_QuantityStringNumber_get, _wrap_classic_interface_QuantityStringNumber_set };
static SwigPyGetSet classic_interface_PrintBufferLineNumber_getset = { _wrap_classic_interface_PrintBufferLineNumber_get, 0 };
static SwigPyGetSet classic_interface_OPRequisiteNumber_getset = { _wrap_classic_interface_OPRequisiteNumber_get, _wrap_classic_interface_OPRequisiteNumber_set };
static SwigPyGetSet classic_interface_OperationNameStringNumber_getset = { _wrap_classic_interface_OperationNameStringNumber_get, _wrap_classic_interface_OperationNameStringNumber_set };
static SwigPyGetSet classic_interface_EKLZStringNumber_getset = { _wrap_classic_interface_EKLZStringNumber_get, _wrap_classic_interface_EKLZStringNumber_set };
static SwigPyGetSet classic_interface_DiscountOnCheckStringNumber_getset = { _wrap_classic_interface_DiscountOnCheckStringNumber_get, _wrap_classic_interface_DiscountOnCheckStringNumber_set };
static SwigPyGetSet classic_interface_DepartmentStringNumber_getset = { _wrap_classic_interface_DepartmentStringNumber_get, _wrap_classic_interface_DepartmentStringNumber_set };
static SwigPyGetSet classic_interface_DataBlockNumber_getset = { _wrap_classic_interface_DataBlockNumber_get, 0 };
static SwigPyGetSet classic_interface_BlockNumber_getset = { _wrap_classic_interface_BlockNumber_get, _wrap_classic_interface_BlockNumber_set };
static SwigPyGetSet classic_interface_BarcodeStartBlockNumber_getset = { _wrap_classic_interface_BarcodeStartBlockNumber_get, _wrap_classic_interface_BarcodeStartBlockNumber_set };
static SwigPyGetSet classic_interface_AttributeNumber_getset = { _wrap_classic_interface_AttributeNumber_get, _wrap_classic_interface_AttributeNumber_set };
static SwigPyGetSet classic_interface_ccWareNameLineNumber_getset = { _wrap_classic_interface_ccWareNameLineNumber_get, _wrap_classic_interface_ccWareNameLineNumber_set };
static SwigPyGetSet classic_interface_ChangeStringNumber_getset = { _wrap_classic_interface_ChangeStringNumber_get, _wrap_classic_interface_ChangeStringNumber_set };
static SwigPyGetSet classic_interface_ClicheStringNumber_getset = { _wrap_classic_interface_ClicheStringNumber_get, _wrap_classic_interface_ClicheStringNumber_set };
static SwigPyGetSet classic_interface_ComNumber_getset = { _wrap_classic_interface_ComNumber_get, _wrap_classic_interface_ComNumber_set };
static SwigPyGetSet classic_interface_FirstLineNumber_getset = { _wrap_classic_interface_FirstLineNumber_get, _wrap_classic_interface_FirstLineNumber_set };
static SwigPyGetSet classic_interface_FMStringNumber_getset = { _wrap_classic_interface_FMStringNumber_get, _wrap_classic_interface_FMStringNumber_set };
static SwigPyGetSet classic_interface_HeaderStringNumber_getset = { _wrap_classic_interface_HeaderStringNumber_get, _wrap_classic_interface_HeaderStringNumber_set };
static SwigPyGetSet classic_interface_JournalRowNumber_getset = { _wrap_classic_interface_JournalRowNumber_get, _wrap_classic_interface_JournalRowNumber_set };
static SwigPyGetSet classic_interface_KPKNumber_getset = { _wrap_classic_interface_KPKNumber_get, _wrap_classic_interface_KPKNumber_set };
static SwigPyGetSet classic_interface_LastKPKNumber_getset = { _wrap_classic_interface_LastKPKNumber_get, 0 };
static SwigPyGetSet classic_interface_LastLineNumber_getset = { _wrap_classic_interface_LastLineNumber_get, _wrap_classic_interface_LastLineNumber_set };
static SwigPyGetSet classic_interface_LDComNumber_getset = { _wrap_classic_interface_LDComNumber_get, _wrap_classic_interface_LDComNumber_set };
static SwigPyGetSet classic_interface_LineNumber_getset = { _wrap_classic_interface_LineNumber_get, _wrap_classic_interface_LineNumber_set };
static SwigPyGetSet classic_interface_ModelParamNumber_getset = { _wrap_classic_interface_ModelParamNumber_get, _wrap_classic_interface_ModelParamNumber_set };
static SwigPyGetSet classic_interface_TagValueLength_getset = { _wrap_classic_interface_TagValueLength_get, _wrap_classic_interface_TagValueLength_set };
static SwigPyGetSet classic_interface_DataLength_getset = { _wrap_classic_interface_DataLength_get, _wrap_classic_interface_DataLength_set };
static SwigPyGetSet classic_interface_BarcodeDataLength_getset = { _wrap_classic_interface_BarcodeDataLength_get, _wrap_classic_interface_BarcodeDataLength_set };
static SwigPyGetSet classic_interface_EKLZFlags_getset = { _wrap_classic_interface_EKLZFlags_get, 0 };
static SwigPyGetSet classic_interface_TagID_getset = { _wrap_classic_interface_TagID_get, _wrap_classic_interface_TagID_set };
static SwigPyGetSet classic_interface_BarcodeParameter1_getset = { _wrap_classic_interface_BarcodeParameter1_get, _wrap_classic_interface_BarcodeParameter1_set };
static SwigPyGetSet classic_interface_BarcodeParameter2_getset = { _wrap_classic_interface_BarcodeParameter2_get, _wrap_classic_interface_BarcodeParameter2_set };
static SwigPyGetSet classic_interface_BarcodeParameter3_getset = { _wrap_classic_interface_BarcodeParameter3_get, _wrap_classic_interface_BarcodeParameter3_set };
static SwigPyGetSet classic_interface_BarcodeParameter4_getset = { _wrap_classic_interface_BarcodeParameter4_get, _wrap_classic_interface_BarcodeParameter4_set };
static SwigPyGetSet classic_interface_RealPayDepartment_getset = { _wrap_classic_interface_RealPayDepartment_get, _wrap_classic_interface_RealPayDepartment_set };
static SwigPyGetSet classic_interface_PayDepartment_getset = { _wrap_classic_interface_PayDepartment_get, _wrap_classic_interface_PayDepartment_set };
static SwigPyGetSet classic_interface_Department_getset = { _wrap_classic_interface_Department_get, _wrap_classic_interface_Department_set };
static SwigPyGetSet classic_interface_BarcodeParameter5_getset = { _wrap_classic_interface_BarcodeParameter5_get, _wrap_classic_interface_BarcodeParameter5_set };
static SwigPyGetSet classic_interface_CommandIndex_getset = { _wrap_classic_interface_CommandIndex_get, _wrap_classic_interface_CommandIndex_set };
static SwigPyGetSet classic_interface_FeedAfterCut_getset = { _wrap_classic_interface_FeedAfterCut_get, _wrap_classic_interface_FeedAfterCut_set };
static SwigPyGetSet classic_interface_DeclarativeInput_getset = { _wrap_classic_interface_DeclarativeInput_get, _wrap_classic_interface_DeclarativeInput_set };
static SwigPyGetSet classic_interface_FreeMemorySize_getset = { _wrap_classic_interface_FreeMemorySize_get, _wrap_classic_interface_FreeMemorySize_set };
static SwigPyGetSet classic_interface_AutoStartSearch_getset = { _wrap_classic_interface_AutoStartSearch_get, _wrap_classic_interface_AutoStartSearch_set };
static SwigPyGetSet classic_interface_AutoSensorValues_getset = { _wrap_classic_interface_AutoSensorValues_get, _wrap_classic_interface_AutoSensorValues_set };
static SwigPyGetSet classic_interface_FMFlags_getset = { _wrap_classic_interface_FMFlags_get, 0 };
static SwigPyGetSet classic_interface_IBMFlags_getset = { _wrap_classic_interface_IBMFlags_get, 0 };
static SwigPyGetSet classic_interface_IsClearUnfiscalInfo_getset = { _wrap_classic_interface_IsClearUnfiscalInfo_get, _wrap_classic_interface_IsClearUnfiscalInfo_set };
static SwigPyGetSet classic_interface_SKNOIdentifier_getset = { _wrap_classic_interface_SKNOIdentifier_get, _wrap_classic_interface_SKNOIdentifier_set };
static SwigPyGetSet classic_interface_TypeOfSumOfEntriesFM_getset = { _wrap_classic_interface_TypeOfSumOfEntriesFM_get, _wrap_classic_interface_TypeOfSumOfEntriesFM_set };
static SwigPyGetSet classic_interface_TLVData_getset = { _wrap_classic_interface_TLVData_get, _wrap_classic_interface_TLVData_set };
static SwigPyGetSet classic_interface_EnableCashcoreMarkCompatibility_getset = { _wrap_classic_interface_EnableCashcoreMarkCompatibility_get, _wrap_classic_interface_EnableCashcoreMarkCompatibility_set };
static SwigPyGetSet classic_interface_UMinorType_getset = { _wrap_classic_interface_UMinorType_get, 0 };
static SwigPyGetSet classic_interface_UMajorType_getset = { _wrap_classic_interface_UMajorType_get, 0 };
static SwigPyGetSet classic_interface_DriverRelease_getset = { _wrap_classic_interface_DriverRelease_get, 0 };
static SwigPyGetSet classic_interface_TagValueBin_getset = { _wrap_classic_interface_TagValueBin_get, _wrap_classic_interface_TagValueBin_set };
static SwigPyGetSet classic_interface_ParentWnd_getset = { _wrap_classic_interface_ParentWnd_get, _wrap_classic_interface_ParentWnd_set };
static SwigPyGetSet classic_interface_ModelParamIndex_getset = { _wrap_classic_interface_ModelParamIndex_get, _wrap_classic_interface_ModelParamIndex_set };
static SwigPyGetSet classic_interface_SlipDocumentWidth_getset = { _wrap_classic_interface_SlipDocumentWidth_get, _wrap_classic_interface_SlipDocumentWidth_set };
static SwigPyGetSet classic_interface_PrintWidth_getset = { _wrap_classic_interface_PrintWidth_get, 0 };
static SwigPyGetSet classic_interface_FirstDocumentNumber_getset = { _wrap_classic_interface_FirstDocumentNumber_get, _wrap_classic_interface_FirstDocumentNumber_set };
static SwigPyGetSet classic_interface_LastDocumentNumber_getset = { _wrap_classic_interface_LastDocumentNumber_get, _wrap_classic_interface_LastDocumentNumber_set };
static SwigPyGetSet classic_interface_NotificationNumber_getset = { _wrap_classic_interface_NotificationNumber_get, _wrap_classic_interface_NotificationNumber_set };
static SwigPyGetSet classic_interface_DeviceFunctionNumber_getset = { _wrap_classic_interface_DeviceFunctionNumber_get, _wrap_classic_interface_DeviceFunctionNumber_set };
static SwigPyGetSet classic_interface_TransmitSessionNumber_getset = { _wrap_classic_interface_TransmitSessionNumber_get, 0 };
static SwigPyGetSet classic_interface_TransmitDocumentNumber_getset = { _wrap_classic_interface_TransmitDocumentNumber_get, 0 };
static SwigPyGetSet classic_interface_TotalSymbolNumber_getset = { _wrap_classic_interface_TotalSymbolNumber_get, _wrap_classic_interface_TotalSymbolNumber_set };
static SwigPyGetSet classic_interface_TextSymbolNumber_getset = { _wrap_classic_interface_TextSymbolNumber_get, _wrap_classic_interface_TextSymbolNumber_set };
static SwigPyGetSet classic_interface_Tax4TurnOverSymbolNumber_getset = { _wrap_classic_interface_Tax4TurnOverSymbolNumber_get, _wrap_classic_interface_Tax4TurnOverSymbolNumber_set };
static SwigPyGetSet classic_interface_Tax4SumSymbolNumber_getset = { _wrap_classic_interface_Tax4SumSymbolNumber_get, _wrap_classic_interface_Tax4SumSymbolNumber_set };
static SwigPyGetSet classic_interface_Tax4RateSymbolNumber_getset = { _wrap_classic_interface_Tax4RateSymbolNumber_get, _wrap_classic_interface_Tax4RateSymbolNumber_set };
static SwigPyGetSet classic_interface_Tax4NameSymbolNumber_getset = { _wrap_classic_interface_Tax4NameSymbolNumber_get, _wrap_classic_interface_Tax4NameSymbolNumber_set };
static SwigPyGetSet classic_interface_Tax3TurnOverSymbolNumber_getset = { _wrap_classic_interface_Tax3TurnOverSymbolNumber_get, _wrap_classic_interface_Tax3TurnOverSymbolNumber_set };
static SwigPyGetSet classic_interface_Tax3SumSymbolNumber_getset = { _wrap_classic_interface_Tax3SumSymbolNumber_get, _wrap_classic_interface_Tax3SumSymbolNumber_set };
static SwigPyGetSet classic_interface_Tax3RateSymbolNumber_getset = { _wrap_classic_interface_Tax3RateSymbolNumber_get, _wrap_classic_interface_Tax3RateSymbolNumber_set };
static SwigPyGetSet classic_interface_Tax3NameSymbolNumber_getset = { _wrap_classic_interface_Tax3NameSymbolNumber_get, _wrap_classic_interface_Tax3NameSymbolNumber_set };
static SwigPyGetSet classic_interface_Tax2TurnOverSymbolNumber_getset = { _wrap_classic_interface_Tax2TurnOverSymbolNumber_get, _wrap_classic_interface_Tax2TurnOverSymbolNumber_set };
static SwigPyGetSet classic_interface_Tax2SumSymbolNumber_getset = { _wrap_classic_interface_Tax2SumSymbolNumber_get, _wrap_classic_interface_Tax2SumSymbolNumber_set };
static SwigPyGetSet classic_interface_Tax2RateSymbolNumber_getset = { _wrap_classic_interface_Tax2RateSymbolNumber_get, _wrap_classic_interface_Tax2RateSymbolNumber_set };
static SwigPyGetSet classic_interface_Tax2NameSymbolNumber_getset = { _wrap_classic_interface_Tax2NameSymbolNumber_get, _wrap_classic_interface_Tax2NameSymbolNumber_set };
static SwigPyGetSet classic_interface_Tax1SumSymbolNumber_getset = { _wrap_classic_interface_Tax1SumSymbolNumber_get, _wrap_classic_interface_Tax1SumSymbolNumber_set };
static SwigPyGetSet classic_interface_Tax1RateSymbolNumber_getset = { _wrap_classic_interface_Tax1RateSymbolNumber_get, _wrap_classic_interface_Tax1RateSymbolNumber_set };
static SwigPyGetSet classic_interface_Tax1NameSymbolNumber_getset = { _wrap_classic_interface_Tax1NameSymbolNumber_get, _wrap_classic_interface_Tax1NameSymbolNumber_set };
static SwigPyGetSet classic_interface_SummSymbolNumber_getset = { _wrap_classic_interface_SummSymbolNumber_get, _wrap_classic_interface_SummSymbolNumber_set };
static SwigPyGetSet classic_interface_Summ4SymbolNumber_getset = { _wrap_classic_interface_Summ4SymbolNumber_get, _wrap_classic_interface_Summ4SymbolNumber_set };
static SwigPyGetSet classic_interface_Summ3SymbolNumber_getset = { _wrap_classic_interface_Summ3SymbolNumber_get, _wrap_classic_interface_Summ3SymbolNumber_set };
static SwigPyGetSet classic_interface_Summ2SymbolNumber_getset = { _wrap_classic_interface_Summ2SymbolNumber_get, _wrap_classic_interface_Summ2SymbolNumber_set };
static SwigPyGetSet classic_interface_Summ1SymbolNumber_getset = { _wrap_classic_interface_Summ1SymbolNumber_get, _wrap_classic_interface_Summ1SymbolNumber_set };
static SwigPyGetSet classic_interface_SubTotalSymbolNumber_getset = { _wrap_classic_interface_SubTotalSymbolNumber_get, _wrap_classic_interface_SubTotalSymbolNumber_set };
static SwigPyGetSet classic_interface_SessionNumber_getset = { _wrap_classic_interface_SessionNumber_get, _wrap_classic_interface_SessionNumber_set };
static SwigPyGetSet classic_interface_SerialNumber_getset = { _wrap_classic_interface_SerialNumber_get, _wrap_classic_interface_SerialNumber_set };
static SwigPyGetSet classic_interface_RegistrationNumber_getset = { _wrap_classic_interface_RegistrationNumber_get, _wrap_classic_interface_RegistrationNumber_set };
static SwigPyGetSet classic_interface_RegisterNumber_getset = { _wrap_classic_interface_RegisterNumber_get, _wrap_classic_interface_RegisterNumber_set };
static SwigPyGetSet classic_interface_ReceiptNumber_getset = { _wrap_classic_interface_ReceiptNumber_get, _wrap_classic_interface_ReceiptNumber_set };
static SwigPyGetSet classic_interface_QuantitySymbolNumber_getset = { _wrap_classic_interface_QuantitySymbolNumber_get, _wrap_classic_interface_QuantitySymbolNumber_set };
static SwigPyGetSet classic_interface_PriceSymbolNumber_getset = { _wrap_classic_interface_PriceSymbolNumber_get, _wrap_classic_interface_PriceSymbolNumber_set };
static SwigPyGetSet classic_interface_PortNumber_getset = { _wrap_classic_interface_PortNumber_get, _wrap_classic_interface_PortNumber_set };
static SwigPyGetSet classic_interface_OperatorNumber_getset = { _wrap_classic_interface_OperatorNumber_get, 0 };
static SwigPyGetSet classic_interface_EKLZNumber_getset = { _wrap_classic_interface_EKLZNumber_get, 0 };
static SwigPyGetSet classic_interface_DrawerNumber_getset = { _wrap_classic_interface_DrawerNumber_get, _wrap_classic_interface_DrawerNumber_set };
static SwigPyGetSet classic_interface_DocumentNumber_getset = { _wrap_classic_interface_DocumentNumber_get, _wrap_classic_interface_DocumentNumber_set };
static SwigPyGetSet classic_interface_DiscountOnCheckSymbolNumber_getset = { _wrap_classic_interface_DiscountOnCheckSymbolNumber_get, _wrap_classic_interface_DiscountOnCheckSymbolNumber_set };
static SwigPyGetSet classic_interface_DiscountOnCheckSumSymbolNumber_getset = { _wrap_classic_interface_DiscountOnCheckSumSymbolNumber_get, _wrap_classic_interface_DiscountOnCheckSumSymbolNumber_set };
static SwigPyGetSet classic_interface_DepartmentSymbolNumber_getset = { _wrap_classic_interface_DepartmentSymbolNumber_get, _wrap_classic_interface_DepartmentSymbolNumber_set };
static SwigPyGetSet classic_interface_ChangeSymbolNumber_getset = { _wrap_classic_interface_ChangeSymbolNumber_get, _wrap_classic_interface_ChangeSymbolNumber_set };
static SwigPyGetSet classic_interface_FieldNumber_getset = { _wrap_classic_interface_FieldNumber_get, _wrap_classic_interface_FieldNumber_set };
static SwigPyGetSet classic_interface_FirstSessionNumber_getset = { _wrap_classic_interface_FirstSessionNumber_get, _wrap_classic_interface_FirstSessionNumber_set };
static SwigPyGetSet classic_interface_IBMDocumentNumber_getset = { _wrap_classic_interface_IBMDocumentNumber_get, 0 };
static SwigPyGetSet classic_interface_IBMLastBuyReceiptNumber_getset = { _wrap_classic_interface_IBMLastBuyReceiptNumber_get, 0 };
static SwigPyGetSet classic_interface_IBMLastReturnBuyReceiptNumber_getset = { _wrap_classic_interface_IBMLastReturnBuyReceiptNumber_get, 0 };
static SwigPyGetSet classic_interface_IBMLastReturnSaleReceiptNumber_getset = { _wrap_classic_interface_IBMLastReturnSaleReceiptNumber_get, 0 };
static SwigPyGetSet classic_interface_IBMLastSaleReceiptNumber_getset = { _wrap_classic_interface_IBMLastSaleReceiptNumber_get, 0 };
static SwigPyGetSet classic_interface_IntervalNumber_getset = { _wrap_classic_interface_IntervalNumber_get, _wrap_classic_interface_IntervalNumber_set };
static SwigPyGetSet classic_interface_KKTRegistrationNumber_getset = { _wrap_classic_interface_KKTRegistrationNumber_get, _wrap_classic_interface_KKTRegistrationNumber_set };
static SwigPyGetSet classic_interface_LastSessionNumber_getset = { _wrap_classic_interface_LastSessionNumber_get, _wrap_classic_interface_LastSessionNumber_set };
static SwigPyGetSet classic_interface_LDNumber_getset = { _wrap_classic_interface_LDNumber_get, _wrap_classic_interface_LDNumber_set };
static SwigPyGetSet classic_interface_LogicalNumber_getset = { _wrap_classic_interface_LogicalNumber_get, 0 };
static SwigPyGetSet classic_interface_MFPNumber_getset = { _wrap_classic_interface_MFPNumber_get, _wrap_classic_interface_MFPNumber_set };
static SwigPyGetSet classic_interface_OpenDocumentNumber_getset = { _wrap_classic_interface_OpenDocumentNumber_get, 0 };
static SwigPyGetSet classic_interface_OutputStrJson_getset = { _wrap_classic_interface_OutputStrJson_get, _wrap_classic_interface_OutputStrJson_set };
static SwigPyGetSet classic_interface_InputStrJson_getset = { _wrap_classic_interface_InputStrJson_get, _wrap_classic_interface_InputStrJson_set };
static SwigPyGetSet classic_interface_ModelIndex_getset = { _wrap_classic_interface_ModelIndex_get, _wrap_classic_interface_ModelIndex_set };
static SwigPyGetSet classic_interface_LoaderVersion_getset = { _wrap_classic_interface_LoaderVersion_get, 0 };
static SwigPyGetSet classic_interface_UMinorProtocolVersion_getset = { _wrap_classic_interface_UMinorProtocolVersion_get, 0 };
static SwigPyGetSet classic_interface_UMajorProtocolVersion_getset = { _wrap_classic_interface_UMajorProtocolVersion_get, 0 };
static SwigPyGetSet classic_interface_ServerVersion_getset = { _wrap_classic_interface_ServerVersion_get, 0 };
static SwigPyGetSet classic_interface_EKLZVersion_getset = { _wrap_classic_interface_EKLZVersion_get, 0 };
static SwigPyGetSet classic_interface_ECRSoftVersion_getset = { _wrap_classic_interface_ECRSoftVersion_get, 0 };
static SwigPyGetSet classic_interface_DriverVersion_getset = { _wrap_classic_interface_DriverVersion_get, 0 };
static SwigPyGetSet classic_interface_DriverMinorVersion_getset = { _wrap_classic_interface_DriverMinorVersion_get, 0 };
static SwigPyGetSet classic_interface_DriverMajorVersion_getset = { _wrap_classic_interface_DriverMajorVersion_get, 0 };
static SwigPyGetSet classic_interface_BinaryConversion_getset = { _wrap_classic_interface_BinaryConversion_get, _wrap_classic_interface_BinaryConversion_set };
static SwigPyGetSet classic_interface_FMSoftVersion_getset = { _wrap_classic_interface_FMSoftVersion_get, 0 };
static SwigPyGetSet classic_interface_FNSoftVersion_getset = { _wrap_classic_interface_FNSoftVersion_get, 0 };
static SwigPyGetSet classic_interface_SlipDocumentLength_getset = { _wrap_classic_interface_SlipDocumentLength_get, _wrap_classic_interface_SlipDocumentLength_set };
static SwigPyGetSet classic_interface_Date2_getset = { _wrap_classic_interface_Date2_get, _wrap_classic_interface_Date2_set };
static SwigPyGetSet classic_interface_DataOffset_getset = { _wrap_classic_interface_DataOffset_get, _wrap_classic_interface_DataOffset_set };
static SwigPyGetSet classic_interface_TotalSumOffset_getset = { _wrap_classic_interface_TotalSumOffset_get, _wrap_classic_interface_TotalSumOffset_set };
static SwigPyGetSet classic_interface_Tax4SumOffset_getset = { _wrap_classic_interface_Tax4SumOffset_get, _wrap_classic_interface_Tax4SumOffset_set };
static SwigPyGetSet classic_interface_Tax4RateOffset_getset = { _wrap_classic_interface_Tax4RateOffset_get, _wrap_classic_interface_Tax4RateOffset_set };
static SwigPyGetSet classic_interface_Tax4NameOffset_getset = { _wrap_classic_interface_Tax4NameOffset_get, _wrap_classic_interface_Tax4NameOffset_set };
static SwigPyGetSet classic_interface_Tax3SumOffset_getset = { _wrap_classic_interface_Tax3SumOffset_get, _wrap_classic_interface_Tax3SumOffset_set };
static SwigPyGetSet classic_interface_Tax3RateOffset_getset = { _wrap_classic_interface_Tax3RateOffset_get, _wrap_classic_interface_Tax3RateOffset_set };
static SwigPyGetSet classic_interface_Tax3NameOffset_getset = { _wrap_classic_interface_Tax3NameOffset_get, _wrap_classic_interface_Tax3NameOffset_set };
static SwigPyGetSet classic_interface_Tax2SumOffset_getset = { _wrap_classic_interface_Tax2SumOffset_get, _wrap_classic_interface_Tax2SumOffset_set };
static SwigPyGetSet classic_interface_Tax2RateOffset_getset = { _wrap_classic_interface_Tax2RateOffset_get, _wrap_classic_interface_Tax2RateOffset_set };
static SwigPyGetSet classic_interface_Tax2NameOffset_getset = { _wrap_classic_interface_Tax2NameOffset_get, _wrap_classic_interface_Tax2NameOffset_set };
static SwigPyGetSet classic_interface_Tax1SumOffset_getset = { _wrap_classic_interface_Tax1SumOffset_get, _wrap_classic_interface_Tax1SumOffset_set };
static SwigPyGetSet classic_interface_Tax1RateOffset_getset = { _wrap_classic_interface_Tax1RateOffset_get, _wrap_classic_interface_Tax1RateOffset_set };
static SwigPyGetSet classic_interface_Tax1NameOffset_getset = { _wrap_classic_interface_Tax1NameOffset_get, _wrap_classic_interface_Tax1NameOffset_set };
static SwigPyGetSet classic_interface_SummOffset_getset = { _wrap_classic_interface_SummOffset_get, _wrap_classic_interface_SummOffset_set };
static SwigPyGetSet classic_interface_Summ4NameOffset_getset = { _wrap_classic_interface_Summ4NameOffset_get, _wrap_classic_interface_Summ4NameOffset_set };
static SwigPyGetSet classic_interface_Summ3Offset_getset = { _wrap_classic_interface_Summ3Offset_get, _wrap_classic_interface_Summ3Offset_set };
static SwigPyGetSet classic_interface_Summ3NameOffset_getset = { _wrap_classic_interface_Summ3NameOffset_get, _wrap_classic_interface_Summ3NameOffset_set };
static SwigPyGetSet classic_interface_Summ2NameOffset_getset = { _wrap_classic_interface_Summ2NameOffset_get, _wrap_classic_interface_Summ2NameOffset_set };
static SwigPyGetSet classic_interface_Summ1Offset_getset = { _wrap_classic_interface_Summ1Offset_get, _wrap_classic_interface_Summ1Offset_set };
static SwigPyGetSet classic_interface_Summ1NameOffset_getset = { _wrap_classic_interface_Summ1NameOffset_get, _wrap_classic_interface_Summ1NameOffset_set };
static SwigPyGetSet classic_interface_SubTotalSumOffset_getset = { _wrap_classic_interface_SubTotalSumOffset_get, _wrap_classic_interface_SubTotalSumOffset_set };
static SwigPyGetSet classic_interface_QuantityOffset_getset = { _wrap_classic_interface_QuantityOffset_get, _wrap_classic_interface_QuantityOffset_set };
static SwigPyGetSet classic_interface_OperationNameOffset_getset = { _wrap_classic_interface_OperationNameOffset_get, _wrap_classic_interface_OperationNameOffset_set };
static SwigPyGetSet classic_interface_DiscountOnCheckSumOffset_getset = { _wrap_classic_interface_DiscountOnCheckSumOffset_get, _wrap_classic_interface_DiscountOnCheckSumOffset_set };
static SwigPyGetSet classic_interface_DiscountOnCheckOffset_getset = { _wrap_classic_interface_DiscountOnCheckOffset_get, _wrap_classic_interface_DiscountOnCheckOffset_set };
static SwigPyGetSet classic_interface_ChangeOffset_getset = { _wrap_classic_interface_ChangeOffset_get, _wrap_classic_interface_ChangeOffset_set };
static SwigPyGetSet classic_interface_ChangeSumOffset_getset = { _wrap_classic_interface_ChangeSumOffset_get, _wrap_classic_interface_ChangeSumOffset_set };
static SwigPyGetSet classic_interface_ClicheOffset_getset = { _wrap_classic_interface_ClicheOffset_get, _wrap_classic_interface_ClicheOffset_set };
static SwigPyGetSet classic_interface_FMOffset_getset = { _wrap_classic_interface_FMOffset_get, _wrap_classic_interface_FMOffset_set };
static SwigPyGetSet classic_interface_KPKOffset_getset = { _wrap_classic_interface_KPKOffset_get, _wrap_classic_interface_KPKOffset_set };
static SwigPyGetSet classic_interface_IsPrinterLeftSensorFailure_getset = { _wrap_classic_interface_IsPrinterLeftSensorFailure_get, 0 };
static SwigPyGetSet classic_interface_IsPrinterRightSensorFailure_getset = { _wrap_classic_interface_IsPrinterRightSensorFailure_get, 0 };
static SwigPyGetSet classic_interface_CharHeight_getset = { _wrap_classic_interface_CharHeight_get, 0 };
static SwigPyGetSet classic_interface_ReceiptRibbonOpticalSensor_getset = { _wrap_classic_interface_ReceiptRibbonOpticalSensor_get, 0 };
static SwigPyGetSet classic_interface_JournalRibbonOpticalSensor_getset = { _wrap_classic_interface_JournalRibbonOpticalSensor_get, 0 };
static SwigPyGetSet classic_interface_LidPositionSensor_getset = { _wrap_classic_interface_LidPositionSensor_get, 0 };
static SwigPyGetSet classic_interface_RegSaleReturnRec_getset = { _wrap_classic_interface_RegSaleReturnRec_get, 0 };
static SwigPyGetSet classic_interface_RegBuyReturnRec_getset = { _wrap_classic_interface_RegBuyReturnRec_get, 0 };
static SwigPyGetSet classic_interface_LDIndex_getset = { _wrap_classic_interface_LDIndex_get, _wrap_classic_interface_LDIndex_set };
static SwigPyGetSet classic_interface_SlipDocumentIsPresent_getset = { _wrap_classic_interface_SlipDocumentIsPresent_get, 0 };
static SwigPyGetSet classic_interface_ReceiptRibbonIsPresent_getset = { _wrap_classic_interface_ReceiptRibbonIsPresent_get, 0 };
static SwigPyGetSet classic_interface_EKLZIsPresent_getset = { _wrap_classic_interface_EKLZIsPresent_get, 0 };
static SwigPyGetSet classic_interface_FM1IsPresent_getset = { _wrap_classic_interface_FM1IsPresent_get, 0 };
static SwigPyGetSet classic_interface_FM2IsPresent_getset = { _wrap_classic_interface_FM2IsPresent_get, 0 };
static SwigPyGetSet classic_interface_JournalRibbonIsPresent_getset = { _wrap_classic_interface_JournalRibbonIsPresent_get, 0 };
static SwigPyGetSet classic_interface_LicenseIsPresent_getset = { _wrap_classic_interface_LicenseIsPresent_get, 0 };
static SwigPyGetSet classic_interface_IsBatteryLow_getset = { _wrap_classic_interface_IsBatteryLow_get, 0 };
static SwigPyGetSet classic_interface_UseSlipDocument_getset = { _wrap_classic_interface_UseSlipDocument_get, _wrap_classic_interface_UseSlipDocument_set };
static SwigPyGetSet classic_interface_FNCurrentDocument_getset = { _wrap_classic_interface_FNCurrentDocument_get, _wrap_classic_interface_FNCurrentDocument_set };
static SwigPyGetSet classic_interface_ValueOfFunctionInteger_getset = { _wrap_classic_interface_ValueOfFunctionInteger_get, _wrap_classic_interface_ValueOfFunctionInteger_set };
static SwigPyGetSet classic_interface_ValueOfFieldInteger_getset = { _wrap_classic_interface_ValueOfFieldInteger_get, _wrap_classic_interface_ValueOfFieldInteger_set };
static SwigPyGetSet classic_interface_SerialNumberAsInteger_getset = { _wrap_classic_interface_SerialNumberAsInteger_get, 0 };
static SwigPyGetSet classic_interface_INNAsInteger_getset = { _wrap_classic_interface_INNAsInteger_get, 0 };
static SwigPyGetSet classic_interface_EscapeIP_getset = { _wrap_classic_interface_EscapeIP_get, _wrap_classic_interface_EscapeIP_set };
static SwigPyGetSet classic_interface_LDEscapeIP_getset = { _wrap_classic_interface_LDEscapeIP_get, _wrap_classic_interface_LDEscapeIP_set };
static SwigPyGetSet classic_interface_ModelNames_getset = { _wrap_classic_interface_ModelNames_get, 0 };
static SwigPyGetSet classic_interface_IsCorruptedFiscalizationInfo_getset = { _wrap_classic_interface_IsCorruptedFiscalizationInfo_get, 0 };
static SwigPyGetSet classic_interface_DBDocType_getset = { _wrap_classic_interface_DBDocType_get, _wrap_classic_interface_DBDocType_set };
static SwigPyGetSet classic_interface_MarkingOnly_getset = { _wrap_classic_interface_MarkingOnly_get, _wrap_classic_interface_MarkingOnly_set };
static SwigPyGetSet classic_interface_Token_getset = { _wrap_classic_interface_Token_get, _wrap_classic_interface_Token_set };
static SwigPyGetSet classic_interface_Discount1_getset = { _wrap_classic_interface_Discount1_get, _wrap_classic_interface_Discount1_set };
static SwigPyGetSet classic_interface_Discount2_getset = { _wrap_classic_interface_Discount2_get, _wrap_classic_interface_Discount2_set };
static SwigPyGetSet classic_interface_Discount3_getset = { _wrap_classic_interface_Discount3_get, _wrap_classic_interface_Discount3_set };
static SwigPyGetSet classic_interface_LastKPKTime_getset = { _wrap_classic_interface_LastKPKTime_get, 0 };
static SwigPyGetSet classic_interface_Discount4_getset = { _wrap_classic_interface_Discount4_get, _wrap_classic_interface_Discount4_set };
static SwigPyGetSet classic_interface_TLVDataHex_getset = { _wrap_classic_interface_TLVDataHex_get, _wrap_classic_interface_TLVDataHex_set };
static SwigPyGetSet classic_interface_BlockDataHex_getset = { _wrap_classic_interface_BlockDataHex_get, _wrap_classic_interface_BlockDataHex_set };
static SwigPyGetSet classic_interface_LineDataHex_getset = { _wrap_classic_interface_LineDataHex_get, _wrap_classic_interface_LineDataHex_set };
static SwigPyGetSet classic_interface_SaveSettingsType_getset = { _wrap_classic_interface_SaveSettingsType_get, _wrap_classic_interface_SaveSettingsType_set };
static SwigPyGetSet classic_interface_HeaderFont_getset = { _wrap_classic_interface_HeaderFont_get, _wrap_classic_interface_HeaderFont_set };
static SwigPyGetSet classic_interface_AuthData_getset = { _wrap_classic_interface_AuthData_get, _wrap_classic_interface_AuthData_set };
static SwigPyGetSet classic_interface_Summ1Font_getset = { _wrap_classic_interface_Summ1Font_get, _wrap_classic_interface_Summ1Font_set };
static SwigPyGetSet classic_interface_CheckItemMode_getset = { _wrap_classic_interface_CheckItemMode_get, _wrap_classic_interface_CheckItemMode_set };
static SwigPyGetSet classic_interface_ReceiptOutputType_getset = { _wrap_classic_interface_ReceiptOutputType_get, _wrap_classic_interface_ReceiptOutputType_set };
static SwigPyGetSet classic_interface_OPBarcodeInputType_getset = { _wrap_classic_interface_OPBarcodeInputType_get, _wrap_classic_interface_OPBarcodeInputType_set };
static SwigPyGetSet classic_interface_TimeoutsUsing_getset = { _wrap_classic_interface_TimeoutsUsing_get, _wrap_classic_interface_TimeoutsUsing_set };
static SwigPyGetSet classic_interface_RNM_getset = { _wrap_classic_interface_RNM_get, _wrap_classic_interface_RNM_set };
static SwigPyGetSet classic_interface_BarWidth_getset = { _wrap_classic_interface_BarWidth_get, _wrap_classic_interface_BarWidth_set };
static SwigPyGetSet classic_interface_CharWidth_getset = { _wrap_classic_interface_CharWidth_get, 0 };
static SwigPyGetSet classic_interface_TotalOffset_getset = { _wrap_classic_interface_TotalOffset_get, _wrap_classic_interface_TotalOffset_set };
static SwigPyGetSet classic_interface_TextOffset_getset = { _wrap_classic_interface_TextOffset_get, _wrap_classic_interface_TextOffset_set };
static SwigPyGetSet classic_interface_Tax4TurnOverOffset_getset = { _wrap_classic_interface_Tax4TurnOverOffset_get, _wrap_classic_interface_Tax4TurnOverOffset_set };
static SwigPyGetSet classic_interface_Tax3TurnOverOffset_getset = { _wrap_classic_interface_Tax3TurnOverOffset_get, _wrap_classic_interface_Tax3TurnOverOffset_set };
static SwigPyGetSet classic_interface_Tax2TurnOverOffset_getset = { _wrap_classic_interface_Tax2TurnOverOffset_get, _wrap_classic_interface_Tax2TurnOverOffset_set };
static SwigPyGetSet classic_interface_Tax1TurnOverOffset_getset = { _wrap_classic_interface_Tax1TurnOverOffset_get, _wrap_classic_interface_Tax1TurnOverOffset_set };
static SwigPyGetSet classic_interface_Summ4Offset_getset = { _wrap_classic_interface_Summ4Offset_get, _wrap_classic_interface_Summ4Offset_set };
static SwigPyGetSet classic_interface_Summ2Offset_getset = { _wrap_classic_interface_Summ2Offset_get, _wrap_classic_interface_Summ2Offset_set };
static SwigPyGetSet classic_interface_SubTotalOffset_getset = { _wrap_classic_interface_SubTotalOffset_get, _wrap_classic_interface_SubTotalOffset_set };
static SwigPyGetSet classic_interface_EKLZOffset_getset = { _wrap_classic_interface_EKLZOffset_get, _wrap_classic_interface_EKLZOffset_set };
static SwigPyGetSet classic_interface_DepartmentOffset_getset = { _wrap_classic_interface_DepartmentOffset_get, _wrap_classic_interface_DepartmentOffset_set };
static SwigPyGetSet classic_interface_HeaderOffset_getset = { _wrap_classic_interface_HeaderOffset_get, _wrap_classic_interface_HeaderOffset_set };
static SwigPyGetSet classic_interface_JournalRow_getset = { _wrap_classic_interface_JournalRow_get, 0 };
static SwigPyGetSet classic_interface_NameCashReg_getset = { _wrap_classic_interface_NameCashReg_get, 0 };
static SwigPyGetSet classic_interface_CrptExchangeCaCertPath_getset = { _wrap_classic_interface_CrptExchangeCaCertPath_get, _wrap_classic_interface_CrptExchangeCaCertPath_set };
static SwigPyGetSet classic_interface_DataBlockSize_getset = { _wrap_classic_interface_DataBlockSize_get, _wrap_classic_interface_DataBlockSize_set };
static SwigPyGetSet classic_interface_DoNotSendENQ_getset = { _wrap_classic_interface_DoNotSendENQ_get, _wrap_classic_interface_DoNotSendENQ_set };
static SwigPyGetSet classic_interface_DeclarativeEndpointPath_getset = { _wrap_classic_interface_DeclarativeEndpointPath_get, _wrap_classic_interface_DeclarativeEndpointPath_set };
static SwigPyGetSet classic_interface_EKLZData_getset = { _wrap_classic_interface_EKLZData_get, 0 };
static SwigPyGetSet classic_interface_UseReceiptRibbon_getset = { _wrap_classic_interface_UseReceiptRibbon_get, _wrap_classic_interface_UseReceiptRibbon_set };
static SwigPyGetSet classic_interface_UseJournalRibbon_getset = { _wrap_classic_interface_UseJournalRibbon_get, _wrap_classic_interface_UseJournalRibbon_set };
static SwigPyGetSet classic_interface_KSAInfo_getset = { _wrap_classic_interface_KSAInfo_get, _wrap_classic_interface_KSAInfo_set };
static SwigPyGetSet classic_interface_TCPPort_getset = { _wrap_classic_interface_TCPPort_get, _wrap_classic_interface_TCPPort_set };
static SwigPyGetSet classic_interface_LDTCPPort_getset = { _wrap_classic_interface_LDTCPPort_get, _wrap_classic_interface_LDTCPPort_set };
static SwigPyGetSet classic_interface_SysAdminPassword_getset = { _wrap_classic_interface_SysAdminPassword_get, _wrap_classic_interface_SysAdminPassword_set };
static SwigPyGetSet classic_interface_SCPassword_getset = { _wrap_classic_interface_SCPassword_get, _wrap_classic_interface_SCPassword_set };
static SwigPyGetSet classic_interface_Password_getset = { _wrap_classic_interface_Password_get, _wrap_classic_interface_Password_set };
static SwigPyGetSet classic_interface_CashControlPassword_getset = { _wrap_classic_interface_CashControlPassword_get, _wrap_classic_interface_CashControlPassword_set };
static SwigPyGetSet classic_interface_IsBlockedByWrongTaxPassword_getset = { _wrap_classic_interface_IsBlockedByWrongTaxPassword_get, 0 };
static SwigPyGetSet classic_interface_LDSysAdminPassword_getset = { _wrap_classic_interface_LDSysAdminPassword_get, _wrap_classic_interface_LDSysAdminPassword_set };
static SwigPyGetSet classic_interface_NewSCPassword_getset = { _wrap_classic_interface_NewSCPassword_get, _wrap_classic_interface_NewSCPassword_set };
static SwigPyGetSet classic_interface_BarcodeFirstLine_getset = { _wrap_classic_interface_BarcodeFirstLine_get, _wrap_classic_interface_BarcodeFirstLine_set };
static SwigPyGetSet classic_interface_Summ2Font_getset = { _wrap_classic_interface_Summ2Font_get, _wrap_classic_interface_Summ2Font_set };
static SwigPyGetSet classic_interface_IBMSessionYear_getset = { _wrap_classic_interface_IBMSessionYear_get, 0 };
static SwigPyGetSet classic_interface_KPKStr_getset = { _wrap_classic_interface_KPKStr_get, 0 };
static SwigPyGetSet classic_interface_Summ10_getset = { _wrap_classic_interface_Summ10_get, _wrap_classic_interface_Summ10_set };
static SwigPyGetSet classic_interface_Summ11_getset = { _wrap_classic_interface_Summ11_get, _wrap_classic_interface_Summ11_set };
static SwigPyGetSet classic_interface_Summ12_getset = { _wrap_classic_interface_Summ12_get, _wrap_classic_interface_Summ12_set };
static SwigPyGetSet classic_interface_Summ13_getset = { _wrap_classic_interface_Summ13_get, _wrap_classic_interface_Summ13_set };
static SwigPyGetSet classic_interface_Summ14_getset = { _wrap_classic_interface_Summ14_get, _wrap_classic_interface_Summ14_set };
static SwigPyGetSet classic_interface_RegSaleSession_getset = { _wrap_classic_interface_RegSaleSession_get, 0 };
static SwigPyGetSet classic_interface_RegSaleReturnSession_getset = { _wrap_classic_interface_RegSaleReturnSession_get, 0 };
static SwigPyGetSet classic_interface_RegBuySession_getset = { _wrap_classic_interface_RegBuySession_get, 0 };
static SwigPyGetSet classic_interface_RegBuyReturnSession_getset = { _wrap_classic_interface_RegBuyReturnSession_get, 0 };
static SwigPyGetSet classic_interface_Summ15_getset = { _wrap_classic_interface_Summ15_get, _wrap_classic_interface_Summ15_set };
static SwigPyGetSet classic_interface_AutoOpenSession_getset = { _wrap_classic_interface_AutoOpenSession_get, _wrap_classic_interface_AutoOpenSession_set };
static SwigPyGetSet classic_interface_Summ16_getset = { _wrap_classic_interface_Summ16_get, _wrap_classic_interface_Summ16_set };
static SwigPyGetSet classic_interface_Summ17_getset = { _wrap_classic_interface_Summ17_get, _wrap_classic_interface_Summ17_set };
static SwigPyGetSet classic_interface_Summ18_getset = { _wrap_classic_interface_Summ18_get, _wrap_classic_interface_Summ18_set };
static SwigPyGetSet classic_interface_Summ19_getset = { _wrap_classic_interface_Summ19_get, _wrap_classic_interface_Summ19_set };
static SwigPyGetSet classic_interface_Denominator_getset = { _wrap_classic_interface_Denominator_get, _wrap_classic_interface_Denominator_set };
static SwigPyGetSet classic_interface_IsFMSessionOpen_getset = { _wrap_classic_interface_IsFMSessionOpen_get, 0 };
static SwigPyGetSet classic_interface_FMMode_getset = { _wrap_classic_interface_FMMode_get, 0 };
static SwigPyGetSet classic_interface_CutType_getset = { _wrap_classic_interface_CutType_get, _wrap_classic_interface_CutType_set };
static SwigPyGetSet classic_interface_LastKPKDate_getset = { _wrap_classic_interface_LastKPKDate_get, 0 };
static SwigPyGetSet classic_interface_QuantityPointPosition_getset = { _wrap_classic_interface_QuantityPointPosition_get, 0 };
static SwigPyGetSet classic_interface_PointPosition_getset = { _wrap_classic_interface_PointPosition_get, _wrap_classic_interface_PointPosition_set };
static SwigPyGetSet classic_interface_HRIPosition_getset = { _wrap_classic_interface_HRIPosition_get, _wrap_classic_interface_HRIPosition_set };
static SwigPyGetSet classic_interface_RequestType_getset = { _wrap_classic_interface_RequestType_get, _wrap_classic_interface_RequestType_set };
static SwigPyGetSet classic_interface_License_getset = { _wrap_classic_interface_License_get, _wrap_classic_interface_License_set };
static SwigPyGetSet classic_interface_OPIdPayment_getset = { _wrap_classic_interface_OPIdPayment_get, _wrap_classic_interface_OPIdPayment_set };
static SwigPyGetSet classic_interface_ReportType_getset = { _wrap_classic_interface_ReportType_get, _wrap_classic_interface_ReportType_set };
static SwigPyGetSet classic_interface_ECRBuild_getset = { _wrap_classic_interface_ECRBuild_get, 0 };
static SwigPyGetSet classic_interface_LastFMRecordType_getset = { _wrap_classic_interface_LastFMRecordType_get, 0 };
static SwigPyGetSet classic_interface_DBFilePath_getset = { _wrap_classic_interface_DBFilePath_get, _wrap_classic_interface_DBFilePath_set };
static SwigPyGetSet classic_interface_PresenterOut_getset = { _wrap_classic_interface_PresenterOut_get, 0 };
static SwigPyGetSet classic_interface_DigitalSign_getset = { _wrap_classic_interface_DigitalSign_get, _wrap_classic_interface_DigitalSign_set };
static SwigPyGetSet classic_interface_Summ20_getset = { _wrap_classic_interface_Summ20_get, _wrap_classic_interface_Summ20_set };
static SwigPyGetSet classic_interface_DocumentType_getset = { _wrap_classic_interface_DocumentType_get, _wrap_classic_interface_DocumentType_set };
static SwigPyGetSet classic_interface_FontType_getset = { _wrap_classic_interface_FontType_get, _wrap_classic_interface_FontType_set };
static SwigPyGetSet classic_interface_SaleError_getset = { _wrap_classic_interface_SaleError_get, _wrap_classic_interface_SaleError_set };
static SwigPyGetSet classic_interface_Summ3Font_getset = { _wrap_classic_interface_Summ3Font_get, _wrap_classic_interface_Summ3Font_set };
static SwigPyGetSet classic_interface_FieldType_getset = { _wrap_classic_interface_FieldType_get, 0 };
static SwigPyGetSet classic_interface_MAXValueOfField_getset = { _wrap_classic_interface_MAXValueOfField_get, 0 };
static SwigPyGetSet classic_interface_MINValueOfField_getset = { _wrap_classic_interface_MINValueOfField_get, 0 };
static SwigPyGetSet classic_interface_ComputerName_getset = { _wrap_classic_interface_ComputerName_get, _wrap_classic_interface_ComputerName_set };
static SwigPyGetSet classic_interface_LDComputerName_getset = { _wrap_classic_interface_LDComputerName_get, _wrap_classic_interface_LDComputerName_set };
static SwigPyGetSet classic_interface_SkipPrint_getset = { _wrap_classic_interface_SkipPrint_get, _wrap_classic_interface_SkipPrint_set };
static SwigPyGetSet classic_interface_NewPasswordTI_getset = { _wrap_classic_interface_NewPasswordTI_get, _wrap_classic_interface_NewPasswordTI_set };
static SwigPyGetSet classic_interface_FNSoftType_getset = { _wrap_classic_interface_FNSoftType_get, 0 };
static SwigPyGetSet classic_interface_TextFont_getset = { _wrap_classic_interface_TextFont_get, _wrap_classic_interface_TextFont_set };
static SwigPyGetSet classic_interface_ModelID_getset = { _wrap_classic_interface_ModelID_get, _wrap_classic_interface_ModelID_set };
static SwigPyGetSet classic_interface_FNArchiveType_getset = { _wrap_classic_interface_FNArchiveType_get, _wrap_classic_interface_FNArchiveType_set };
static SwigPyGetSet classic_interface_PaymentItemSign_getset = { _wrap_classic_interface_PaymentItemSign_get, _wrap_classic_interface_PaymentItemSign_set };
static SwigPyGetSet classic_interface_BanknoteType_getset = { _wrap_classic_interface_BanknoteType_get, 0 };
static SwigPyGetSet classic_interface_ChangeFont_getset = { _wrap_classic_interface_ChangeFont_get, _wrap_classic_interface_ChangeFont_set };
static SwigPyGetSet classic_interface_DelayedPrint_getset = { _wrap_classic_interface_DelayedPrint_get, _wrap_classic_interface_DelayedPrint_set };
static SwigPyGetSet classic_interface_LastKPKDateStr_getset = { _wrap_classic_interface_LastKPKDateStr_get, 0 };
static SwigPyGetSet classic_interface_UCodePageText_getset = { _wrap_classic_interface_UCodePageText_get, 0 };
static SwigPyGetSet classic_interface_MarkingTypeEx_getset = { _wrap_classic_interface_MarkingTypeEx_get, _wrap_classic_interface_MarkingTypeEx_set };
static SwigPyGetSet classic_interface_DepartmentFont_getset = { _wrap_classic_interface_DepartmentFont_get, _wrap_classic_interface_DepartmentFont_set };
static SwigPyGetSet classic_interface_NotificationSize_getset = { _wrap_classic_interface_NotificationSize_get, _wrap_classic_interface_NotificationSize_set };
static SwigPyGetSet classic_interface_PrintBarcodeText_getset = { _wrap_classic_interface_PrintBarcodeText_get, _wrap_classic_interface_PrintBarcodeText_set };
static SwigPyGetSet classic_interface_Summ4Font_getset = { _wrap_classic_interface_Summ4Font_get, _wrap_classic_interface_Summ4Font_set };
static SwigPyGetSet classic_interface_SKNOError_getset = { _wrap_classic_interface_SKNOError_get, _wrap_classic_interface_SKNOError_set };
static SwigPyGetSet classic_interface_PingResult_getset = { _wrap_classic_interface_PingResult_get, _wrap_classic_interface_PingResult_set };
static SwigPyGetSet classic_interface_CheckItemLocalError_getset = { _wrap_classic_interface_CheckItemLocalError_get, _wrap_classic_interface_CheckItemLocalError_set };
static SwigPyGetSet classic_interface_CashControlHost_getset = { _wrap_classic_interface_CashControlHost_get, _wrap_classic_interface_CashControlHost_set };
static SwigPyGetSet classic_interface_Change_getset = { _wrap_classic_interface_Change_get, 0 };
static SwigPyGetSet classic_interface_DriverBuild_getset = { _wrap_classic_interface_DriverBuild_get, 0 };
static SwigPyGetSet classic_interface_FiscalSign_getset = { _wrap_classic_interface_FiscalSign_get, _wrap_classic_interface_FiscalSign_set };
static SwigPyGetSet classic_interface_BarcodeType_getset = { _wrap_classic_interface_BarcodeType_get, _wrap_classic_interface_BarcodeType_set };
static SwigPyGetSet classic_interface_FMBuild_getset = { _wrap_classic_interface_FMBuild_get, 0 };
static SwigPyGetSet classic_interface_Tax4RateFont_getset = { _wrap_classic_interface_Tax4RateFont_get, _wrap_classic_interface_Tax4RateFont_set };
static SwigPyGetSet classic_interface_Tax3RateFont_getset = { _wrap_classic_interface_Tax3RateFont_get, _wrap_classic_interface_Tax3RateFont_set };
static SwigPyGetSet classic_interface_Tax2RateFont_getset = { _wrap_classic_interface_Tax2RateFont_get, _wrap_classic_interface_Tax2RateFont_set };
static SwigPyGetSet classic_interface_Tax1RateFont_getset = { _wrap_classic_interface_Tax1RateFont_get, _wrap_classic_interface_Tax1RateFont_set };
static SwigPyGetSet classic_interface_BlockData_getset = { _wrap_classic_interface_BlockData_get, _wrap_classic_interface_BlockData_set };
static SwigPyGetSet classic_interface_MethodName_getset = { _wrap_classic_interface_MethodName_get, _wrap_classic_interface_MethodName_set };
static SwigPyGetSet classic_interface_RegistrationReasonCode_getset = { _wrap_classic_interface_RegistrationReasonCode_get, _wrap_classic_interface_RegistrationReasonCode_set };
static SwigPyGetSet classic_interface_PermitActivizationCode_getset = { _wrap_classic_interface_PermitActivizationCode_get, _wrap_classic_interface_PermitActivizationCode_set };
static SwigPyGetSet classic_interface_Tax4NameFont_getset = { _wrap_classic_interface_Tax4NameFont_get, _wrap_classic_interface_Tax4NameFont_set };
static SwigPyGetSet classic_interface_Tax3NameFont_getset = { _wrap_classic_interface_Tax3NameFont_get, _wrap_classic_interface_Tax3NameFont_set };
static SwigPyGetSet classic_interface_Tax2NameFont_getset = { _wrap_classic_interface_Tax2NameFont_get, _wrap_classic_interface_Tax2NameFont_set };
static SwigPyGetSet classic_interface_Tax1NameFont_getset = { _wrap_classic_interface_Tax1NameFont_get, _wrap_classic_interface_Tax1NameFont_set };
static SwigPyGetSet classic_interface_Summ4NameFont_getset = { _wrap_classic_interface_Summ4NameFont_get, _wrap_classic_interface_Summ4NameFont_set };
static SwigPyGetSet classic_interface_Summ3NameFont_getset = { _wrap_classic_interface_Summ3NameFont_get, _wrap_classic_interface_Summ3NameFont_set };
static SwigPyGetSet classic_interface_Summ2NameFont_getset = { _wrap_classic_interface_Summ2NameFont_get, _wrap_classic_interface_Summ2NameFont_set };
static SwigPyGetSet classic_interface_Summ1NameFont_getset = { _wrap_classic_interface_Summ1NameFont_get, _wrap_classic_interface_Summ1NameFont_set };
static SwigPyGetSet classic_interface_OperationNameFont_getset = { _wrap_classic_interface_OperationNameFont_get, _wrap_classic_interface_OperationNameFont_set };
static SwigPyGetSet classic_interface_IsLastFMRecordCorrupted_getset = { _wrap_classic_interface_IsLastFMRecordCorrupted_get, 0 };
static SwigPyGetSet classic_interface_QuantityOfOperations_getset = { _wrap_classic_interface_QuantityOfOperations_get, 0 };
static SwigPyGetSet classic_interface_TagType_getset = { _wrap_classic_interface_TagType_get, _wrap_classic_interface_TagType_set };
static SwigPyGetSet classic_interface_FiscalSignAsString_getset = { _wrap_classic_interface_FiscalSignAsString_get, 0 };
static SwigPyGetSet classic_interface_ClicheFont_getset = { _wrap_classic_interface_ClicheFont_get, _wrap_classic_interface_ClicheFont_set };
static SwigPyGetSet classic_interface_ECRID_getset = { _wrap_classic_interface_ECRID_get, _wrap_classic_interface_ECRID_set };
static SwigPyGetSet classic_interface_PosControlReceiptSeparator_getset = { _wrap_classic_interface_PosControlReceiptSeparator_get, _wrap_classic_interface_PosControlReceiptSeparator_set };
static SwigPyGetSet classic_interface_MarkingType2_getset = { _wrap_classic_interface_MarkingType2_get, _wrap_classic_interface_MarkingType2_set };
static SwigPyGetSet classic_interface_FN5YearResource_getset = { _wrap_classic_interface_FN5YearResource_get, _wrap_classic_interface_FN5YearResource_set };
static SwigPyGetSet classic_interface_FN30DayResource_getset = { _wrap_classic_interface_FN30DayResource_get, _wrap_classic_interface_FN30DayResource_set };
static SwigPyGetSet classic_interface_ReceiptRibbonLever_getset = { _wrap_classic_interface_ReceiptRibbonLever_get, 0 };
static SwigPyGetSet classic_interface_JournalRibbonLever_getset = { _wrap_classic_interface_JournalRibbonLever_get, 0 };
static SwigPyGetSet classic_interface_PriceFont_getset = { _wrap_classic_interface_PriceFont_get, _wrap_classic_interface_PriceFont_set };
static SwigPyGetSet classic_interface_CheckSum_getset = { _wrap_classic_interface_CheckSum_get, _wrap_classic_interface_CheckSum_set };
static SwigPyGetSet classic_interface_TranslationEnabled_getset = { _wrap_classic_interface_TranslationEnabled_get, _wrap_classic_interface_TranslationEnabled_set };
static SwigPyGetSet classic_interface_TaxValue1Enabled_getset = { _wrap_classic_interface_TaxValue1Enabled_get, _wrap_classic_interface_TaxValue1Enabled_set };
static SwigPyGetSet classic_interface_CashControlEnabled_getset = { _wrap_classic_interface_CashControlEnabled_get, _wrap_classic_interface_CashControlEnabled_set };
static SwigPyGetSet classic_interface_CloudCashdeskEnabled_getset = { _wrap_classic_interface_CloudCashdeskEnabled_get, _wrap_classic_interface_CloudCashdeskEnabled_set };
static SwigPyGetSet classic_interface_JournalEnabled_getset = { _wrap_classic_interface_JournalEnabled_get, _wrap_classic_interface_JournalEnabled_set };
static SwigPyGetSet classic_interface_MobilePayEnabled_getset = { _wrap_classic_interface_MobilePayEnabled_get, _wrap_classic_interface_MobilePayEnabled_set };
static SwigPyGetSet classic_interface_IBMStatusByte1_getset = { _wrap_classic_interface_IBMStatusByte1_get, 0 };
static SwigPyGetSet classic_interface_IBMStatusByte2_getset = { _wrap_classic_interface_IBMStatusByte2_get, 0 };
static SwigPyGetSet classic_interface_IBMStatusByte3_getset = { _wrap_classic_interface_IBMStatusByte3_get, 0 };
static SwigPyGetSet classic_interface_CashControlUseTCP_getset = { _wrap_classic_interface_CashControlUseTCP_get, _wrap_classic_interface_CashControlUseTCP_set };
static SwigPyGetSet classic_interface_StringForPrinting_getset = { _wrap_classic_interface_StringForPrinting_get, _wrap_classic_interface_StringForPrinting_set };
static SwigPyGetSet classic_interface_CheckItemLocalResult_getset = { _wrap_classic_interface_CheckItemLocalResult_get, _wrap_classic_interface_CheckItemLocalResult_set };
static SwigPyGetSet classic_interface_LastKPKDocumentResult_getset = { _wrap_classic_interface_LastKPKDocumentResult_get, 0 };
static SwigPyGetSet classic_interface_LastPrintResult_getset = { _wrap_classic_interface_LastPrintResult_get, 0 };
static SwigPyGetSet classic_interface_IBMStatusByte4_getset = { _wrap_classic_interface_IBMStatusByte4_get, 0 };
static SwigPyGetSet classic_interface_IBMStatusByte5_getset = { _wrap_classic_interface_IBMStatusByte5_get, 0 };
static SwigPyGetSet classic_interface_CalculationSign_getset = { _wrap_classic_interface_CalculationSign_get, _wrap_classic_interface_CalculationSign_set };
static SwigPyGetSet classic_interface_IBMStatusByte6_getset = { _wrap_classic_interface_IBMStatusByte6_get, 0 };
static SwigPyGetSet classic_interface_IBMStatusByte7_getset = { _wrap_classic_interface_IBMStatusByte7_get, 0 };
static SwigPyGetSet classic_interface_IBMStatusByte8_getset = { _wrap_classic_interface_IBMStatusByte8_get, 0 };
static SwigPyGetSet classic_interface_ReconnectPort_getset = { _wrap_classic_interface_ReconnectPort_get, _wrap_classic_interface_ReconnectPort_set };
static SwigPyGetSet classic_interface_TableName_getset = { _wrap_classic_interface_TableName_get, 0 };
static SwigPyGetSet classic_interface_NumberOfCopies_getset = { _wrap_classic_interface_NumberOfCopies_get, _wrap_classic_interface_NumberOfCopies_set };
static SwigPyGetSet classic_interface_ServerConnected_getset = { _wrap_classic_interface_ServerConnected_get, 0 };
static SwigPyGetSet classic_interface_Connected_getset = { _wrap_classic_interface_Connected_get, _wrap_classic_interface_Connected_set };
static SwigPyGetSet classic_interface_FiscalSignOFD_getset = { _wrap_classic_interface_FiscalSignOFD_get, _wrap_classic_interface_FiscalSignOFD_set };
static SwigPyGetSet classic_interface_TagValueStr_getset = { _wrap_classic_interface_TagValueStr_get, _wrap_classic_interface_TagValueStr_set };
static SwigPyGetSet classic_interface_ActivizationControlByte_getset = { _wrap_classic_interface_ActivizationControlByte_get, _wrap_classic_interface_ActivizationControlByte_set };
static SwigPyGetSet classic_interface_WaitForPrintingDelay_getset = { _wrap_classic_interface_WaitForPrintingDelay_get, _wrap_classic_interface_WaitForPrintingDelay_set };
static SwigPyGetSet classic_interface_MarkingType_getset = { _wrap_classic_interface_MarkingType_get, _wrap_classic_interface_MarkingType_set };
static SwigPyGetSet classic_interface_BufferingType_getset = { _wrap_classic_interface_BufferingType_get, _wrap_classic_interface_BufferingType_set };
static SwigPyGetSet classic_interface_CheckingType_getset = { _wrap_classic_interface_CheckingType_get, _wrap_classic_interface_CheckingType_set };
static SwigPyGetSet classic_interface_CarryStrings_getset = { _wrap_classic_interface_CarryStrings_get, _wrap_classic_interface_CarryStrings_set };
static SwigPyGetSet classic_interface_WrapStrings_getset = { _wrap_classic_interface_WrapStrings_get, _wrap_classic_interface_WrapStrings_set };
static SwigPyGetSet classic_interface_TaxType_getset = { _wrap_classic_interface_TaxType_get, _wrap_classic_interface_TaxType_set };
static SwigPyGetSet classic_interface_EscapePort_getset = { _wrap_classic_interface_EscapePort_get, _wrap_classic_interface_EscapePort_set };
static SwigPyGetSet classic_interface_LDEscapePort_getset = { _wrap_classic_interface_LDEscapePort_get, _wrap_classic_interface_LDEscapePort_set };
static SwigPyGetSet classic_interface_ECRMode_getset = { _wrap_classic_interface_ECRMode_get, 0 };
static SwigPyGetSet classic_interface_INN_getset = { _wrap_classic_interface_INN_get, _wrap_classic_interface_INN_set };
static SwigPyGetSet classic_interface_DocumentName_getset = { _wrap_classic_interface_DocumentName_get, _wrap_classic_interface_DocumentName_set };
static SwigPyGetSet classic_interface_CommandName_getset = { _wrap_classic_interface_CommandName_get, 0 };
static SwigPyGetSet classic_interface_CopyOffset1_getset = { _wrap_classic_interface_CopyOffset1_get, _wrap_classic_interface_CopyOffset1_set };
static SwigPyGetSet classic_interface_CopyOffset2_getset = { _wrap_classic_interface_CopyOffset2_get, _wrap_classic_interface_CopyOffset2_set };
static SwigPyGetSet classic_interface_CopyOffset3_getset = { _wrap_classic_interface_CopyOffset3_get, _wrap_classic_interface_CopyOffset3_set };
static SwigPyGetSet classic_interface_PortLocked_getset = { _wrap_classic_interface_PortLocked_get, 0 };
static SwigPyGetSet classic_interface_CopyOffset4_getset = { _wrap_classic_interface_CopyOffset4_get, _wrap_classic_interface_CopyOffset4_set };
static SwigPyGetSet classic_interface_FieldName_getset = { _wrap_classic_interface_FieldName_get, 0 };
static SwigPyGetSet classic_interface_CopyOffset5_getset = { _wrap_classic_interface_CopyOffset5_get, _wrap_classic_interface_CopyOffset5_set };
static SwigPyGetSet classic_interface_NameCashRegEx_getset = { _wrap_classic_interface_NameCashRegEx_get, 0 };
static SwigPyGetSet classic_interface_LDName_getset = { _wrap_classic_interface_LDName_get, _wrap_classic_interface_LDName_set };
static SwigPyGetSet classic_interface_LogOn_getset = { _wrap_classic_interface_LogOn_get, _wrap_classic_interface_LogOn_set };
static SwigPyGetSet classic_interface_PresenterIn_getset = { _wrap_classic_interface_PresenterIn_get, 0 };
static SwigPyGetSet classic_interface_Numerator_getset = { _wrap_classic_interface_Numerator_get, _wrap_classic_interface_Numerator_set };
static SwigPyGetSet classic_interface_ValueOfFunctionString_getset = { _wrap_classic_interface_ValueOfFunctionString_get, _wrap_classic_interface_ValueOfFunctionString_set };
static SwigPyGetSet classic_interface_ValueOfFieldString_getset = { _wrap_classic_interface_ValueOfFieldString_get, _wrap_classic_interface_ValueOfFieldString_set };
static SwigPyGetSet classic_interface_OperationBlockFirstString_getset = { _wrap_classic_interface_OperationBlockFirstString_get, _wrap_classic_interface_OperationBlockFirstString_set };
static SwigPyGetSet classic_interface_ReportTypeInt_getset = { _wrap_classic_interface_ReportTypeInt_get, _wrap_classic_interface_ReportTypeInt_set };
static SwigPyGetSet classic_interface_UseCommandTimeout_getset = { _wrap_classic_interface_UseCommandTimeout_get, _wrap_classic_interface_UseCommandTimeout_set };
static SwigPyGetSet classic_interface_Timeout_getset = { _wrap_classic_interface_Timeout_get, _wrap_classic_interface_Timeout_set };
static SwigPyGetSet classic_interface_TCPConnectionTimeout_getset = { _wrap_classic_interface_TCPConnectionTimeout_get, _wrap_classic_interface_TCPConnectionTimeout_set };
static SwigPyGetSet classic_interface_SyncTimeout_getset = { _wrap_classic_interface_SyncTimeout_get, _wrap_classic_interface_SyncTimeout_set };
static SwigPyGetSet classic_interface_SearchTimeout_getset = { _wrap_classic_interface_SearchTimeout_get, _wrap_classic_interface_SearchTimeout_set };
static SwigPyGetSet classic_interface_ConnectionTimeout_getset = { _wrap_classic_interface_ConnectionTimeout_get, _wrap_classic_interface_ConnectionTimeout_set };
static SwigPyGetSet classic_interface_AdjustRITimeout_getset = { _wrap_classic_interface_AdjustRITimeout_get, _wrap_classic_interface_AdjustRITimeout_set };
static SwigPyGetSet classic_interface_CommandDefTimeout_getset = { _wrap_classic_interface_CommandDefTimeout_get, 0 };
static SwigPyGetSet classic_interface_CommandTimeout_getset = { _wrap_classic_interface_CommandTimeout_get, _wrap_classic_interface_CommandTimeout_set };
static SwigPyGetSet classic_interface_EscapeTimeout_getset = { _wrap_classic_interface_EscapeTimeout_get, _wrap_classic_interface_EscapeTimeout_set };
static SwigPyGetSet classic_interface_LDEscapeTimeout_getset = { _wrap_classic_interface_LDEscapeTimeout_get, _wrap_classic_interface_LDEscapeTimeout_set };
static SwigPyGetSet classic_interface_LDTimeout_getset = { _wrap_classic_interface_LDTimeout_get, _wrap_classic_interface_LDTimeout_set };
static SwigPyGetSet classic_interface_LockTimeout_getset = { _wrap_classic_interface_LockTimeout_get, _wrap_classic_interface_LockTimeout_set };
static SwigPyGetSet classic_interface_WaitForPrintingTimeout_getset = { _wrap_classic_interface_WaitForPrintingTimeout_get, _wrap_classic_interface_WaitForPrintingTimeout_set };
static SwigPyGetSet classic_interface_CrptCdnListUrl_getset = { _wrap_classic_interface_CrptCdnListUrl_get, _wrap_classic_interface_CrptCdnListUrl_set };
static SwigPyGetSet classic_interface_UserAttributeName_getset = { _wrap_classic_interface_UserAttributeName_get, _wrap_classic_interface_UserAttributeName_set };
static SwigPyGetSet classic_interface_IsDrawerOpen_getset = { _wrap_classic_interface_IsDrawerOpen_get, 0 };
static SwigPyGetSet classic_interface_RunningPeriod_getset = { _wrap_classic_interface_RunningPeriod_get, _wrap_classic_interface_RunningPeriod_set };
static SwigPyGetSet classic_interface_Summ1_getset = { _wrap_classic_interface_Summ1_get, _wrap_classic_interface_Summ1_set };
static SwigPyGetSet classic_interface_ccUseTextAsWareName_getset = { _wrap_classic_interface_ccUseTextAsWareName_get, _wrap_classic_interface_ccUseTextAsWareName_set };
static SwigPyGetSet classic_interface_SwapBytesMode_getset = { _wrap_classic_interface_SwapBytesMode_get, _wrap_classic_interface_SwapBytesMode_set };
static SwigPyGetSet classic_interface_Summ2_getset = { _wrap_classic_interface_Summ2_get, _wrap_classic_interface_Summ2_set };
static SwigPyGetSet classic_interface_PrintJournalBeforeZReport_getset = { _wrap_classic_interface_PrintJournalBeforeZReport_get, _wrap_classic_interface_PrintJournalBeforeZReport_set };
static SwigPyGetSet classic_interface_Summ3_getset = { _wrap_classic_interface_Summ3_get, _wrap_classic_interface_Summ3_set };
static SwigPyGetSet classic_interface_Summ4_getset = { _wrap_classic_interface_Summ4_get, _wrap_classic_interface_Summ4_set };
static SwigPyGetSet classic_interface___dict___getset = { SwigPyObject_get___dict__, 0 };
static SwigPyGetSet classic_interface_Summ5_getset = { _wrap_classic_interface_Summ5_get, _wrap_classic_interface_Summ5_set };
static SwigPyGetSet classic_interface_Summ6_getset = { _wrap_classic_interface_Summ6_get, _wrap_classic_interface_Summ6_set };
static SwigPyGetSet classic_interface_Summ7_getset = { _wrap_classic_interface_Summ7_get, _wrap_classic_interface_Summ7_set };
static SwigPyGetSet classic_interface_FirstSessionDate_getset = { _wrap_classic_interface_FirstSessionDate_get, _wrap_classic_interface_FirstSessionDate_set };
static SwigPyGetSet classic_interface_LastSessionDate_getset = { _wrap_classic_interface_LastSessionDate_get, _wrap_classic_interface_LastSessionDate_set };
static SwigPyGetSet classic_interface_Summ8_getset = { _wrap_classic_interface_Summ8_get, _wrap_classic_interface_Summ8_set };
static SwigPyGetSet classic_interface_TransferBytes_getset = { _wrap_classic_interface_TransferBytes_get, _wrap_classic_interface_TransferBytes_set };
static SwigPyGetSet classic_interface_Summ9_getset = { _wrap_classic_interface_Summ9_get, _wrap_classic_interface_Summ9_set };
static SwigPyGetSet classic_interface_CommandRetryCount_getset = { _wrap_classic_interface_CommandRetryCount_get, _wrap_classic_interface_CommandRetryCount_set };
static SwigPyGetSet classic_interface_KMServerErrorCode_getset = { _wrap_classic_interface_KMServerErrorCode_get, _wrap_classic_interface_KMServerErrorCode_set };
static SwigPyGetSet classic_interface_ErrorCode_getset = { _wrap_classic_interface_ErrorCode_get, _wrap_classic_interface_ErrorCode_set };
static SwigPyGetSet classic_interface_FileName_getset = { _wrap_classic_interface_FileName_get, _wrap_classic_interface_FileName_set };
static SwigPyGetSet classic_interface_LineSwapBytes_getset = { _wrap_classic_interface_LineSwapBytes_get, _wrap_classic_interface_LineSwapBytes_set };
static SwigPyGetSet classic_interface_BaudRate_getset = { _wrap_classic_interface_BaudRate_get, _wrap_classic_interface_BaudRate_set };
static SwigPyGetSet classic_interface_RoundingSumm_getset = { _wrap_classic_interface_RoundingSumm_get, _wrap_classic_interface_RoundingSumm_set };
static SwigPyGetSet classic_interface_IBMSessionSec_getset = { _wrap_classic_interface_IBMSessionSec_get, 0 };
static SwigPyGetSet classic_interface_IsCorruptedFMRecords_getset = { _wrap_classic_interface_IsCorruptedFMRecords_get, 0 };
static SwigPyGetSet classic_interface_DocumentCount_getset = { _wrap_classic_interface_DocumentCount_get, _wrap_classic_interface_DocumentCount_set };
static SwigPyGetSet classic_interface_FontCount_getset = { _wrap_classic_interface_FontCount_get, 0 };
static SwigPyGetSet classic_interface_ModelsCount_getset = { _wrap_classic_interface_ModelsCount_get, 0 };
static SwigPyGetSet classic_interface_ConnectionURI_getset = { _wrap_classic_interface_ConnectionURI_get, _wrap_classic_interface_ConnectionURI_set };
static SwigPyGetSet classic_interface_IsASPDMode_getset = { _wrap_classic_interface_IsASPDMode_get, 0 };
static SwigPyGetSet classic_interface_TagValueFVLN_getset = { _wrap_classic_interface_TagValueFVLN_get, _wrap_classic_interface_TagValueFVLN_set };
static SwigPyGetSet classic_interface_IBMSessionDay_getset = { _wrap_classic_interface_IBMSessionDay_get, 0 };
SWIGINTERN PyGetSetDef SwigPyBuiltin__kkt_driver__classic_interface_getset[] = {
    { (char *)"CopyType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CopyType_getset },
    { (char *)"BarCode", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_BarCode_getset },
    { (char *)"Time", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Time_getset },
    { (char *)"ECRTime", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ECRTime_getset },
    { (char *)"BanknoteCount", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_BanknoteCount_getset },
    { (char *)"ccHeaderLineCount", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ccHeaderLineCount_getset },
    { (char *)"FeedLineCount", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_FeedLineCount_getset },
    { (char *)"LogMaxFileCount", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LogMaxFileCount_getset },
    { (char *)"RecordCount", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_RecordCount_getset },
    { (char *)"CommandCount", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_CommandCount_getset },
    { (char *)"LDBaudrate", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LDBaudrate_getset },
    { (char *)"EKLZFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_EKLZFont_getset },
    { (char *)"QuantityFormat", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_QuantityFormat_getset },
    { (char *)"UDescription", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_UDescription_getset },
    { (char *)"TagDescription", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TagDescription_getset },
    { (char *)"ResultCodeDescription", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ResultCodeDescription_getset },
    { (char *)"RequestErrorDescription", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_RequestErrorDescription_getset },
    { (char *)"ErrorDescription", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ErrorDescription_getset },
    { (char *)"ECRModeDescription", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ECRModeDescription_getset },
    { (char *)"ECRAdvancedModeDescription", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ECRAdvancedModeDescription_getset },
    { (char *)"DeviceCodeDescription", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_DeviceCodeDescription_getset },
    { (char *)"ModelParamDescription", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ModelParamDescription_getset },
    { (char *)"QuantityFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_QuantityFont_getset },
    { (char *)"IBMSessionMin", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IBMSessionMin_getset },
    { (char *)"Poll1", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_Poll1_getset },
    { (char *)"Poll2", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_Poll2_getset },
    { (char *)"SlipStringInterval", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SlipStringInterval_getset },
    { (char *)"JournalRowCount", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_JournalRowCount_getset },
    { (char *)"PrintingAlignment", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_PrintingAlignment_getset },
    { (char *)"BarcodeAlignment", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_BarcodeAlignment_getset },
    { (char *)"FNImplementation", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_FNImplementation_getset },
    { (char *)"FinishDocumentMode", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_FinishDocumentMode_getset },
    { (char *)"UCodePage", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_UCodePage_getset },
    { (char *)"CodePage", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CodePage_getset },
    { (char *)"IBMSessionHour", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IBMSessionHour_getset },
    { (char *)"FreeRegistration", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_FreeRegistration_getset },
    { (char *)"RegSaleRec", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_RegSaleRec_getset },
    { (char *)"CustomerCode", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CustomerCode_getset },
    { (char *)"AnswerCode", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_AnswerCode_getset },
    { (char *)"NotificationCount", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_NotificationCount_getset },
    { (char *)"MCRealizationCount", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_MCRealizationCount_getset },
    { (char *)"PrepareActivizationRemainCount", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_PrepareActivizationRemainCount_getset },
    { (char *)"KPKFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_KPKFont_getset },
    { (char *)"ModelParamCount", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ModelParamCount_getset },
    { (char *)"PropertyName", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_PropertyName_getset },
    { (char *)"IsFM24HoursOver", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IsFM24HoursOver_getset },
    { (char *)"JournalText", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_JournalText_getset },
    { (char *)"FMOverflow", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_FMOverflow_getset },
    { (char *)"IsEKLZOverflow", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IsEKLZOverflow_getset },
    { (char *)"ECRAdvancedMode", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ECRAdvancedMode_getset },
    { (char *)"RandomSequence", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_RandomSequence_getset },
    { (char *)"MessageCount", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_MessageCount_getset },
    { (char *)"MCCheckResultSavedCount", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_MCCheckResultSavedCount_getset },
    { (char *)"LDCount", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_LDCount_getset },
    { (char *)"DiscountValue", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DiscountValue_getset },
    { (char *)"DocumentSize", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DocumentSize_getset },
    { (char *)"Date", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Date_getset },
    { (char *)"PrintBufferFormat", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_PrintBufferFormat_getset },
    { (char *)"UseIPAddress", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_UseIPAddress_getset },
    { (char *)"IPAddress", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_IPAddress_getset },
    { (char *)"LDIPAddress", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LDIPAddress_getset },
    { (char *)"LDUseIPAddress", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LDUseIPAddress_getset },
    { (char *)"FieldSize", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_FieldSize_getset },
    { (char *)"CustomerEmail", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CustomerEmail_getset },
    { (char *)"ECRDate", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ECRDate_getset },
    { (char *)"VertScale", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_VertScale_getset },
    { (char *)"UseTaxDiscountBel", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_UseTaxDiscountBel_getset },
    { (char *)"BlockType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_BlockType_getset },
    { (char *)"CheckType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CheckType_getset },
    { (char *)"OPRequisiteValue", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_OPRequisiteValue_getset },
    { (char *)"AttributeValue", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_AttributeValue_getset },
    { (char *)"UserAttributeValue", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_UserAttributeValue_getset },
    { (char *)"TransmitQueueSize", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_TransmitQueueSize_getset },
    { (char *)"OFDTicketReceived", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_OFDTicketReceived_getset },
    { (char *)"StringQuantityInOperation", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_StringQuantityInOperation_getset },
    { (char *)"TextBlock", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TextBlock_getset },
    { (char *)"CommandCode", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_CommandCode_getset },
    { (char *)"ProtocolType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ProtocolType_getset },
    { (char *)"LDProtocolType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LDProtocolType_getset },
    { (char *)"ResultCode", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ResultCode_getset },
    { (char *)"EKLZResultCode", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_EKLZResultCode_getset },
    { (char *)"FMResultCode", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_FMResultCode_getset },
    { (char *)"LineData2", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LineData2_getset },
    { (char *)"TotalFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TotalFont_getset },
    { (char *)"SubTotalFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SubTotalFont_getset },
    { (char *)"KMServerCheckingStatus", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_KMServerCheckingStatus_getset },
    { (char *)"ItemStatus", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ItemStatus_getset },
    { (char *)"MCCheckStatus", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_MCCheckStatus_getset },
    { (char *)"SKNOStatus", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SKNOStatus_getset },
    { (char *)"ECRModeStatus", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ECRModeStatus_getset },
    { (char *)"InfoExchangeStatus", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_InfoExchangeStatus_getset },
    { (char *)"ShowProgress", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ShowProgress_getset },
    { (char *)"MCOSUSign", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_MCOSUSign_getset },
    { (char *)"LogMaxFileSize", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LogMaxFileSize_getset },
    { (char *)"Price", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Price_getset },
    { (char *)"PowerSourceVoltage", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_PowerSourceVoltage_getset },
    { (char *)"BatteryVoltage", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_BatteryVoltage_getset },
    { (char *)"MCStorageSize", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_MCStorageSize_getset },
    { (char *)"DiscountOnCheckFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DiscountOnCheckFont_getset },
    { (char *)"ParameterValue", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ParameterValue_getset },
    { (char *)"HorizScale", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_HorizScale_getset },
    { (char *)"ExciseCode", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ExciseCode_getset },
    { (char *)"WareCode", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_WareCode_getset },
    { (char *)"UseWareCode", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_UseWareCode_getset },
    { (char *)"DataBlock", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_DataBlock_getset },
    { (char *)"CashControlPort", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CashControlPort_getset },
    { (char *)"ModelParamValue", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ModelParamValue_getset },
    { (char *)"OPSystem", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_OPSystem_getset },
    { (char *)"EjectDirection", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_EjectDirection_getset },
    { (char *)"CheckEJConnection", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CheckEJConnection_getset },
    { (char *)"CheckFMConnection", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CheckFMConnection_getset },
    { (char *)"IntervalValue", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_IntervalValue_getset },
    { (char *)"KPKValue", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_KPKValue_getset },
    { (char *)"TagValueDateTime", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TagValueDateTime_getset },
    { (char *)"IBMSessionDateTime", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IBMSessionDateTime_getset },
    { (char *)"SlipStringIntervals", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SlipStringIntervals_getset },
    { (char *)"SlipEqualStringIntervals", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SlipEqualStringIntervals_getset },
    { (char *)"ChargeValue", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ChargeValue_getset },
    { (char *)"CashAcceptorPollingMode", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_CashAcceptorPollingMode_getset },
    { (char *)"CrptCheck", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CrptCheck_getset },
    { (char *)"TypeOfLastEntryFMEx", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_TypeOfLastEntryFMEx_getset },
    { (char *)"Tax1", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax1_getset },
    { (char *)"Tax2", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax2_getset },
    { (char *)"DeviceCode", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DeviceCode_getset },
    { (char *)"Tax3", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax3_getset },
    { (char *)"Tax4", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax4_getset },
    { (char *)"DeclarativeOutput", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DeclarativeOutput_getset },
    { (char *)"TimeStr", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TimeStr_getset },
    { (char *)"LastKPKTimeStr", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_LastKPKTimeStr_getset },
    { (char *)"ContentsOfOperationRegister", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ContentsOfOperationRegister_getset },
    { (char *)"ContentsOfCashRegister", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ContentsOfCashRegister_getset },
    { (char *)"CenterImage", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CenterImage_getset },
    { (char *)"MCNotificationStatus", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_MCNotificationStatus_getset },
    { (char *)"TransmitStatus", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_TransmitStatus_getset },
    { (char *)"OPTransactionStatus", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_OPTransactionStatus_getset },
    { (char *)"ECRMode8Status", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ECRMode8Status_getset },
    { (char *)"CapGetShortECRStatus", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_CapGetShortECRStatus_getset },
    { (char *)"ActivizationStatus", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ActivizationStatus_getset },
    { (char *)"MFPStatus", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_MFPStatus_getset },
    { (char *)"FNOSUSupportStatus", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_FNOSUSupportStatus_getset },
    { (char *)"SlipDocumentIsMoving", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_SlipDocumentIsMoving_getset },
    { (char *)"TotalSumFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TotalSumFont_getset },
    { (char *)"Tax4SumFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax4SumFont_getset },
    { (char *)"Tax3SumFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax3SumFont_getset },
    { (char *)"Tax2SumFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax2SumFont_getset },
    { (char *)"Tax1SumFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax1SumFont_getset },
    { (char *)"SubTotalSumFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SubTotalSumFont_getset },
    { (char *)"DiscountOnCheckSumFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DiscountOnCheckSumFont_getset },
    { (char *)"ChangeSumFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ChangeSumFont_getset },
    { (char *)"DivisionalQuantity", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DivisionalQuantity_getset },
    { (char *)"StringQuantity", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_StringQuantity_getset },
    { (char *)"Quantity", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Quantity_getset },
    { (char *)"FNLifeState", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_FNLifeState_getset },
    { (char *)"RandomSequenceHex", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_RandomSequenceHex_getset },
    { (char *)"PaymentTypeSign", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_PaymentTypeSign_getset },
    { (char *)"InfoType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_InfoType_getset },
    { (char *)"FontHashHex", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_FontHashHex_getset },
    { (char *)"OPTransactionType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_OPTransactionType_getset },
    { (char *)"OperationType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_OperationType_getset },
    { (char *)"CorrectionType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CorrectionType_getset },
    { (char *)"ConnectionType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ConnectionType_getset },
    { (char *)"LDConnectionType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LDConnectionType_getset },
    { (char *)"SummFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SummFont_getset },
    { (char *)"CashControlProtocols", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_CashControlProtocols_getset },
    { (char *)"FNDocumentData", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_FNDocumentData_getset },
    { (char *)"FreeRecordInFM", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_FreeRecordInFM_getset },
    { (char *)"IBMSessionMonth", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IBMSessionMonth_getset },
    { (char *)"ECRFlags", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ECRFlags_getset },
    { (char *)"RegBuyRec", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_RegBuyRec_getset },
    { (char *)"DataBlockHex", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_DataBlockHex_getset },
    { (char *)"URL", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_URL_getset },
    { (char *)"TypeOfLastEntryFM", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_TypeOfLastEntryFM_getset },
    { (char *)"TaxValue1", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TaxValue1_getset },
    { (char *)"TaxValue2", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TaxValue2_getset },
    { (char *)"TaxValue3", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TaxValue3_getset },
    { (char *)"TaxValue4", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TaxValue4_getset },
    { (char *)"TaxValue5", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TaxValue5_getset },
    { (char *)"TaxValue6", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TaxValue6_getset },
    { (char *)"TaxValue7", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TaxValue7_getset },
    { (char *)"TaxValue8", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TaxValue8_getset },
    { (char *)"TaxValue9", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TaxValue9_getset },
    { (char *)"Time2", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Time2_getset },
    { (char *)"ECRSoftDate", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ECRSoftDate_getset },
    { (char *)"FMSoftDate", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_FMSoftDate_getset },
    { (char *)"BarcodeHex", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_BarcodeHex_getset },
    { (char *)"NameOperationReg", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_NameOperationReg_getset },
    { (char *)"FNSessionState", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_FNSessionState_getset },
    { (char *)"FNWarningFlags", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_FNWarningFlags_getset },
    { (char *)"FMFlagsEx", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_FMFlagsEx_getset },
    { (char *)"MultiplicationFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_MultiplicationFont_getset },
    { (char *)"TagValueInt", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TagValueInt_getset },
    { (char *)"UseSlipCheck", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_UseSlipCheck_getset },
    { (char *)"MCCommandFlags", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_MCCommandFlags_getset },
    { (char *)"ECROutput", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ECROutput_getset },
    { (char *)"TaxValue10", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TaxValue10_getset },
    { (char *)"DiscountOnCheck", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DiscountOnCheck_getset },
    { (char *)"MeasureUnit", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_MeasureUnit_getset },
    { (char *)"CrptToken", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CrptToken_getset },
    { (char *)"UModel", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_UModel_getset },
    { (char *)"LineData", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LineData_getset },
    { (char *)"PingTime", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_PingTime_getset },
    { (char *)"ECRInput", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ECRInput_getset },
    { (char *)"MessageState", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_MessageState_getset },
    { (char *)"MessageNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_MessageNumber_getset },
    { (char *)"TotalStringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TotalStringNumber_getset },
    { (char *)"TextStringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TextStringNumber_getset },
    { (char *)"TextBlockNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TextBlockNumber_getset },
    { (char *)"Tax4TurnOverStringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax4TurnOverStringNumber_getset },
    { (char *)"Tax4SumStringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax4SumStringNumber_getset },
    { (char *)"Tax3TurnOverStringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax3TurnOverStringNumber_getset },
    { (char *)"Tax3SumStringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax3SumStringNumber_getset },
    { (char *)"Tax2TurnOverStringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax2TurnOverStringNumber_getset },
    { (char *)"Tax2SumStringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax2SumStringNumber_getset },
    { (char *)"Tax1TurnOverStringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax1TurnOverStringNumber_getset },
    { (char *)"Tax1SumStringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax1SumStringNumber_getset },
    { (char *)"TagNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TagNumber_getset },
    { (char *)"TableNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TableNumber_getset },
    { (char *)"SummStringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SummStringNumber_getset },
    { (char *)"Summ4StringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ4StringNumber_getset },
    { (char *)"Summ3StringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ3StringNumber_getset },
    { (char *)"Summ2StringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ2StringNumber_getset },
    { (char *)"Summ1StringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ1StringNumber_getset },
    { (char *)"SubTotalStringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SubTotalStringNumber_getset },
    { (char *)"StringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_StringNumber_getset },
    { (char *)"ShowTagNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ShowTagNumber_getset },
    { (char *)"RowNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_RowNumber_getset },
    { (char *)"QuantityStringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_QuantityStringNumber_getset },
    { (char *)"PrintBufferLineNumber", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_PrintBufferLineNumber_getset },
    { (char *)"OPRequisiteNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_OPRequisiteNumber_getset },
    { (char *)"OperationNameStringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_OperationNameStringNumber_getset },
    { (char *)"EKLZStringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_EKLZStringNumber_getset },
    { (char *)"DiscountOnCheckStringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DiscountOnCheckStringNumber_getset },
    { (char *)"DepartmentStringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DepartmentStringNumber_getset },
    { (char *)"DataBlockNumber", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_DataBlockNumber_getset },
    { (char *)"BlockNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_BlockNumber_getset },
    { (char *)"BarcodeStartBlockNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_BarcodeStartBlockNumber_getset },
    { (char *)"AttributeNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_AttributeNumber_getset },
    { (char *)"ccWareNameLineNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ccWareNameLineNumber_getset },
    { (char *)"ChangeStringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ChangeStringNumber_getset },
    { (char *)"ClicheStringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ClicheStringNumber_getset },
    { (char *)"ComNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ComNumber_getset },
    { (char *)"FirstLineNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_FirstLineNumber_getset },
    { (char *)"FMStringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_FMStringNumber_getset },
    { (char *)"HeaderStringNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_HeaderStringNumber_getset },
    { (char *)"JournalRowNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_JournalRowNumber_getset },
    { (char *)"KPKNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_KPKNumber_getset },
    { (char *)"LastKPKNumber", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_LastKPKNumber_getset },
    { (char *)"LastLineNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LastLineNumber_getset },
    { (char *)"LDComNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LDComNumber_getset },
    { (char *)"LineNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LineNumber_getset },
    { (char *)"ModelParamNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ModelParamNumber_getset },
    { (char *)"TagValueLength", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TagValueLength_getset },
    { (char *)"DataLength", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DataLength_getset },
    { (char *)"BarcodeDataLength", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_BarcodeDataLength_getset },
    { (char *)"EKLZFlags", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_EKLZFlags_getset },
    { (char *)"TagID", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TagID_getset },
    { (char *)"BarcodeParameter1", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_BarcodeParameter1_getset },
    { (char *)"BarcodeParameter2", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_BarcodeParameter2_getset },
    { (char *)"BarcodeParameter3", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_BarcodeParameter3_getset },
    { (char *)"BarcodeParameter4", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_BarcodeParameter4_getset },
    { (char *)"RealPayDepartment", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_RealPayDepartment_getset },
    { (char *)"PayDepartment", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_PayDepartment_getset },
    { (char *)"Department", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Department_getset },
    { (char *)"BarcodeParameter5", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_BarcodeParameter5_getset },
    { (char *)"CommandIndex", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CommandIndex_getset },
    { (char *)"FeedAfterCut", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_FeedAfterCut_getset },
    { (char *)"DeclarativeInput", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DeclarativeInput_getset },
    { (char *)"FreeMemorySize", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_FreeMemorySize_getset },
    { (char *)"AutoStartSearch", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_AutoStartSearch_getset },
    { (char *)"AutoSensorValues", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_AutoSensorValues_getset },
    { (char *)"FMFlags", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_FMFlags_getset },
    { (char *)"IBMFlags", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IBMFlags_getset },
    { (char *)"IsClearUnfiscalInfo", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_IsClearUnfiscalInfo_getset },
    { (char *)"SKNOIdentifier", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SKNOIdentifier_getset },
    { (char *)"TypeOfSumOfEntriesFM", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TypeOfSumOfEntriesFM_getset },
    { (char *)"TLVData", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TLVData_getset },
    { (char *)"EnableCashcoreMarkCompatibility", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_EnableCashcoreMarkCompatibility_getset },
    { (char *)"UMinorType", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_UMinorType_getset },
    { (char *)"UMajorType", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_UMajorType_getset },
    { (char *)"DriverRelease", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_DriverRelease_getset },
    { (char *)"TagValueBin", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TagValueBin_getset },
    { (char *)"ParentWnd", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ParentWnd_getset },
    { (char *)"ModelParamIndex", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ModelParamIndex_getset },
    { (char *)"SlipDocumentWidth", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SlipDocumentWidth_getset },
    { (char *)"PrintWidth", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_PrintWidth_getset },
    { (char *)"FirstDocumentNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_FirstDocumentNumber_getset },
    { (char *)"LastDocumentNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LastDocumentNumber_getset },
    { (char *)"NotificationNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_NotificationNumber_getset },
    { (char *)"DeviceFunctionNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DeviceFunctionNumber_getset },
    { (char *)"TransmitSessionNumber", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_TransmitSessionNumber_getset },
    { (char *)"TransmitDocumentNumber", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_TransmitDocumentNumber_getset },
    { (char *)"TotalSymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TotalSymbolNumber_getset },
    { (char *)"TextSymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TextSymbolNumber_getset },
    { (char *)"Tax4TurnOverSymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax4TurnOverSymbolNumber_getset },
    { (char *)"Tax4SumSymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax4SumSymbolNumber_getset },
    { (char *)"Tax4RateSymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax4RateSymbolNumber_getset },
    { (char *)"Tax4NameSymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax4NameSymbolNumber_getset },
    { (char *)"Tax3TurnOverSymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax3TurnOverSymbolNumber_getset },
    { (char *)"Tax3SumSymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax3SumSymbolNumber_getset },
    { (char *)"Tax3RateSymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax3RateSymbolNumber_getset },
    { (char *)"Tax3NameSymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax3NameSymbolNumber_getset },
    { (char *)"Tax2TurnOverSymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax2TurnOverSymbolNumber_getset },
    { (char *)"Tax2SumSymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax2SumSymbolNumber_getset },
    { (char *)"Tax2RateSymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax2RateSymbolNumber_getset },
    { (char *)"Tax2NameSymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax2NameSymbolNumber_getset },
    { (char *)"Tax1SumSymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax1SumSymbolNumber_getset },
    { (char *)"Tax1RateSymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax1RateSymbolNumber_getset },
    { (char *)"Tax1NameSymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax1NameSymbolNumber_getset },
    { (char *)"SummSymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SummSymbolNumber_getset },
    { (char *)"Summ4SymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ4SymbolNumber_getset },
    { (char *)"Summ3SymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ3SymbolNumber_getset },
    { (char *)"Summ2SymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ2SymbolNumber_getset },
    { (char *)"Summ1SymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ1SymbolNumber_getset },
    { (char *)"SubTotalSymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SubTotalSymbolNumber_getset },
    { (char *)"SessionNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SessionNumber_getset },
    { (char *)"SerialNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SerialNumber_getset },
    { (char *)"RegistrationNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_RegistrationNumber_getset },
    { (char *)"RegisterNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_RegisterNumber_getset },
    { (char *)"ReceiptNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ReceiptNumber_getset },
    { (char *)"QuantitySymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_QuantitySymbolNumber_getset },
    { (char *)"PriceSymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_PriceSymbolNumber_getset },
    { (char *)"PortNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_PortNumber_getset },
    { (char *)"OperatorNumber", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_OperatorNumber_getset },
    { (char *)"EKLZNumber", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_EKLZNumber_getset },
    { (char *)"DrawerNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DrawerNumber_getset },
    { (char *)"DocumentNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DocumentNumber_getset },
    { (char *)"DiscountOnCheckSymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DiscountOnCheckSymbolNumber_getset },
    { (char *)"DiscountOnCheckSumSymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DiscountOnCheckSumSymbolNumber_getset },
    { (char *)"DepartmentSymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DepartmentSymbolNumber_getset },
    { (char *)"ChangeSymbolNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ChangeSymbolNumber_getset },
    { (char *)"FieldNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_FieldNumber_getset },
    { (char *)"FirstSessionNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_FirstSessionNumber_getset },
    { (char *)"IBMDocumentNumber", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IBMDocumentNumber_getset },
    { (char *)"IBMLastBuyReceiptNumber", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IBMLastBuyReceiptNumber_getset },
    { (char *)"IBMLastReturnBuyReceiptNumber", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IBMLastReturnBuyReceiptNumber_getset },
    { (char *)"IBMLastReturnSaleReceiptNumber", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IBMLastReturnSaleReceiptNumber_getset },
    { (char *)"IBMLastSaleReceiptNumber", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IBMLastSaleReceiptNumber_getset },
    { (char *)"IntervalNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_IntervalNumber_getset },
    { (char *)"KKTRegistrationNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_KKTRegistrationNumber_getset },
    { (char *)"LastSessionNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LastSessionNumber_getset },
    { (char *)"LDNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LDNumber_getset },
    { (char *)"LogicalNumber", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_LogicalNumber_getset },
    { (char *)"MFPNumber", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_MFPNumber_getset },
    { (char *)"OpenDocumentNumber", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_OpenDocumentNumber_getset },
    { (char *)"OutputStrJson", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_OutputStrJson_getset },
    { (char *)"InputStrJson", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_InputStrJson_getset },
    { (char *)"ModelIndex", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ModelIndex_getset },
    { (char *)"LoaderVersion", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_LoaderVersion_getset },
    { (char *)"UMinorProtocolVersion", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_UMinorProtocolVersion_getset },
    { (char *)"UMajorProtocolVersion", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_UMajorProtocolVersion_getset },
    { (char *)"ServerVersion", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ServerVersion_getset },
    { (char *)"EKLZVersion", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_EKLZVersion_getset },
    { (char *)"ECRSoftVersion", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ECRSoftVersion_getset },
    { (char *)"DriverVersion", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_DriverVersion_getset },
    { (char *)"DriverMinorVersion", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_DriverMinorVersion_getset },
    { (char *)"DriverMajorVersion", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_DriverMajorVersion_getset },
    { (char *)"BinaryConversion", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_BinaryConversion_getset },
    { (char *)"FMSoftVersion", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_FMSoftVersion_getset },
    { (char *)"FNSoftVersion", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_FNSoftVersion_getset },
    { (char *)"SlipDocumentLength", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SlipDocumentLength_getset },
    { (char *)"Date2", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Date2_getset },
    { (char *)"DataOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DataOffset_getset },
    { (char *)"TotalSumOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TotalSumOffset_getset },
    { (char *)"Tax4SumOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax4SumOffset_getset },
    { (char *)"Tax4RateOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax4RateOffset_getset },
    { (char *)"Tax4NameOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax4NameOffset_getset },
    { (char *)"Tax3SumOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax3SumOffset_getset },
    { (char *)"Tax3RateOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax3RateOffset_getset },
    { (char *)"Tax3NameOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax3NameOffset_getset },
    { (char *)"Tax2SumOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax2SumOffset_getset },
    { (char *)"Tax2RateOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax2RateOffset_getset },
    { (char *)"Tax2NameOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax2NameOffset_getset },
    { (char *)"Tax1SumOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax1SumOffset_getset },
    { (char *)"Tax1RateOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax1RateOffset_getset },
    { (char *)"Tax1NameOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax1NameOffset_getset },
    { (char *)"SummOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SummOffset_getset },
    { (char *)"Summ4NameOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ4NameOffset_getset },
    { (char *)"Summ3Offset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ3Offset_getset },
    { (char *)"Summ3NameOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ3NameOffset_getset },
    { (char *)"Summ2NameOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ2NameOffset_getset },
    { (char *)"Summ1Offset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ1Offset_getset },
    { (char *)"Summ1NameOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ1NameOffset_getset },
    { (char *)"SubTotalSumOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SubTotalSumOffset_getset },
    { (char *)"QuantityOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_QuantityOffset_getset },
    { (char *)"OperationNameOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_OperationNameOffset_getset },
    { (char *)"DiscountOnCheckSumOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DiscountOnCheckSumOffset_getset },
    { (char *)"DiscountOnCheckOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DiscountOnCheckOffset_getset },
    { (char *)"ChangeOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ChangeOffset_getset },
    { (char *)"ChangeSumOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ChangeSumOffset_getset },
    { (char *)"ClicheOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ClicheOffset_getset },
    { (char *)"FMOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_FMOffset_getset },
    { (char *)"KPKOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_KPKOffset_getset },
    { (char *)"IsPrinterLeftSensorFailure", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IsPrinterLeftSensorFailure_getset },
    { (char *)"IsPrinterRightSensorFailure", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IsPrinterRightSensorFailure_getset },
    { (char *)"CharHeight", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_CharHeight_getset },
    { (char *)"ReceiptRibbonOpticalSensor", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ReceiptRibbonOpticalSensor_getset },
    { (char *)"JournalRibbonOpticalSensor", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_JournalRibbonOpticalSensor_getset },
    { (char *)"LidPositionSensor", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_LidPositionSensor_getset },
    { (char *)"RegSaleReturnRec", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_RegSaleReturnRec_getset },
    { (char *)"RegBuyReturnRec", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_RegBuyReturnRec_getset },
    { (char *)"LDIndex", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LDIndex_getset },
    { (char *)"SlipDocumentIsPresent", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_SlipDocumentIsPresent_getset },
    { (char *)"ReceiptRibbonIsPresent", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ReceiptRibbonIsPresent_getset },
    { (char *)"EKLZIsPresent", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_EKLZIsPresent_getset },
    { (char *)"FM1IsPresent", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_FM1IsPresent_getset },
    { (char *)"FM2IsPresent", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_FM2IsPresent_getset },
    { (char *)"JournalRibbonIsPresent", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_JournalRibbonIsPresent_getset },
    { (char *)"LicenseIsPresent", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_LicenseIsPresent_getset },
    { (char *)"IsBatteryLow", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IsBatteryLow_getset },
    { (char *)"UseSlipDocument", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_UseSlipDocument_getset },
    { (char *)"FNCurrentDocument", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_FNCurrentDocument_getset },
    { (char *)"ValueOfFunctionInteger", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ValueOfFunctionInteger_getset },
    { (char *)"ValueOfFieldInteger", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ValueOfFieldInteger_getset },
    { (char *)"SerialNumberAsInteger", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_SerialNumberAsInteger_getset },
    { (char *)"INNAsInteger", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_INNAsInteger_getset },
    { (char *)"EscapeIP", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_EscapeIP_getset },
    { (char *)"LDEscapeIP", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LDEscapeIP_getset },
    { (char *)"ModelNames", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ModelNames_getset },
    { (char *)"IsCorruptedFiscalizationInfo", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IsCorruptedFiscalizationInfo_getset },
    { (char *)"DBDocType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DBDocType_getset },
    { (char *)"MarkingOnly", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_MarkingOnly_getset },
    { (char *)"Token", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Token_getset },
    { (char *)"Discount1", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Discount1_getset },
    { (char *)"Discount2", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Discount2_getset },
    { (char *)"Discount3", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Discount3_getset },
    { (char *)"LastKPKTime", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_LastKPKTime_getset },
    { (char *)"Discount4", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Discount4_getset },
    { (char *)"TLVDataHex", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TLVDataHex_getset },
    { (char *)"BlockDataHex", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_BlockDataHex_getset },
    { (char *)"LineDataHex", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LineDataHex_getset },
    { (char *)"SaveSettingsType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SaveSettingsType_getset },
    { (char *)"HeaderFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_HeaderFont_getset },
    { (char *)"AuthData", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_AuthData_getset },
    { (char *)"Summ1Font", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ1Font_getset },
    { (char *)"CheckItemMode", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CheckItemMode_getset },
    { (char *)"ReceiptOutputType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ReceiptOutputType_getset },
    { (char *)"OPBarcodeInputType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_OPBarcodeInputType_getset },
    { (char *)"TimeoutsUsing", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TimeoutsUsing_getset },
    { (char *)"RNM", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_RNM_getset },
    { (char *)"BarWidth", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_BarWidth_getset },
    { (char *)"CharWidth", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_CharWidth_getset },
    { (char *)"TotalOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TotalOffset_getset },
    { (char *)"TextOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TextOffset_getset },
    { (char *)"Tax4TurnOverOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax4TurnOverOffset_getset },
    { (char *)"Tax3TurnOverOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax3TurnOverOffset_getset },
    { (char *)"Tax2TurnOverOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax2TurnOverOffset_getset },
    { (char *)"Tax1TurnOverOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax1TurnOverOffset_getset },
    { (char *)"Summ4Offset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ4Offset_getset },
    { (char *)"Summ2Offset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ2Offset_getset },
    { (char *)"SubTotalOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SubTotalOffset_getset },
    { (char *)"EKLZOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_EKLZOffset_getset },
    { (char *)"DepartmentOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DepartmentOffset_getset },
    { (char *)"HeaderOffset", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_HeaderOffset_getset },
    { (char *)"JournalRow", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_JournalRow_getset },
    { (char *)"NameCashReg", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_NameCashReg_getset },
    { (char *)"CrptExchangeCaCertPath", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CrptExchangeCaCertPath_getset },
    { (char *)"DataBlockSize", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DataBlockSize_getset },
    { (char *)"DoNotSendENQ", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DoNotSendENQ_getset },
    { (char *)"DeclarativeEndpointPath", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DeclarativeEndpointPath_getset },
    { (char *)"EKLZData", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_EKLZData_getset },
    { (char *)"UseReceiptRibbon", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_UseReceiptRibbon_getset },
    { (char *)"UseJournalRibbon", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_UseJournalRibbon_getset },
    { (char *)"KSAInfo", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_KSAInfo_getset },
    { (char *)"TCPPort", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TCPPort_getset },
    { (char *)"LDTCPPort", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LDTCPPort_getset },
    { (char *)"SysAdminPassword", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SysAdminPassword_getset },
    { (char *)"SCPassword", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SCPassword_getset },
    { (char *)"Password", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Password_getset },
    { (char *)"CashControlPassword", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CashControlPassword_getset },
    { (char *)"IsBlockedByWrongTaxPassword", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IsBlockedByWrongTaxPassword_getset },
    { (char *)"LDSysAdminPassword", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LDSysAdminPassword_getset },
    { (char *)"NewSCPassword", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_NewSCPassword_getset },
    { (char *)"BarcodeFirstLine", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_BarcodeFirstLine_getset },
    { (char *)"Summ2Font", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ2Font_getset },
    { (char *)"IBMSessionYear", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IBMSessionYear_getset },
    { (char *)"KPKStr", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_KPKStr_getset },
    { (char *)"Summ10", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ10_getset },
    { (char *)"Summ11", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ11_getset },
    { (char *)"Summ12", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ12_getset },
    { (char *)"Summ13", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ13_getset },
    { (char *)"Summ14", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ14_getset },
    { (char *)"RegSaleSession", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_RegSaleSession_getset },
    { (char *)"RegSaleReturnSession", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_RegSaleReturnSession_getset },
    { (char *)"RegBuySession", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_RegBuySession_getset },
    { (char *)"RegBuyReturnSession", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_RegBuyReturnSession_getset },
    { (char *)"Summ15", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ15_getset },
    { (char *)"AutoOpenSession", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_AutoOpenSession_getset },
    { (char *)"Summ16", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ16_getset },
    { (char *)"Summ17", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ17_getset },
    { (char *)"Summ18", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ18_getset },
    { (char *)"Summ19", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ19_getset },
    { (char *)"Denominator", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Denominator_getset },
    { (char *)"IsFMSessionOpen", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IsFMSessionOpen_getset },
    { (char *)"FMMode", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_FMMode_getset },
    { (char *)"CutType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CutType_getset },
    { (char *)"LastKPKDate", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_LastKPKDate_getset },
    { (char *)"QuantityPointPosition", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_QuantityPointPosition_getset },
    { (char *)"PointPosition", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_PointPosition_getset },
    { (char *)"HRIPosition", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_HRIPosition_getset },
    { (char *)"RequestType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_RequestType_getset },
    { (char *)"License", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_License_getset },
    { (char *)"OPIdPayment", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_OPIdPayment_getset },
    { (char *)"ReportType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ReportType_getset },
    { (char *)"ECRBuild", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ECRBuild_getset },
    { (char *)"LastFMRecordType", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_LastFMRecordType_getset },
    { (char *)"DBFilePath", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DBFilePath_getset },
    { (char *)"PresenterOut", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_PresenterOut_getset },
    { (char *)"DigitalSign", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DigitalSign_getset },
    { (char *)"Summ20", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ20_getset },
    { (char *)"DocumentType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DocumentType_getset },
    { (char *)"FontType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_FontType_getset },
    { (char *)"SaleError", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SaleError_getset },
    { (char *)"Summ3Font", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ3Font_getset },
    { (char *)"FieldType", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_FieldType_getset },
    { (char *)"MAXValueOfField", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_MAXValueOfField_getset },
    { (char *)"MINValueOfField", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_MINValueOfField_getset },
    { (char *)"ComputerName", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ComputerName_getset },
    { (char *)"LDComputerName", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LDComputerName_getset },
    { (char *)"SkipPrint", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SkipPrint_getset },
    { (char *)"NewPasswordTI", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_NewPasswordTI_getset },
    { (char *)"FNSoftType", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_FNSoftType_getset },
    { (char *)"TextFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TextFont_getset },
    { (char *)"ModelID", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ModelID_getset },
    { (char *)"FNArchiveType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_FNArchiveType_getset },
    { (char *)"PaymentItemSign", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_PaymentItemSign_getset },
    { (char *)"BanknoteType", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_BanknoteType_getset },
    { (char *)"ChangeFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ChangeFont_getset },
    { (char *)"DelayedPrint", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DelayedPrint_getset },
    { (char *)"LastKPKDateStr", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_LastKPKDateStr_getset },
    { (char *)"UCodePageText", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_UCodePageText_getset },
    { (char *)"MarkingTypeEx", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_MarkingTypeEx_getset },
    { (char *)"DepartmentFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DepartmentFont_getset },
    { (char *)"NotificationSize", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_NotificationSize_getset },
    { (char *)"PrintBarcodeText", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_PrintBarcodeText_getset },
    { (char *)"Summ4Font", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ4Font_getset },
    { (char *)"SKNOError", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SKNOError_getset },
    { (char *)"PingResult", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_PingResult_getset },
    { (char *)"CheckItemLocalError", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CheckItemLocalError_getset },
    { (char *)"CashControlHost", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CashControlHost_getset },
    { (char *)"Change", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_Change_getset },
    { (char *)"DriverBuild", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_DriverBuild_getset },
    { (char *)"FiscalSign", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_FiscalSign_getset },
    { (char *)"BarcodeType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_BarcodeType_getset },
    { (char *)"FMBuild", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_FMBuild_getset },
    { (char *)"Tax4RateFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax4RateFont_getset },
    { (char *)"Tax3RateFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax3RateFont_getset },
    { (char *)"Tax2RateFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax2RateFont_getset },
    { (char *)"Tax1RateFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax1RateFont_getset },
    { (char *)"BlockData", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_BlockData_getset },
    { (char *)"MethodName", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_MethodName_getset },
    { (char *)"RegistrationReasonCode", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_RegistrationReasonCode_getset },
    { (char *)"PermitActivizationCode", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_PermitActivizationCode_getset },
    { (char *)"Tax4NameFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax4NameFont_getset },
    { (char *)"Tax3NameFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax3NameFont_getset },
    { (char *)"Tax2NameFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax2NameFont_getset },
    { (char *)"Tax1NameFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Tax1NameFont_getset },
    { (char *)"Summ4NameFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ4NameFont_getset },
    { (char *)"Summ3NameFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ3NameFont_getset },
    { (char *)"Summ2NameFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ2NameFont_getset },
    { (char *)"Summ1NameFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ1NameFont_getset },
    { (char *)"OperationNameFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_OperationNameFont_getset },
    { (char *)"IsLastFMRecordCorrupted", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IsLastFMRecordCorrupted_getset },
    { (char *)"QuantityOfOperations", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_QuantityOfOperations_getset },
    { (char *)"TagType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TagType_getset },
    { (char *)"FiscalSignAsString", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_FiscalSignAsString_getset },
    { (char *)"ClicheFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ClicheFont_getset },
    { (char *)"ECRID", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ECRID_getset },
    { (char *)"PosControlReceiptSeparator", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_PosControlReceiptSeparator_getset },
    { (char *)"MarkingType2", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_MarkingType2_getset },
    { (char *)"FN5YearResource", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_FN5YearResource_getset },
    { (char *)"FN30DayResource", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_FN30DayResource_getset },
    { (char *)"ReceiptRibbonLever", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ReceiptRibbonLever_getset },
    { (char *)"JournalRibbonLever", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_JournalRibbonLever_getset },
    { (char *)"PriceFont", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_PriceFont_getset },
    { (char *)"CheckSum", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CheckSum_getset },
    { (char *)"TranslationEnabled", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TranslationEnabled_getset },
    { (char *)"TaxValue1Enabled", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TaxValue1Enabled_getset },
    { (char *)"CashControlEnabled", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CashControlEnabled_getset },
    { (char *)"CloudCashdeskEnabled", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CloudCashdeskEnabled_getset },
    { (char *)"JournalEnabled", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_JournalEnabled_getset },
    { (char *)"MobilePayEnabled", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_MobilePayEnabled_getset },
    { (char *)"IBMStatusByte1", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IBMStatusByte1_getset },
    { (char *)"IBMStatusByte2", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IBMStatusByte2_getset },
    { (char *)"IBMStatusByte3", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IBMStatusByte3_getset },
    { (char *)"CashControlUseTCP", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CashControlUseTCP_getset },
    { (char *)"StringForPrinting", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_StringForPrinting_getset },
    { (char *)"CheckItemLocalResult", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CheckItemLocalResult_getset },
    { (char *)"LastKPKDocumentResult", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_LastKPKDocumentResult_getset },
    { (char *)"LastPrintResult", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_LastPrintResult_getset },
    { (char *)"IBMStatusByte4", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IBMStatusByte4_getset },
    { (char *)"IBMStatusByte5", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IBMStatusByte5_getset },
    { (char *)"CalculationSign", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CalculationSign_getset },
    { (char *)"IBMStatusByte6", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IBMStatusByte6_getset },
    { (char *)"IBMStatusByte7", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IBMStatusByte7_getset },
    { (char *)"IBMStatusByte8", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IBMStatusByte8_getset },
    { (char *)"ReconnectPort", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ReconnectPort_getset },
    { (char *)"TableName", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_TableName_getset },
    { (char *)"NumberOfCopies", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_NumberOfCopies_getset },
    { (char *)"ServerConnected", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ServerConnected_getset },
    { (char *)"Connected", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Connected_getset },
    { (char *)"FiscalSignOFD", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_FiscalSignOFD_getset },
    { (char *)"TagValueStr", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TagValueStr_getset },
    { (char *)"ActivizationControlByte", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ActivizationControlByte_getset },
    { (char *)"WaitForPrintingDelay", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_WaitForPrintingDelay_getset },
    { (char *)"MarkingType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_MarkingType_getset },
    { (char *)"BufferingType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_BufferingType_getset },
    { (char *)"CheckingType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CheckingType_getset },
    { (char *)"CarryStrings", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CarryStrings_getset },
    { (char *)"WrapStrings", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_WrapStrings_getset },
    { (char *)"TaxType", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TaxType_getset },
    { (char *)"EscapePort", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_EscapePort_getset },
    { (char *)"LDEscapePort", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LDEscapePort_getset },
    { (char *)"ECRMode", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ECRMode_getset },
    { (char *)"INN", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_INN_getset },
    { (char *)"DocumentName", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DocumentName_getset },
    { (char *)"CommandName", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_CommandName_getset },
    { (char *)"CopyOffset1", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CopyOffset1_getset },
    { (char *)"CopyOffset2", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CopyOffset2_getset },
    { (char *)"CopyOffset3", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CopyOffset3_getset },
    { (char *)"PortLocked", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_PortLocked_getset },
    { (char *)"CopyOffset4", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CopyOffset4_getset },
    { (char *)"FieldName", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_FieldName_getset },
    { (char *)"CopyOffset5", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CopyOffset5_getset },
    { (char *)"NameCashRegEx", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_NameCashRegEx_getset },
    { (char *)"LDName", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LDName_getset },
    { (char *)"LogOn", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LogOn_getset },
    { (char *)"PresenterIn", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_PresenterIn_getset },
    { (char *)"Numerator", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Numerator_getset },
    { (char *)"ValueOfFunctionString", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ValueOfFunctionString_getset },
    { (char *)"ValueOfFieldString", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ValueOfFieldString_getset },
    { (char *)"OperationBlockFirstString", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_OperationBlockFirstString_getset },
    { (char *)"ReportTypeInt", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ReportTypeInt_getset },
    { (char *)"UseCommandTimeout", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_UseCommandTimeout_getset },
    { (char *)"Timeout", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Timeout_getset },
    { (char *)"TCPConnectionTimeout", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TCPConnectionTimeout_getset },
    { (char *)"SyncTimeout", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SyncTimeout_getset },
    { (char *)"SearchTimeout", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SearchTimeout_getset },
    { (char *)"ConnectionTimeout", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ConnectionTimeout_getset },
    { (char *)"AdjustRITimeout", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_AdjustRITimeout_getset },
    { (char *)"CommandDefTimeout", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_CommandDefTimeout_getset },
    { (char *)"CommandTimeout", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CommandTimeout_getset },
    { (char *)"EscapeTimeout", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_EscapeTimeout_getset },
    { (char *)"LDEscapeTimeout", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LDEscapeTimeout_getset },
    { (char *)"LDTimeout", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LDTimeout_getset },
    { (char *)"LockTimeout", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LockTimeout_getset },
    { (char *)"WaitForPrintingTimeout", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_WaitForPrintingTimeout_getset },
    { (char *)"CrptCdnListUrl", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CrptCdnListUrl_getset },
    { (char *)"UserAttributeName", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_UserAttributeName_getset },
    { (char *)"IsDrawerOpen", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IsDrawerOpen_getset },
    { (char *)"RunningPeriod", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_RunningPeriod_getset },
    { (char *)"Summ1", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ1_getset },
    { (char *)"ccUseTextAsWareName", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ccUseTextAsWareName_getset },
    { (char *)"SwapBytesMode", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_SwapBytesMode_getset },
    { (char *)"Summ2", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ2_getset },
    { (char *)"PrintJournalBeforeZReport", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_PrintJournalBeforeZReport_getset },
    { (char *)"Summ3", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ3_getset },
    { (char *)"Summ4", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ4_getset },
    { (char *)"__dict__", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface___dict___getset },
    { (char *)"Summ5", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ5_getset },
    { (char *)"Summ6", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ6_getset },
    { (char *)"Summ7", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ7_getset },
    { (char *)"FirstSessionDate", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_FirstSessionDate_getset },
    { (char *)"LastSessionDate", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LastSessionDate_getset },
    { (char *)"Summ8", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ8_getset },
    { (char *)"TransferBytes", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TransferBytes_getset },
    { (char *)"Summ9", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_Summ9_getset },
    { (char *)"CommandRetryCount", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_CommandRetryCount_getset },
    { (char *)"KMServerErrorCode", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_KMServerErrorCode_getset },
    { (char *)"ErrorCode", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ErrorCode_getset },
    { (char *)"FileName", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_FileName_getset },
    { (char *)"LineSwapBytes", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_LineSwapBytes_getset },
    { (char *)"BaudRate", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_BaudRate_getset },
    { (char *)"RoundingSumm", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_RoundingSumm_getset },
    { (char *)"IBMSessionSec", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IBMSessionSec_getset },
    { (char *)"IsCorruptedFMRecords", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IsCorruptedFMRecords_getset },
    { (char *)"DocumentCount", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_DocumentCount_getset },
    { (char *)"FontCount", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_FontCount_getset },
    { (char *)"ModelsCount", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_ModelsCount_getset },
    { (char *)"ConnectionURI", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_ConnectionURI_getset },
    { (char *)"IsASPDMode", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IsASPDMode_getset },
    { (char *)"TagValueFVLN", SwigPyBuiltin_FunpackGetterClosure, SwigPyBuiltin_FunpackSetterClosure, (char *)"", &classic_interface_TagValueFVLN_getset },
    { (char *)"IBMSessionDay", SwigPyBuiltin_FunpackGetterClosure, 0, (char *)"", &classic_interface_IBMSessionDay_getset },
    { NULL, NULL, NULL, NULL, NULL } /* Sentinel */
};

SWIGINTERN PyObject *
SwigPyBuiltin__kkt_driver__classic_interface_richcompare(PyObject *self, PyObject *other, int op) {
  PyObject *result = NULL;
  if (!result) {
    if (SwigPyObject_Check(self) && SwigPyObject_Check(other)) {
      result = SwigPyObject_richcompare((SwigPyObject *)self, (SwigPyObject *)other, op);
    } else {
      result = Py_NotImplemented;
      Py_INCREF(result);
    }
  }
  return result;
}

SWIGINTERN PyMethodDef SwigPyBuiltin__kkt_driver__classic_interface_methods[] = {
  { "AddLD", _wrap_classic_interface_AddLD, METH_NOARGS, "" },
  { "Beep", _wrap_classic_interface_Beep, METH_NOARGS, "" },
  { "Buy", _wrap_classic_interface_Buy, METH_NOARGS, "" },
  { "BuyEx", _wrap_classic_interface_BuyEx, METH_NOARGS, "" },
  { "CancelCheck", _wrap_classic_interface_CancelCheck, METH_NOARGS, "" },
  { "CashIncome", _wrap_classic_interface_CashIncome, METH_NOARGS, "" },
  { "CashOutcome", _wrap_classic_interface_CashOutcome, METH_NOARGS, "" },
  { "Charge", _wrap_classic_interface_Charge, METH_NOARGS, "" },
  { "CheckSubTotal", _wrap_classic_interface_CheckSubTotal, METH_NOARGS, "" },
  { "CloseCheck", _wrap_classic_interface_CloseCheck, METH_NOARGS, "" },
  { "ConfirmDate", _wrap_classic_interface_ConfirmDate, METH_NOARGS, "" },
  { "Connect", _wrap_classic_interface_Connect, METH_NOARGS, "" },
  { "ContinuePrint", _wrap_classic_interface_ContinuePrint, METH_NOARGS, "" },
  { "Correction", _wrap_classic_interface_Correction, METH_NOARGS, "" },
  { "CutCheck", _wrap_classic_interface_CutCheck, METH_NOARGS, "" },
  { "DampRequest", _wrap_classic_interface_DampRequest, METH_NOARGS, "" },
  { "DeleteLD", _wrap_classic_interface_DeleteLD, METH_NOARGS, "" },
  { "Disconnect", _wrap_classic_interface_Disconnect, METH_NOARGS, "" },
  { "Discount", _wrap_classic_interface_Discount, METH_NOARGS, "" },
  { "DozeOilCheck", _wrap_classic_interface_DozeOilCheck, METH_NOARGS, "" },
  { "Draw", _wrap_classic_interface_Draw, METH_NOARGS, "" },
  { "EKLZDepartmentReportInDatesRange", _wrap_classic_interface_EKLZDepartmentReportInDatesRange, METH_NOARGS, "" },
  { "EKLZDepartmentReportInSessionsRange", _wrap_classic_interface_EKLZDepartmentReportInSessionsRange, METH_NOARGS, "" },
  { "EKLZJournalOnSessionNumber", _wrap_classic_interface_EKLZJournalOnSessionNumber, METH_NOARGS, "" },
  { "EKLZSessionReportInDatesRange", _wrap_classic_interface_EKLZSessionReportInDatesRange, METH_NOARGS, "" },
  { "EKLZSessionReportInSessionsRange", _wrap_classic_interface_EKLZSessionReportInSessionsRange, METH_NOARGS, "" },
  { "ExchangeBytes", _wrap_classic_interface_ExchangeBytes, METH_NOARGS, "" },
  { "FeedDocument", _wrap_classic_interface_FeedDocument, METH_NOARGS, "" },
  { "Fiscalization", _wrap_classic_interface_Fiscalization, METH_NOARGS, "" },
  { "FiscalReportForDatesRange", _wrap_classic_interface_FiscalReportForDatesRange, METH_NOARGS, "" },
  { "FiscalReportForSessionRange", _wrap_classic_interface_FiscalReportForSessionRange, METH_NOARGS, "" },
  { "GetActiveLD", _wrap_classic_interface_GetActiveLD, METH_NOARGS, "" },
  { "EnumLD", _wrap_classic_interface_EnumLD, METH_NOARGS, "" },
  { "GetCashReg", _wrap_classic_interface_GetCashReg, METH_NOARGS, "" },
  { "GetCountLD", _wrap_classic_interface_GetCountLD, METH_NOARGS, "" },
  { "GetData", _wrap_classic_interface_GetData, METH_NOARGS, "" },
  { "GetDeviceMetrics", _wrap_classic_interface_GetDeviceMetrics, METH_NOARGS, "" },
  { "GetECRStatus", _wrap_classic_interface_GetECRStatus, METH_NOARGS, "" },
  { "GetShortECRStatus", _wrap_classic_interface_GetShortECRStatus, METH_NOARGS, "" },
  { "GetExchangeParam", _wrap_classic_interface_GetExchangeParam, METH_NOARGS, "" },
  { "GetFieldStruct", _wrap_classic_interface_GetFieldStruct, METH_NOARGS, "" },
  { "GetFiscalizationParameters", _wrap_classic_interface_GetFiscalizationParameters, METH_NOARGS, "" },
  { "GetFMRecordsSum", _wrap_classic_interface_GetFMRecordsSum, METH_NOARGS, "" },
  { "GetLastFMRecordDate", _wrap_classic_interface_GetLastFMRecordDate, METH_NOARGS, "" },
  { "GetLiterSumCounter", _wrap_classic_interface_GetLiterSumCounter, METH_NOARGS, "" },
  { "GetOperationReg", _wrap_classic_interface_GetOperationReg, METH_NOARGS, "" },
  { "GetParamLD", _wrap_classic_interface_GetParamLD, METH_NOARGS, "" },
  { "GetRangeDatesAndSessions", _wrap_classic_interface_GetRangeDatesAndSessions, METH_NOARGS, "" },
  { "GetRKStatus", _wrap_classic_interface_GetRKStatus, METH_NOARGS, "" },
  { "GetTableStruct", _wrap_classic_interface_GetTableStruct, METH_NOARGS, "" },
  { "InitFM", _wrap_classic_interface_InitFM, METH_NOARGS, "" },
  { "InitTable", _wrap_classic_interface_InitTable, METH_NOARGS, "" },
  { "InterruptDataStream", _wrap_classic_interface_InterruptDataStream, METH_NOARGS, "" },
  { "InterruptFullReport", _wrap_classic_interface_InterruptFullReport, METH_NOARGS, "" },
  { "InterruptTest", _wrap_classic_interface_InterruptTest, METH_NOARGS, "" },
  { "LaunchRK", _wrap_classic_interface_LaunchRK, METH_NOARGS, "" },
  { "LoadLineData", _wrap_classic_interface_LoadLineData, METH_NOARGS, "" },
  { "OilSale", _wrap_classic_interface_OilSale, METH_NOARGS, "" },
  { "OpenCheck", _wrap_classic_interface_OpenCheck, METH_NOARGS, "" },
  { "OpenDrawer", _wrap_classic_interface_OpenDrawer, METH_NOARGS, "" },
  { "PrintBarCode", _wrap_classic_interface_PrintBarCode, METH_NOARGS, "" },
  { "PrintDepartmentReport", _wrap_classic_interface_PrintDepartmentReport, METH_NOARGS, "" },
  { "PrintDocumentTitle", _wrap_classic_interface_PrintDocumentTitle, METH_NOARGS, "" },
  { "PrintOperationReg", _wrap_classic_interface_PrintOperationReg, METH_NOARGS, "" },
  { "PrintReportWithCleaning", _wrap_classic_interface_PrintReportWithCleaning, METH_NOARGS, "" },
  { "PrintReportWithoutCleaning", _wrap_classic_interface_PrintReportWithoutCleaning, METH_NOARGS, "" },
  { "PrintString", _wrap_classic_interface_PrintString, METH_NOARGS, "" },
  { "PrintWideString", _wrap_classic_interface_PrintWideString, METH_NOARGS, "" },
  { "ReadEKLZDocumentOnKPK", _wrap_classic_interface_ReadEKLZDocumentOnKPK, METH_NOARGS, "" },
  { "ReadEKLZSessionTotal", _wrap_classic_interface_ReadEKLZSessionTotal, METH_NOARGS, "" },
  { "ReadLicense", _wrap_classic_interface_ReadLicense, METH_NOARGS, "" },
  { "ReadTable", _wrap_classic_interface_ReadTable, METH_NOARGS, "" },
  { "RepeatDocument", _wrap_classic_interface_RepeatDocument, METH_NOARGS, "" },
  { "ResetAllTRK", _wrap_classic_interface_ResetAllTRK, METH_NOARGS, "" },
  { "ResetRK", _wrap_classic_interface_ResetRK, METH_NOARGS, "" },
  { "ResetSettings", _wrap_classic_interface_ResetSettings, METH_NOARGS, "" },
  { "ResetSummary", _wrap_classic_interface_ResetSummary, METH_NOARGS, "" },
  { "ReturnBuy", _wrap_classic_interface_ReturnBuy, METH_NOARGS, "" },
  { "ReturnBuyEx", _wrap_classic_interface_ReturnBuyEx, METH_NOARGS, "" },
  { "ReturnSale", _wrap_classic_interface_ReturnSale, METH_NOARGS, "" },
  { "ReturnSaleEx", _wrap_classic_interface_ReturnSaleEx, METH_NOARGS, "" },
  { "Sale", _wrap_classic_interface_Sale, METH_NOARGS, "" },
  { "SaleEx", _wrap_classic_interface_SaleEx, METH_NOARGS, "" },
  { "SetActiveLD", _wrap_classic_interface_SetActiveLD, METH_NOARGS, "" },
  { "SetDate", _wrap_classic_interface_SetDate, METH_NOARGS, "" },
  { "SetDozeInMilliliters", _wrap_classic_interface_SetDozeInMilliliters, METH_NOARGS, "" },
  { "SetDozeInMoney", _wrap_classic_interface_SetDozeInMoney, METH_NOARGS, "" },
  { "SetExchangeParam", _wrap_classic_interface_SetExchangeParam, METH_NOARGS, "" },
  { "SetParamLD", _wrap_classic_interface_SetParamLD, METH_NOARGS, "" },
  { "SetPointPosition", _wrap_classic_interface_SetPointPosition, METH_NOARGS, "" },
  { "SetRKParameters", _wrap_classic_interface_SetRKParameters, METH_NOARGS, "" },
  { "SetSerialNumber", _wrap_classic_interface_SetSerialNumber, METH_NOARGS, "" },
  { "SetTime", _wrap_classic_interface_SetTime, METH_NOARGS, "" },
  { "ShowProperties", _wrap_classic_interface_ShowProperties, METH_NOARGS, "" },
  { "StopEKLZDocumentPrinting", _wrap_classic_interface_StopEKLZDocumentPrinting, METH_NOARGS, "" },
  { "StopRK", _wrap_classic_interface_StopRK, METH_NOARGS, "" },
  { "Storno", _wrap_classic_interface_Storno, METH_NOARGS, "" },
  { "StornoEx", _wrap_classic_interface_StornoEx, METH_NOARGS, "" },
  { "StornoCharge", _wrap_classic_interface_StornoCharge, METH_NOARGS, "" },
  { "StornoDiscount", _wrap_classic_interface_StornoDiscount, METH_NOARGS, "" },
  { "SummOilCheck", _wrap_classic_interface_SummOilCheck, METH_NOARGS, "" },
  { "SysAdminCancelCheck", _wrap_classic_interface_SysAdminCancelCheck, METH_NOARGS, "" },
  { "Test", _wrap_classic_interface_Test, METH_NOARGS, "" },
  { "WriteLicense", _wrap_classic_interface_WriteLicense, METH_NOARGS, "" },
  { "WriteTable", _wrap_classic_interface_WriteTable, METH_NOARGS, "" },
  { "PrintStringWithFont", _wrap_classic_interface_PrintStringWithFont, METH_NOARGS, "" },
  { "Get_BatteryCondition", _wrap_classic_interface_Get_BatteryCondition, METH_NOARGS, "" },
  { "Get_CheckResult", _wrap_classic_interface_Get_CheckResult, METH_NOARGS, "" },
  { "Set_CheckResult", _wrap_classic_interface_Set_CheckResult, METH_O, "" },
  { "Get_CurrentDozeInMilliliters", _wrap_classic_interface_Get_CurrentDozeInMilliliters, METH_NOARGS, "" },
  { "Set_CurrentDozeInMilliliters", _wrap_classic_interface_Set_CurrentDozeInMilliliters, METH_O, "" },
  { "Get_CurrentDozeInMoney", _wrap_classic_interface_Get_CurrentDozeInMoney, METH_NOARGS, "" },
  { "Set_CurrentDozeInMoney", _wrap_classic_interface_Set_CurrentDozeInMoney, METH_O, "" },
  { "Get_DozeInMilliliters", _wrap_classic_interface_Get_DozeInMilliliters, METH_NOARGS, "" },
  { "Set_DozeInMilliliters", _wrap_classic_interface_Set_DozeInMilliliters, METH_O, "" },
  { "Get_DozeInMoney", _wrap_classic_interface_Get_DozeInMoney, METH_NOARGS, "" },
  { "Set_DozeInMoney", _wrap_classic_interface_Set_DozeInMoney, METH_O, "" },
  { "Get_EmergencyStopCode", _wrap_classic_interface_Get_EmergencyStopCode, METH_NOARGS, "" },
  { "Get_EmergencyStopCodeDescription", _wrap_classic_interface_Get_EmergencyStopCodeDescription, METH_NOARGS, "" },
  { "Get_IsCheckClosed", _wrap_classic_interface_Get_IsCheckClosed, METH_NOARGS, "" },
  { "Get_IsCheckMadeOut", _wrap_classic_interface_Get_IsCheckMadeOut, METH_NOARGS, "" },
  { "Get_Motor", _wrap_classic_interface_Get_Motor, METH_NOARGS, "" },
  { "Get_Pistol", _wrap_classic_interface_Get_Pistol, METH_NOARGS, "" },
  { "Get_RKNumber", _wrap_classic_interface_Get_RKNumber, METH_NOARGS, "" },
  { "Set_RKNumber", _wrap_classic_interface_Set_RKNumber, METH_O, "" },
  { "Get_RoughValve", _wrap_classic_interface_Get_RoughValve, METH_NOARGS, "" },
  { "Get_SlowingInMilliliters", _wrap_classic_interface_Get_SlowingInMilliliters, METH_NOARGS, "" },
  { "Set_SlowingInMilliliters", _wrap_classic_interface_Set_SlowingInMilliliters, METH_O, "" },
  { "Get_SlowingValve", _wrap_classic_interface_Get_SlowingValve, METH_NOARGS, "" },
  { "Get_StatusRK", _wrap_classic_interface_Get_StatusRK, METH_NOARGS, "" },
  { "Get_StatusRKDescription", _wrap_classic_interface_Get_StatusRKDescription, METH_NOARGS, "" },
  { "Get_TRKNumber", _wrap_classic_interface_Get_TRKNumber, METH_NOARGS, "" },
  { "Set_TRKNumber", _wrap_classic_interface_Set_TRKNumber, METH_O, "" },
  { "Get_WaitPrintingTime", _wrap_classic_interface_Get_WaitPrintingTime, METH_NOARGS, "" },
  { "EKLZActivizationResult", _wrap_classic_interface_EKLZActivizationResult, METH_NOARGS, "" },
  { "EKLZActivization", _wrap_classic_interface_EKLZActivization, METH_NOARGS, "" },
  { "CloseEKLZArchive", _wrap_classic_interface_CloseEKLZArchive, METH_NOARGS, "" },
  { "GetEKLZSerialNumber", _wrap_classic_interface_GetEKLZSerialNumber, METH_NOARGS, "" },
  { "EKLZInterrupt", _wrap_classic_interface_EKLZInterrupt, METH_NOARGS, "" },
  { "GetEKLZCode1Report", _wrap_classic_interface_GetEKLZCode1Report, METH_NOARGS, "" },
  { "GetEKLZCode2Report", _wrap_classic_interface_GetEKLZCode2Report, METH_NOARGS, "" },
  { "TestEKLZArchiveIntegrity", _wrap_classic_interface_TestEKLZArchiveIntegrity, METH_NOARGS, "" },
  { "Get_TestNumber", _wrap_classic_interface_Get_TestNumber, METH_NOARGS, "" },
  { "Set_TestNumber", _wrap_classic_interface_Set_TestNumber, METH_O, "" },
  { "GetEKLZVersion", _wrap_classic_interface_GetEKLZVersion, METH_NOARGS, "" },
  { "InitEKLZArchive", _wrap_classic_interface_InitEKLZArchive, METH_NOARGS, "" },
  { "GetEKLZData", _wrap_classic_interface_GetEKLZData, METH_NOARGS, "" },
  { "GetEKLZJournal", _wrap_classic_interface_GetEKLZJournal, METH_NOARGS, "" },
  { "GetEKLZDocument", _wrap_classic_interface_GetEKLZDocument, METH_NOARGS, "" },
  { "GetEKLZDepartmentReportInDatesRange", _wrap_classic_interface_GetEKLZDepartmentReportInDatesRange, METH_NOARGS, "" },
  { "GetEKLZDepartmentReportInSessionsRange", _wrap_classic_interface_GetEKLZDepartmentReportInSessionsRange, METH_NOARGS, "" },
  { "GetEKLZSessionReportInDatesRange", _wrap_classic_interface_GetEKLZSessionReportInDatesRange, METH_NOARGS, "" },
  { "GetEKLZSessionReportInSessionsRange", _wrap_classic_interface_GetEKLZSessionReportInSessionsRange, METH_NOARGS, "" },
  { "GetEKLZSessionTotal", _wrap_classic_interface_GetEKLZSessionTotal, METH_NOARGS, "" },
  { "GetEKLZActivizationResult", _wrap_classic_interface_GetEKLZActivizationResult, METH_NOARGS, "" },
  { "SetEKLZResultCode", _wrap_classic_interface_SetEKLZResultCode, METH_NOARGS, "" },
  { "Set_EKLZResultCode", _wrap_classic_interface_Set_EKLZResultCode, METH_O, "" },
  { "OpenFiscalSlipDocument", _wrap_classic_interface_OpenFiscalSlipDocument, METH_NOARGS, "" },
  { "OpenStandardFiscalSlipDocument", _wrap_classic_interface_OpenStandardFiscalSlipDocument, METH_NOARGS, "" },
  { "RegistrationOnSlipDocument", _wrap_classic_interface_RegistrationOnSlipDocument, METH_NOARGS, "" },
  { "StandardRegistrationOnSlipDocument", _wrap_classic_interface_StandardRegistrationOnSlipDocument, METH_NOARGS, "" },
  { "ChargeOnSlipDocument", _wrap_classic_interface_ChargeOnSlipDocument, METH_NOARGS, "" },
  { "StandardChargeOnSlipDocument", _wrap_classic_interface_StandardChargeOnSlipDocument, METH_NOARGS, "" },
  { "CloseCheckOnSlipDocument", _wrap_classic_interface_CloseCheckOnSlipDocument, METH_NOARGS, "" },
  { "StandardCloseCheckOnSlipDocument", _wrap_classic_interface_StandardCloseCheckOnSlipDocument, METH_NOARGS, "" },
  { "ConfigureSlipDocument", _wrap_classic_interface_ConfigureSlipDocument, METH_NOARGS, "" },
  { "ConfigureStandardSlipDocument", _wrap_classic_interface_ConfigureStandardSlipDocument, METH_NOARGS, "" },
  { "FillSlipDocumentWithUnfiscalInfo", _wrap_classic_interface_FillSlipDocumentWithUnfiscalInfo, METH_NOARGS, "" },
  { "ClearSlipDocumentBufferString", _wrap_classic_interface_ClearSlipDocumentBufferString, METH_NOARGS, "" },
  { "ClearSlipDocumentBuffer", _wrap_classic_interface_ClearSlipDocumentBuffer, METH_NOARGS, "" },
  { "PrintSlipDocument", _wrap_classic_interface_PrintSlipDocument, METH_NOARGS, "" },
  { "DiscountOnSlipDocument", _wrap_classic_interface_DiscountOnSlipDocument, METH_NOARGS, "" },
  { "StandardDiscountOnSlipDocument", _wrap_classic_interface_StandardDiscountOnSlipDocument, METH_NOARGS, "" },
  { "EjectSlipDocument", _wrap_classic_interface_EjectSlipDocument, METH_NOARGS, "" },
  { "LoadLineDataEx", _wrap_classic_interface_LoadLineDataEx, METH_NOARGS, "" },
  { "DrawEx", _wrap_classic_interface_DrawEx, METH_NOARGS, "" },
  { "ConfigureGeneralSlipDocument", _wrap_classic_interface_ConfigureGeneralSlipDocument, METH_NOARGS, "" },
  { "Get_Tax1TurnOverFont", _wrap_classic_interface_Get_Tax1TurnOverFont, METH_NOARGS, "" },
  { "Set_Tax1TurnOverFont", _wrap_classic_interface_Set_Tax1TurnOverFont, METH_O, "" },
  { "Get_Tax2TurnOverFont", _wrap_classic_interface_Get_Tax2TurnOverFont, METH_NOARGS, "" },
  { "Set_Tax2TurnOverFont", _wrap_classic_interface_Set_Tax2TurnOverFont, METH_O, "" },
  { "Get_Tax3TurnOverFont", _wrap_classic_interface_Get_Tax3TurnOverFont, METH_NOARGS, "" },
  { "Set_Tax3TurnOverFont", _wrap_classic_interface_Set_Tax3TurnOverFont, METH_O, "" },
  { "Get_Tax4TurnOverFont", _wrap_classic_interface_Get_Tax4TurnOverFont, METH_NOARGS, "" },
  { "Set_Tax4TurnOverFont", _wrap_classic_interface_Set_Tax4TurnOverFont, METH_O, "" },
  { "Get_Tax1TurnOverSymbolNumber", _wrap_classic_interface_Get_Tax1TurnOverSymbolNumber, METH_NOARGS, "" },
  { "Set_Tax1TurnOverSymbolNumber", _wrap_classic_interface_Set_Tax1TurnOverSymbolNumber, METH_O, "" },
  { "WideLoadLineData", _wrap_classic_interface_WideLoadLineData, METH_NOARGS, "" },
  { "PrintTaxReport", _wrap_classic_interface_PrintTaxReport, METH_NOARGS, "" },
  { "Get_FileVersionMS", _wrap_classic_interface_Get_FileVersionMS, METH_NOARGS, "" },
  { "Get_FileVersionLS", _wrap_classic_interface_Get_FileVersionLS, METH_NOARGS, "" },
  { "GetLongSerialNumberAndLongRNM", _wrap_classic_interface_GetLongSerialNumberAndLongRNM, METH_NOARGS, "" },
  { "SetLongSerialNumber", _wrap_classic_interface_SetLongSerialNumber, METH_NOARGS, "" },
  { "FiscalizationWithLongRNM", _wrap_classic_interface_FiscalizationWithLongRNM, METH_NOARGS, "" },
  { "Connect2", _wrap_classic_interface_Connect2, METH_NOARGS, "" },
  { "GetECRPrinterStatus", _wrap_classic_interface_GetECRPrinterStatus, METH_NOARGS, "" },
  { "Get_PrinterStatus", _wrap_classic_interface_Get_PrinterStatus, METH_NOARGS, "" },
  { "ServerConnect", _wrap_classic_interface_ServerConnect, METH_NOARGS, "" },
  { "ServerDisconnect", _wrap_classic_interface_ServerDisconnect, METH_NOARGS, "" },
  { "LockPort", _wrap_classic_interface_LockPort, METH_NOARGS, "" },
  { "UnlockPort", _wrap_classic_interface_UnlockPort, METH_NOARGS, "" },
  { "AdminUnlockPort", _wrap_classic_interface_AdminUnlockPort, METH_NOARGS, "" },
  { "AdminUnlockPorts", _wrap_classic_interface_AdminUnlockPorts, METH_NOARGS, "" },
  { "ServerCheckKey", _wrap_classic_interface_ServerCheckKey, METH_NOARGS, "" },
  { "GetFontMetrics", _wrap_classic_interface_GetFontMetrics, METH_NOARGS, "" },
  { "GetFreeLDNumber", _wrap_classic_interface_GetFreeLDNumber, METH_NOARGS, "" },
  { "ReadTable2", _wrap_classic_interface_ReadTable2, METH_NOARGS, "" },
  { "WriteTable2", _wrap_classic_interface_WriteTable2, METH_NOARGS, "" },
  { "SetFieldMinValue", _wrap_classic_interface_SetFieldMinValue, METH_O, "" },
  { "SetFieldMaxValue", _wrap_classic_interface_SetFieldMaxValue, METH_O, "" },
  { "Get_CPLog", _wrap_classic_interface_Get_CPLog, METH_NOARGS, "" },
  { "Set_CPLog", _wrap_classic_interface_Set_CPLog, METH_O, "" },
  { "CashControlOpen", _wrap_classic_interface_CashControlOpen, METH_NOARGS, "" },
  { "CashControlClose", _wrap_classic_interface_CashControlClose, METH_NOARGS, "" },
  { "SaveParams", _wrap_classic_interface_SaveParams, METH_NOARGS, "" },
  { "Get_CPLogFile", _wrap_classic_interface_Get_CPLogFile, METH_NOARGS, "" },
  { "Set_CPLogFile", _wrap_classic_interface_Set_CPLogFile, METH_O, "" },
  { "Get_ComLogFile", _wrap_classic_interface_Get_ComLogFile, METH_NOARGS, "" },
  { "Set_ComLogFile", _wrap_classic_interface_Set_ComLogFile, METH_O, "" },
  { "Get_RecoverError165", _wrap_classic_interface_Get_RecoverError165, METH_NOARGS, "" },
  { "Set_RecoverError165", _wrap_classic_interface_Set_RecoverError165, METH_O, "" },
  { "Get_MaxRecoverCount", _wrap_classic_interface_Get_MaxRecoverCount, METH_NOARGS, "" },
  { "Set_MaxRecoverCount", _wrap_classic_interface_Set_MaxRecoverCount, METH_O, "" },
  { "GetEKLZCode1Status", _wrap_classic_interface_GetEKLZCode1Status, METH_NOARGS, "" },
  { "GetEKLZCode2Status", _wrap_classic_interface_GetEKLZCode2Status, METH_NOARGS, "" },
  { "ReadWriteFM", _wrap_classic_interface_ReadWriteFM, METH_NOARGS, "" },
  { "PrintHeader", _wrap_classic_interface_PrintHeader, METH_NOARGS, "" },
  { "CloseCheckWithResult", _wrap_classic_interface_CloseCheckWithResult, METH_NOARGS, "" },
  { "Get_OperationCode", _wrap_classic_interface_Get_OperationCode, METH_NOARGS, "" },
  { "Get_AccType", _wrap_classic_interface_Get_AccType, METH_NOARGS, "" },
  { "Set_AccType", _wrap_classic_interface_Set_AccType, METH_O, "" },
  { "Get_Address", _wrap_classic_interface_Get_Address, METH_NOARGS, "" },
  { "Set_Address", _wrap_classic_interface_Set_Address, METH_O, "" },
  { "Get_WrittenByte", _wrap_classic_interface_Get_WrittenByte, METH_NOARGS, "" },
  { "Set_WrittenByte", _wrap_classic_interface_Set_WrittenByte, METH_O, "" },
  { "Get_ReadByte", _wrap_classic_interface_Get_ReadByte, METH_NOARGS, "" },
  { "Get_TransferByte", _wrap_classic_interface_Get_TransferByte, METH_NOARGS, "" },
  { "Set_TransferByte", _wrap_classic_interface_Set_TransferByte, METH_O, "" },
  { "AboutBox", _wrap_classic_interface_AboutBox, METH_NOARGS, "" },
  { "PresenterKeep", _wrap_classic_interface_PresenterKeep, METH_NOARGS, "" },
  { "PresenterPush", _wrap_classic_interface_PresenterPush, METH_NOARGS, "" },
  { "OpenScreen", _wrap_classic_interface_OpenScreen, METH_NOARGS, "" },
  { "CloseScreen", _wrap_classic_interface_CloseScreen, METH_NOARGS, "" },
  { "Get_ComLogOnlyErrors", _wrap_classic_interface_Get_ComLogOnlyErrors, METH_NOARGS, "" },
  { "Set_ComLogOnlyErrors", _wrap_classic_interface_Set_ComLogOnlyErrors, METH_O, "" },
  { "SetSCPassword", _wrap_classic_interface_SetSCPassword, METH_NOARGS, "" },
  { "MethodSupported", _wrap_classic_interface_MethodSupported, METH_NOARGS, "" },
  { "PropertySupported", _wrap_classic_interface_PropertySupported, METH_NOARGS, "" },
  { "LockPortTimeout", _wrap_classic_interface_LockPortTimeout, METH_NOARGS, "" },
  { "GetIBMStatus", _wrap_classic_interface_GetIBMStatus, METH_NOARGS, "" },
  { "GetShortIBMStatus", _wrap_classic_interface_GetShortIBMStatus, METH_NOARGS, "" },
  { "GetCommandParams", _wrap_classic_interface_GetCommandParams, METH_NOARGS, "" },
  { "SetCommandParams", _wrap_classic_interface_SetCommandParams, METH_NOARGS, "" },
  { "SaveCommandParams", _wrap_classic_interface_SaveCommandParams, METH_NOARGS, "" },
  { "SetAllCommandsParams", _wrap_classic_interface_SetAllCommandsParams, METH_NOARGS, "" },
  { "SetDefCommandsParams", _wrap_classic_interface_SetDefCommandsParams, METH_NOARGS, "" },
  { "OpenSession", _wrap_classic_interface_OpenSession, METH_NOARGS, "" },
  { "WaitForPrinting", _wrap_classic_interface_WaitForPrinting, METH_NOARGS, "" },
  { "GetInterval", _wrap_classic_interface_GetInterval, METH_NOARGS, "" },
  { "SetInterval", _wrap_classic_interface_SetInterval, METH_NOARGS, "" },
  { "ShowTablesDlg", _wrap_classic_interface_ShowTablesDlg, METH_NOARGS, "" },
  { "Get_ParamsPageIndex", _wrap_classic_interface_Get_ParamsPageIndex, METH_NOARGS, "" },
  { "Set_ParamsPageIndex", _wrap_classic_interface_Set_ParamsPageIndex, METH_O, "" },
  { "ShowPayParams", _wrap_classic_interface_ShowPayParams, METH_NOARGS, "" },
  { "ReprintSlipDocument", _wrap_classic_interface_ReprintSlipDocument, METH_NOARGS, "" },
  { "CardPayProperties", _wrap_classic_interface_CardPayProperties, METH_NOARGS, "" },
  { "Get_CardPayEnabled", _wrap_classic_interface_Get_CardPayEnabled, METH_NOARGS, "" },
  { "Set_CardPayEnabled", _wrap_classic_interface_Set_CardPayEnabled, METH_O, "" },
  { "Get_CardPayType", _wrap_classic_interface_Get_CardPayType, METH_NOARGS, "" },
  { "Set_CardPayType", _wrap_classic_interface_Set_CardPayType, METH_O, "" },
  { "Get_LogCommands", _wrap_classic_interface_Get_LogCommands, METH_NOARGS, "" },
  { "Set_LogCommands", _wrap_classic_interface_Set_LogCommands, METH_O, "" },
  { "Get_LogMethods", _wrap_classic_interface_Get_LogMethods, METH_NOARGS, "" },
  { "Set_LogMethods", _wrap_classic_interface_Set_LogMethods, METH_O, "" },
  { "PrintLine", _wrap_classic_interface_PrintLine, METH_NOARGS, "" },
  { "JournalClear", _wrap_classic_interface_JournalClear, METH_NOARGS, "" },
  { "JournalGetRow", _wrap_classic_interface_JournalGetRow, METH_NOARGS, "" },
  { "JournalInit", _wrap_classic_interface_JournalInit, METH_NOARGS, "" },
  { "FindDevice", _wrap_classic_interface_FindDevice, METH_NOARGS, "" },
  { "LoadParams", _wrap_classic_interface_LoadParams, METH_NOARGS, "" },
  { "FinishDocument", _wrap_classic_interface_FinishDocument, METH_NOARGS, "" },
  { "PrintTrailer", _wrap_classic_interface_PrintTrailer, METH_NOARGS, "" },
  { "WaitForCheckClose", _wrap_classic_interface_WaitForCheckClose, METH_NOARGS, "" },
  { "GetSummFactor", _wrap_classic_interface_GetSummFactor, METH_NOARGS, "" },
  { "GetQuantityFactor", _wrap_classic_interface_GetQuantityFactor, METH_NOARGS, "" },
  { "ReadDeviceMetrics", _wrap_classic_interface_ReadDeviceMetrics, METH_NOARGS, "" },
  { "ReadEcrStatus", _wrap_classic_interface_ReadEcrStatus, METH_NOARGS, "" },
  { "SaveState", _wrap_classic_interface_SaveState, METH_NOARGS, "" },
  { "RestoreState", _wrap_classic_interface_RestoreState, METH_NOARGS, "" },
  { "Get_HasCashControlLicense", _wrap_classic_interface_Get_HasCashControlLicense, METH_NOARGS, "" },
  { "LoadImage", _wrap_classic_interface_LoadImage, METH_NOARGS, "" },
  { "GetCashAcceptorStatus", _wrap_classic_interface_GetCashAcceptorStatus, METH_NOARGS, "" },
  { "GetCashAcceptorRegisters", _wrap_classic_interface_GetCashAcceptorRegisters, METH_NOARGS, "" },
  { "CashAcceptorReport", _wrap_classic_interface_CashAcceptorReport, METH_NOARGS, "" },
  { "ClearResult", _wrap_classic_interface_ClearResult, METH_NOARGS, "" },
  { "MasterPayClearBuffer", _wrap_classic_interface_MasterPayClearBuffer, METH_NOARGS, "" },
  { "MasterPayAddTextBlock", _wrap_classic_interface_MasterPayAddTextBlock, METH_NOARGS, "" },
  { "MasterPayCreateMac", _wrap_classic_interface_MasterPayCreateMac, METH_NOARGS, "" },
  { "LoadBlockData", _wrap_classic_interface_LoadBlockData, METH_NOARGS, "" },
  { "GetEKLZCode3Report", _wrap_classic_interface_GetEKLZCode3Report, METH_NOARGS, "" },
  { "ReadModemParameter", _wrap_classic_interface_ReadModemParameter, METH_NOARGS, "" },
  { "WriteModemParameter", _wrap_classic_interface_WriteModemParameter, METH_NOARGS, "" },
  { "Get_ParameterNumber", _wrap_classic_interface_Get_ParameterNumber, METH_NOARGS, "" },
  { "Set_ParameterNumber", _wrap_classic_interface_Set_ParameterNumber, METH_O, "" },
  { "GetPortNames", _wrap_classic_interface_GetPortNames, METH_NOARGS, "" },
  { "OutputReceipt", _wrap_classic_interface_OutputReceipt, METH_NOARGS, "" },
  { "Sale2", _wrap_classic_interface_Sale2, METH_NOARGS, "" },
  { "PrintCliche", _wrap_classic_interface_PrintCliche, METH_NOARGS, "" },
  { "PrintBarcodeLine", _wrap_classic_interface_PrintBarcodeLine, METH_NOARGS, "" },
  { "PrintBarcodeGraph", _wrap_classic_interface_PrintBarcodeGraph, METH_NOARGS, "" },
  { "Get_BarcodeTypes", _wrap_classic_interface_Get_BarcodeTypes, METH_NOARGS, "" },
  { "Get_BarcodeAlignments", _wrap_classic_interface_Get_BarcodeAlignments, METH_NOARGS, "" },
  { "ResetECR", _wrap_classic_interface_ResetECR, METH_NOARGS, "" },
  { "PrintZReportFromBuffer", _wrap_classic_interface_PrintZReportFromBuffer, METH_NOARGS, "" },
  { "PrintZReportInBuffer", _wrap_classic_interface_PrintZReportInBuffer, METH_NOARGS, "" },
  { "Get_LogFileMaxSize", _wrap_classic_interface_Get_LogFileMaxSize, METH_NOARGS, "" },
  { "Set_LogFileMaxSize", _wrap_classic_interface_Set_LogFileMaxSize, METH_O, "" },
  { "ClearPrintBuffer", _wrap_classic_interface_ClearPrintBuffer, METH_NOARGS, "" },
  { "ReadPrintBufferLine", _wrap_classic_interface_ReadPrintBufferLine, METH_NOARGS, "" },
  { "Get_PrintBufferLineNumber", _wrap_classic_interface_Get_PrintBufferLineNumber, METH_NOARGS, "" },
  { "Get_NakCount", _wrap_classic_interface_Get_NakCount, METH_NOARGS, "" },
  { "Set_NakCount", _wrap_classic_interface_Set_NakCount, METH_O, "" },
  { "Get_MaxAnswerReadCount", _wrap_classic_interface_Get_MaxAnswerReadCount, METH_NOARGS, "" },
  { "Get_MaxCommandSendCount", _wrap_classic_interface_Get_MaxCommandSendCount, METH_NOARGS, "" },
  { "Get_MaxENQSendCount", _wrap_classic_interface_Get_MaxENQSendCount, METH_NOARGS, "" },
  { "Set_MaxAnswerReadCount", _wrap_classic_interface_Set_MaxAnswerReadCount, METH_O, "" },
  { "Set_MaxCommandSendCount", _wrap_classic_interface_Set_MaxCommandSendCount, METH_O, "" },
  { "Set_MaxENQSendCount", _wrap_classic_interface_Set_MaxENQSendCount, METH_O, "" },
  { "OpenNonfiscalDocument", _wrap_classic_interface_OpenNonfiscalDocument, METH_NOARGS, "" },
  { "CloseNonFiscalDocument", _wrap_classic_interface_CloseNonFiscalDocument, METH_NOARGS, "" },
  { "PrintAttribute", _wrap_classic_interface_PrintAttribute, METH_NOARGS, "" },
  { "Get_ModelParamValue", _wrap_classic_interface_Get_ModelParamValue, METH_NOARGS, "" },
  { "LoadCashControlParams", _wrap_classic_interface_LoadCashControlParams, METH_NOARGS, "" },
  { "Get_EnteredTaxPassword", _wrap_classic_interface_Get_EnteredTaxPassword, METH_NOARGS, "" },
  { "Set_BanknoteType", _wrap_classic_interface_Set_BanknoteType, METH_O, "" },
  { "ReadBanknoteCount", _wrap_classic_interface_ReadBanknoteCount, METH_NOARGS, "" },
  { "PrintOperationalTaxReport", _wrap_classic_interface_PrintOperationalTaxReport, METH_NOARGS, "" },
  { "Get_CapOpenCheck", _wrap_classic_interface_Get_CapOpenCheck, METH_NOARGS, "" },
  { "Get_PollDescription", _wrap_classic_interface_Get_PollDescription, METH_NOARGS, "" },
  { "WaitConnection", _wrap_classic_interface_WaitConnection, METH_NOARGS, "" },
  { "ReadModelParamDescription", _wrap_classic_interface_ReadModelParamDescription, METH_NOARGS, "" },
  { "PrintBarcodeUsingPrinter", _wrap_classic_interface_PrintBarcodeUsingPrinter, METH_NOARGS, "" },
  { "CloseCheckWithKPK", _wrap_classic_interface_CloseCheckWithKPK, METH_NOARGS, "" },
  { "ReadEKLZActivizationParams", _wrap_classic_interface_ReadEKLZActivizationParams, METH_NOARGS, "" },
  { "GetShortReportInDatesRange", _wrap_classic_interface_GetShortReportInDatesRange, METH_NOARGS, "" },
  { "GetShortReportInSessionRange", _wrap_classic_interface_GetShortReportInSessionRange, METH_NOARGS, "" },
  { "ReadLastReceipt", _wrap_classic_interface_ReadLastReceipt, METH_NOARGS, "" },
  { "ReadLastReceiptLine", _wrap_classic_interface_ReadLastReceiptLine, METH_NOARGS, "" },
  { "ReadLastReceiptMac", _wrap_classic_interface_ReadLastReceiptMac, METH_NOARGS, "" },
  { "BeginDocument", _wrap_classic_interface_BeginDocument, METH_NOARGS, "" },
  { "EndDocument", _wrap_classic_interface_EndDocument, METH_NOARGS, "" },
  { "Print2DBarcode", _wrap_classic_interface_Print2DBarcode, METH_NOARGS, "" },
  { "LoadAndPrint2DBarcode", _wrap_classic_interface_LoadAndPrint2DBarcode, METH_NOARGS, "" },
  { "ExcisableOperation", _wrap_classic_interface_ExcisableOperation, METH_NOARGS, "" },
  { "ReadReportBufferLine", _wrap_classic_interface_ReadReportBufferLine, METH_NOARGS, "" },
  { "ReadParams", _wrap_classic_interface_ReadParams, METH_NOARGS, "" },
  { "GetCashRegEx", _wrap_classic_interface_GetCashRegEx, METH_NOARGS, "" },
  { "GetWareBaseCashRegs", _wrap_classic_interface_GetWareBaseCashRegs, METH_NOARGS, "" },
  { "PrintCashierReport", _wrap_classic_interface_PrintCashierReport, METH_NOARGS, "" },
  { "PrintHourlyReport", _wrap_classic_interface_PrintHourlyReport, METH_NOARGS, "" },
  { "PrintWareReport", _wrap_classic_interface_PrintWareReport, METH_NOARGS, "" },
  { "UpdateWare", _wrap_classic_interface_UpdateWare, METH_NOARGS, "" },
  { "CheckFM", _wrap_classic_interface_CheckFM, METH_NOARGS, "" },
  { "RemoveWare", _wrap_classic_interface_RemoveWare, METH_NOARGS, "" },
  { "ReadErrorDescription", _wrap_classic_interface_ReadErrorDescription, METH_NOARGS, "" },
  { "ReadLastErrorDescription", _wrap_classic_interface_ReadLastErrorDescription, METH_NOARGS, "" },
  { "ReadWare", _wrap_classic_interface_ReadWare, METH_NOARGS, "" },
  { "ReadModelParam", _wrap_classic_interface_ReadModelParam, METH_NOARGS, "" },
  { "InitEEPROM", _wrap_classic_interface_InitEEPROM, METH_NOARGS, "" },
  { "CheckConnection", _wrap_classic_interface_CheckConnection, METH_NOARGS, "" },
  { "ChangeProtocol", _wrap_classic_interface_ChangeProtocol, METH_NOARGS, "" },
  { "GetECRParams", _wrap_classic_interface_GetECRParams, METH_NOARGS, "" },
  { "ShowImportDlg", _wrap_classic_interface_ShowImportDlg, METH_NOARGS, "" },
  { "JournalOperation", _wrap_classic_interface_JournalOperation, METH_NOARGS, "" },
  { "MFPActivization", _wrap_classic_interface_MFPActivization, METH_NOARGS, "" },
  { "MFPCloseArchive", _wrap_classic_interface_MFPCloseArchive, METH_NOARGS, "" },
  { "MFPGetPermitActivizationCode", _wrap_classic_interface_MFPGetPermitActivizationCode, METH_NOARGS, "" },
  { "MFPGetCustomerCode", _wrap_classic_interface_MFPGetCustomerCode, METH_NOARGS, "" },
  { "MFPPrepareActivization", _wrap_classic_interface_MFPPrepareActivization, METH_NOARGS, "" },
  { "MFPSetCustomerCode", _wrap_classic_interface_MFPSetCustomerCode, METH_NOARGS, "" },
  { "MFPSetPermitActivizationCode", _wrap_classic_interface_MFPSetPermitActivizationCode, METH_NOARGS, "" },
  { "MFPGetPrepareActivizationResult", _wrap_classic_interface_MFPGetPrepareActivizationResult, METH_NOARGS, "" },
  { "CloseCheckEx", _wrap_classic_interface_CloseCheckEx, METH_NOARGS, "" },
  { "GetMFPCode3Status", _wrap_classic_interface_GetMFPCode3Status, METH_NOARGS, "" },
  { "Get_ReadTimeout", _wrap_classic_interface_Get_ReadTimeout, METH_NOARGS, "" },
  { "Set_ReadTimeout", _wrap_classic_interface_Set_ReadTimeout, METH_O, "" },
  { "ClearReportBuffer", _wrap_classic_interface_ClearReportBuffer, METH_NOARGS, "" },
  { "ShowAdditionalParams", _wrap_classic_interface_ShowAdditionalParams, METH_NOARGS, "" },
  { "GetCloudCashdeskParams", _wrap_classic_interface_GetCloudCashdeskParams, METH_NOARGS, "" },
  { "DrawScale", _wrap_classic_interface_DrawScale, METH_NOARGS, "" },
  { "LoadGraphics512", _wrap_classic_interface_LoadGraphics512, METH_NOARGS, "" },
  { "PrintGraphics512", _wrap_classic_interface_PrintGraphics512, METH_NOARGS, "" },
  { "Get_GraphBufferType", _wrap_classic_interface_Get_GraphBufferType, METH_NOARGS, "" },
  { "Set_GraphBufferType", _wrap_classic_interface_Set_GraphBufferType, METH_O, "" },
  { "Get_LineLength", _wrap_classic_interface_Get_LineLength, METH_NOARGS, "" },
  { "Set_LineLength", _wrap_classic_interface_Set_LineLength, METH_O, "" },
  { "Set_FNDocumentData", _wrap_classic_interface_Set_FNDocumentData, METH_O, "" },
  { "Set_FNLifeState", _wrap_classic_interface_Set_FNLifeState, METH_O, "" },
  { "Set_FNSessionState", _wrap_classic_interface_Set_FNSessionState, METH_O, "" },
  { "Set_FNSoftVersion", _wrap_classic_interface_Set_FNSoftVersion, METH_O, "" },
  { "Set_FNWarningFlags", _wrap_classic_interface_Set_FNWarningFlags, METH_O, "" },
  { "FNGetExpirationTime", _wrap_classic_interface_FNGetExpirationTime, METH_NOARGS, "" },
  { "FNGetSerial", _wrap_classic_interface_FNGetSerial, METH_NOARGS, "" },
  { "FNGetStatus", _wrap_classic_interface_FNGetStatus, METH_NOARGS, "" },
  { "FNGetVersion", _wrap_classic_interface_FNGetVersion, METH_NOARGS, "" },
  { "FNBeginFiscalization", _wrap_classic_interface_FNBeginFiscalization, METH_NOARGS, "" },
  { "FNFiscalization", _wrap_classic_interface_FNFiscalization, METH_NOARGS, "" },
  { "Get_WorkMode", _wrap_classic_interface_Get_WorkMode, METH_NOARGS, "" },
  { "Set_WorkMode", _wrap_classic_interface_Set_WorkMode, METH_O, "" },
  { "FNCancelDocument", _wrap_classic_interface_FNCancelDocument, METH_NOARGS, "" },
  { "FNResetState", _wrap_classic_interface_FNResetState, METH_NOARGS, "" },
  { "FNFindDocument", _wrap_classic_interface_FNFindDocument, METH_NOARGS, "" },
  { "Get_DocumentData", _wrap_classic_interface_Get_DocumentData, METH_NOARGS, "" },
  { "Set_DocumentData", _wrap_classic_interface_Set_DocumentData, METH_O, "" },
  { "FNOpenSession", _wrap_classic_interface_FNOpenSession, METH_NOARGS, "" },
  { "FNSendTLV", _wrap_classic_interface_FNSendTLV, METH_NOARGS, "" },
  { "FNDiscountOperation", _wrap_classic_interface_FNDiscountOperation, METH_NOARGS, "" },
  { "FNStorno", _wrap_classic_interface_FNStorno, METH_NOARGS, "" },
  { "OFDExchange", _wrap_classic_interface_OFDExchange, METH_NOARGS, "" },
  { "Get_OFDPort", _wrap_classic_interface_Get_OFDPort, METH_NOARGS, "" },
  { "Set_OFDPort", _wrap_classic_interface_Set_OFDPort, METH_O, "" },
  { "Get_OFDServer", _wrap_classic_interface_Get_OFDServer, METH_NOARGS, "" },
  { "Set_OFDServer", _wrap_classic_interface_Set_OFDServer, METH_O, "" },
  { "Get_OFDPollPeriod", _wrap_classic_interface_Get_OFDPollPeriod, METH_NOARGS, "" },
  { "Set_OFDPollPeriod", _wrap_classic_interface_Set_OFDPollPeriod, METH_O, "" },
  { "Get_OFDEnabled", _wrap_classic_interface_Get_OFDEnabled, METH_NOARGS, "" },
  { "Set_OFDEnabled", _wrap_classic_interface_Set_OFDEnabled, METH_O, "" },
  { "FNBeginCalculationStateReport", _wrap_classic_interface_FNBeginCalculationStateReport, METH_NOARGS, "" },
  { "FNBeginCloseFiscalMode", _wrap_classic_interface_FNBeginCloseFiscalMode, METH_NOARGS, "" },
  { "FNBeginCloseSession", _wrap_classic_interface_FNBeginCloseSession, METH_NOARGS, "" },
  { "FNBeginCorrectionReceipt", _wrap_classic_interface_FNBeginCorrectionReceipt, METH_NOARGS, "" },
  { "FNBeginOpenSession", _wrap_classic_interface_FNBeginOpenSession, METH_NOARGS, "" },
  { "FNBeginRegistrationReport", _wrap_classic_interface_FNBeginRegistrationReport, METH_NOARGS, "" },
  { "FNBuildCalculationStateReport", _wrap_classic_interface_FNBuildCalculationStateReport, METH_NOARGS, "" },
  { "FNBuildCorrectionReceipt", _wrap_classic_interface_FNBuildCorrectionReceipt, METH_NOARGS, "" },
  { "FNBuildRegistrationReport", _wrap_classic_interface_FNBuildRegistrationReport, METH_NOARGS, "" },
  { "FNCloseFiscalMode", _wrap_classic_interface_FNCloseFiscalMode, METH_NOARGS, "" },
  { "FNCloseSession", _wrap_classic_interface_FNCloseSession, METH_NOARGS, "" },
  { "FNGetCurrentSessionParams", _wrap_classic_interface_FNGetCurrentSessionParams, METH_NOARGS, "" },
  { "FNGetInfoExchangeStatus", _wrap_classic_interface_FNGetInfoExchangeStatus, METH_NOARGS, "" },
  { "FNGetOFDTicketByDocNumber", _wrap_classic_interface_FNGetOFDTicketByDocNumber, METH_NOARGS, "" },
  { "FNGetUnconfirmedDocCount", _wrap_classic_interface_FNGetUnconfirmedDocCount, METH_NOARGS, "" },
  { "FNReadFiscalDocumentTLV", _wrap_classic_interface_FNReadFiscalDocumentTLV, METH_NOARGS, "" },
  { "FNRequestFiscalDocumentTLV", _wrap_classic_interface_FNRequestFiscalDocumentTLV, METH_NOARGS, "" },
  { "FNBuildReregistrationReport", _wrap_classic_interface_FNBuildReregistrationReport, METH_NOARGS, "" },
  { "FNGetFiscalizationResult", _wrap_classic_interface_FNGetFiscalizationResult, METH_NOARGS, "" },
  { "FNDiscountTaxOperation", _wrap_classic_interface_FNDiscountTaxOperation, METH_NOARGS, "" },
  { "FNCloseCheckEx", _wrap_classic_interface_FNCloseCheckEx, METH_NOARGS, "" },
  { "Get_TaxValue", _wrap_classic_interface_Get_TaxValue, METH_NOARGS, "" },
  { "Set_TaxValue", _wrap_classic_interface_Set_TaxValue, METH_O, "" },
  { "Get_DiscountName", _wrap_classic_interface_Get_DiscountName, METH_NOARGS, "" },
  { "Set_DiscountName", _wrap_classic_interface_Set_DiscountName, METH_O, "" },
  { "FNSendCustomerEmail", _wrap_classic_interface_FNSendCustomerEmail, METH_NOARGS, "" },
  { "Annulment", _wrap_classic_interface_Annulment, METH_NOARGS, "" },
  { "FNDiscountChargeRN", _wrap_classic_interface_FNDiscountChargeRN, METH_NOARGS, "" },
  { "ExportTables", _wrap_classic_interface_ExportTables, METH_NOARGS, "" },
  { "ImportTables", _wrap_classic_interface_ImportTables, METH_NOARGS, "" },
  { "FNSendTag", _wrap_classic_interface_FNSendTag, METH_NOARGS, "" },
  { "ReadSerialNumber", _wrap_classic_interface_ReadSerialNumber, METH_NOARGS, "" },
  { "FNPrintOperatorConfirm", _wrap_classic_interface_FNPrintOperatorConfirm, METH_NOARGS, "" },
  { "FNGetFiscalizationResultByNumber", _wrap_classic_interface_FNGetFiscalizationResultByNumber, METH_NOARGS, "" },
  { "AnnulmentRB", _wrap_classic_interface_AnnulmentRB, METH_NOARGS, "" },
  { "FNGetTagDescription", _wrap_classic_interface_FNGetTagDescription, METH_NOARGS, "" },
  { "FNPrintDocument", _wrap_classic_interface_FNPrintDocument, METH_NOARGS, "" },
  { "FNGetDocumentAsString", _wrap_classic_interface_FNGetDocumentAsString, METH_NOARGS, "" },
  { "Ping", _wrap_classic_interface_Ping, METH_NOARGS, "" },
  { "Get_ICSEnabled", _wrap_classic_interface_Get_ICSEnabled, METH_NOARGS, "" },
  { "Get_ICSPollPeriod", _wrap_classic_interface_Get_ICSPollPeriod, METH_NOARGS, "" },
  { "Set_ICSEnabled", _wrap_classic_interface_Set_ICSEnabled, METH_O, "" },
  { "Set_ICSPollPeriod", _wrap_classic_interface_Set_ICSPollPeriod, METH_O, "" },
  { "FNOperation", _wrap_classic_interface_FNOperation, METH_NOARGS, "" },
  { "FNSendTLVOperation", _wrap_classic_interface_FNSendTLVOperation, METH_NOARGS, "" },
  { "Get_Summ1Enabled", _wrap_classic_interface_Get_Summ1Enabled, METH_NOARGS, "" },
  { "Set_Summ1Enabled", _wrap_classic_interface_Set_Summ1Enabled, METH_O, "" },
  { "Get_TaxValue2Enabled", _wrap_classic_interface_Get_TaxValue2Enabled, METH_NOARGS, "" },
  { "Get_TaxValue3Enabled", _wrap_classic_interface_Get_TaxValue3Enabled, METH_NOARGS, "" },
  { "Get_TaxValue4Enabled", _wrap_classic_interface_Get_TaxValue4Enabled, METH_NOARGS, "" },
  { "Get_TaxValue5Enabled", _wrap_classic_interface_Get_TaxValue5Enabled, METH_NOARGS, "" },
  { "Get_TaxValue6Enabled", _wrap_classic_interface_Get_TaxValue6Enabled, METH_NOARGS, "" },
  { "Get_TaxValue7Enabled", _wrap_classic_interface_Get_TaxValue7Enabled, METH_NOARGS, "" },
  { "Get_TaxValue8Enabled", _wrap_classic_interface_Get_TaxValue8Enabled, METH_NOARGS, "" },
  { "Get_TaxValue9Enabled", _wrap_classic_interface_Get_TaxValue9Enabled, METH_NOARGS, "" },
  { "Get_TaxValue10Enabled", _wrap_classic_interface_Get_TaxValue10Enabled, METH_NOARGS, "" },
  { "Get_AddTaxesEnabled", _wrap_classic_interface_Get_AddTaxesEnabled, METH_NOARGS, "" },
  { "Get_TaxValueEnabled", _wrap_classic_interface_Get_TaxValueEnabled, METH_NOARGS, "" },
  { "Set_TaxValueEnabled", _wrap_classic_interface_Set_TaxValueEnabled, METH_O, "" },
  { "Set_TaxValue2Enabled", _wrap_classic_interface_Set_TaxValue2Enabled, METH_O, "" },
  { "Set_TaxValue3Enabled", _wrap_classic_interface_Set_TaxValue3Enabled, METH_O, "" },
  { "Set_TaxValue4Enabled", _wrap_classic_interface_Set_TaxValue4Enabled, METH_O, "" },
  { "Set_TaxValue5Enabled", _wrap_classic_interface_Set_TaxValue5Enabled, METH_O, "" },
  { "Set_TaxValue6Enabled", _wrap_classic_interface_Set_TaxValue6Enabled, METH_O, "" },
  { "Set_TaxValue7Enabled", _wrap_classic_interface_Set_TaxValue7Enabled, METH_O, "" },
  { "Set_TaxValue8Enabled", _wrap_classic_interface_Set_TaxValue8Enabled, METH_O, "" },
  { "Set_TaxValue9Enabled", _wrap_classic_interface_Set_TaxValue9Enabled, METH_O, "" },
  { "Set_TaxValue10Enabled", _wrap_classic_interface_Set_TaxValue10Enabled, METH_O, "" },
  { "Set_AddTaxesEnabled", _wrap_classic_interface_Set_AddTaxesEnabled, METH_O, "" },
  { "FNBuildCorrectionReceipt2", _wrap_classic_interface_FNBuildCorrectionReceipt2, METH_NOARGS, "" },
  { "Get_OFDReadTimeout", _wrap_classic_interface_Get_OFDReadTimeout, METH_NOARGS, "" },
  { "Set_OFDReadTimeout", _wrap_classic_interface_Set_OFDReadTimeout, METH_O, "" },
  { "FNGetNonClearableSumm", _wrap_classic_interface_FNGetNonClearableSumm, METH_NOARGS, "" },
  { "Get_AutoEoD", _wrap_classic_interface_Get_AutoEoD, METH_NOARGS, "" },
  { "Set_AutoEoD", _wrap_classic_interface_Set_AutoEoD, METH_O, "" },
  { "ResetSerialNumber", _wrap_classic_interface_ResetSerialNumber, METH_NOARGS, "" },
  { "DBFindDocument", _wrap_classic_interface_DBFindDocument, METH_NOARGS, "" },
  { "DBPrintDocument", _wrap_classic_interface_DBPrintDocument, METH_NOARGS, "" },
  { "Get_KKTLicense", _wrap_classic_interface_Get_KKTLicense, METH_NOARGS, "" },
  { "Get_LicenseNumber", _wrap_classic_interface_Get_LicenseNumber, METH_NOARGS, "" },
  { "Get_PUKCode", _wrap_classic_interface_Get_PUKCode, METH_NOARGS, "" },
  { "ReadKKTLicenses", _wrap_classic_interface_ReadKKTLicenses, METH_NOARGS, "" },
  { "Set_KKTLicense", _wrap_classic_interface_Set_KKTLicense, METH_O, "" },
  { "Set_LicenseNumber", _wrap_classic_interface_Set_LicenseNumber, METH_O, "" },
  { "Set_PUKCode", _wrap_classic_interface_Set_PUKCode, METH_O, "" },
  { "Get_OFDExchangeSuspended", _wrap_classic_interface_Get_OFDExchangeSuspended, METH_NOARGS, "" },
  { "Set_OFDExchangeSuspended", _wrap_classic_interface_Set_OFDExchangeSuspended, METH_O, "" },
  { "CloseCheckBel", _wrap_classic_interface_CloseCheckBel, METH_NOARGS, "" },
  { "Get_AutoOFDExchange", _wrap_classic_interface_Get_AutoOFDExchange, METH_NOARGS, "" },
  { "Set_AutoOFDExchange", _wrap_classic_interface_Set_AutoOFDExchange, METH_O, "" },
  { "GetKKTLicenseByNumber", _wrap_classic_interface_GetKKTLicenseByNumber, METH_NOARGS, "" },
  { "WriteKKTLicense", _wrap_classic_interface_WriteKKTLicense, METH_NOARGS, "" },
  { "FNSendSenderEmail", _wrap_classic_interface_FNSendSenderEmail, METH_NOARGS, "" },
  { "Get_EmailAddress", _wrap_classic_interface_Get_EmailAddress, METH_NOARGS, "" },
  { "Set_EmailAddress", _wrap_classic_interface_Set_EmailAddress, METH_O, "" },
  { "Get_Summ1AsString", _wrap_classic_interface_Get_Summ1AsString, METH_NOARGS, "" },
  { "Get_Summ2AsString", _wrap_classic_interface_Get_Summ2AsString, METH_NOARGS, "" },
  { "Get_Summ3AsString", _wrap_classic_interface_Get_Summ3AsString, METH_NOARGS, "" },
  { "Get_Summ4AsString", _wrap_classic_interface_Get_Summ4AsString, METH_NOARGS, "" },
  { "DBGetNextDocument", _wrap_classic_interface_DBGetNextDocument, METH_NOARGS, "" },
  { "DBPrintNextDocument", _wrap_classic_interface_DBPrintNextDocument, METH_NOARGS, "" },
  { "DBQueryDocumentsInSession", _wrap_classic_interface_DBQueryDocumentsInSession, METH_NOARGS, "" },
  { "OnlinePay", _wrap_classic_interface_OnlinePay, METH_NOARGS, "" },
  { "OPGetLastRequisite", _wrap_classic_interface_OPGetLastRequisite, METH_NOARGS, "" },
  { "OPGetLastStatus", _wrap_classic_interface_OPGetLastStatus, METH_NOARGS, "" },
  { "GenerateMonoToken", _wrap_classic_interface_GenerateMonoToken, METH_NOARGS, "" },
  { "RebootKKT", _wrap_classic_interface_RebootKKT, METH_NOARGS, "" },
  { "FNAddTag", _wrap_classic_interface_FNAddTag, METH_NOARGS, "" },
  { "FNBeginSTLVTag", _wrap_classic_interface_FNBeginSTLVTag, METH_NOARGS, "" },
  { "FNSendSTLVTag", _wrap_classic_interface_FNSendSTLVTag, METH_NOARGS, "" },
  { "FNSendSTLVTagOperation", _wrap_classic_interface_FNSendSTLVTagOperation, METH_NOARGS, "" },
  { "FNSendTagOperation", _wrap_classic_interface_FNSendTagOperation, METH_NOARGS, "" },
  { "Get_SymbolCode", _wrap_classic_interface_Get_SymbolCode, METH_NOARGS, "" },
  { "Set_SymbolCode", _wrap_classic_interface_Set_SymbolCode, METH_O, "" },
  { "Get_SymbolWidth", _wrap_classic_interface_Get_SymbolWidth, METH_NOARGS, "" },
  { "Set_SymbolWidth", _wrap_classic_interface_Set_SymbolWidth, METH_O, "" },
  { "Get_SymbolHeight", _wrap_classic_interface_Get_SymbolHeight, METH_NOARGS, "" },
  { "Set_SymbolHeight", _wrap_classic_interface_Set_SymbolHeight, METH_O, "" },
  { "Get_FileType", _wrap_classic_interface_Get_FileType, METH_NOARGS, "" },
  { "Set_FileType", _wrap_classic_interface_Set_FileType, METH_O, "" },
  { "Get_DelayOnDisconnect", _wrap_classic_interface_Get_DelayOnDisconnect, METH_NOARGS, "" },
  { "Set_DelayOnDisconnect", _wrap_classic_interface_Set_DelayOnDisconnect, METH_O, "" },
  { "Set_GTIN", _wrap_classic_interface_Set_GTIN, METH_O, "" },
  { "Get_GTIN", _wrap_classic_interface_Get_GTIN, METH_NOARGS, "" },
  { "FNSendItemCodeData", _wrap_classic_interface_FNSendItemCodeData, METH_NOARGS, "" },
  { "FNCheckItemBarcode", _wrap_classic_interface_FNCheckItemBarcode, METH_NOARGS, "" },
  { "FNCheckItemBarcode2", _wrap_classic_interface_FNCheckItemBarcode2, METH_NOARGS, "" },
  { "FNRequestRegistrationTLV", _wrap_classic_interface_FNRequestRegistrationTLV, METH_NOARGS, "" },
  { "ReadLoaderVersion", _wrap_classic_interface_ReadLoaderVersion, METH_NOARGS, "" },
  { "Get_RequestDocumentType", _wrap_classic_interface_Get_RequestDocumentType, METH_NOARGS, "" },
  { "Set_RequestDocumentType", _wrap_classic_interface_Set_RequestDocumentType, METH_O, "" },
  { "FNOpenCheckCorrection", _wrap_classic_interface_FNOpenCheckCorrection, METH_NOARGS, "" },
  { "Get_WorkModeEx", _wrap_classic_interface_Get_WorkModeEx, METH_NOARGS, "" },
  { "Set_WorkModeEx", _wrap_classic_interface_Set_WorkModeEx, METH_O, "" },
  { "Get_INNOFD", _wrap_classic_interface_Get_INNOFD, METH_NOARGS, "" },
  { "Set_INNOFD", _wrap_classic_interface_Set_INNOFD, METH_O, "" },
  { "Get_RegistrationReasonCodeEx", _wrap_classic_interface_Get_RegistrationReasonCodeEx, METH_NOARGS, "" },
  { "Set_RegistrationReasonCodeEx", _wrap_classic_interface_Set_RegistrationReasonCodeEx, METH_O, "" },
  { "FNCountersSync", _wrap_classic_interface_FNCountersSync, METH_NOARGS, "" },
  { "FNGetFreeMemoryResource", _wrap_classic_interface_FNGetFreeMemoryResource, METH_NOARGS, "" },
  { "ReadCashDrawerSum", _wrap_classic_interface_ReadCashDrawerSum, METH_NOARGS, "" },
  { "ReadFeatureLicenses", _wrap_classic_interface_ReadFeatureLicenses, METH_NOARGS, "" },
  { "WriteFeatureLicenses", _wrap_classic_interface_WriteFeatureLicenses, METH_NOARGS, "" },
  { "SetDeviceFunction", _wrap_classic_interface_SetDeviceFunction, METH_NOARGS, "" },
  { "GetDeviceFunction", _wrap_classic_interface_GetDeviceFunction, METH_NOARGS, "" },
  { "FNSendItemBarcode", _wrap_classic_interface_FNSendItemBarcode, METH_NOARGS, "" },
  { "FNGetKMServerExchangeStatus", _wrap_classic_interface_FNGetKMServerExchangeStatus, METH_NOARGS, "" },
  { "FNGetMarkingCodeWorkStatus", _wrap_classic_interface_FNGetMarkingCodeWorkStatus, METH_NOARGS, "" },
  { "FNBeginReadNotifications", _wrap_classic_interface_FNBeginReadNotifications, METH_NOARGS, "" },
  { "FNReadNotificationBlock", _wrap_classic_interface_FNReadNotificationBlock, METH_NOARGS, "" },
  { "FNConfirmNotificationRead", _wrap_classic_interface_FNConfirmNotificationRead, METH_NOARGS, "" },
  { "GetTagAsTLV", _wrap_classic_interface_GetTagAsTLV, METH_NOARGS, "" },
  { "ReadRandomSequence", _wrap_classic_interface_ReadRandomSequence, METH_NOARGS, "" },
  { "Authorization", _wrap_classic_interface_Authorization, METH_NOARGS, "" },
  { "FNAcceptMarkingCode", _wrap_classic_interface_FNAcceptMarkingCode, METH_NOARGS, "" },
  { "FNAcceptMakringCode", _wrap_classic_interface_FNAcceptMakringCode, METH_NOARGS, "" },
  { "FNDeclineMarkingCode", _wrap_classic_interface_FNDeclineMarkingCode, METH_NOARGS, "" },
  { "FNMarkingClearBuffer", _wrap_classic_interface_FNMarkingClearBuffer, METH_NOARGS, "" },
  { "FNBindMarkingItem", _wrap_classic_interface_FNBindMarkingItem, METH_NOARGS, "" },
  { "FNBeginReadArchive", _wrap_classic_interface_FNBeginReadArchive, METH_NOARGS, "" },
  { "FNReadArchiveItem", _wrap_classic_interface_FNReadArchiveItem, METH_NOARGS, "" },
  { "FNSaveArchive", _wrap_classic_interface_FNSaveArchive, METH_NOARGS, "" },
  { "FNSendUserAttribute", _wrap_classic_interface_FNSendUserAttribute, METH_NOARGS, "" },
  { "RenderDeclarativeDocument", _wrap_classic_interface_RenderDeclarativeDocument, METH_NOARGS, "" },
  { "LoadFont", _wrap_classic_interface_LoadFont, METH_NOARGS, "" },
  { "ReadFontHash", _wrap_classic_interface_ReadFontHash, METH_NOARGS, "" },
  { "ResetFont", _wrap_classic_interface_ResetFont, METH_NOARGS, "" },
  { "LoadFontSymbol", _wrap_classic_interface_LoadFontSymbol, METH_NOARGS, "" },
  { "DecodeTLVData", _wrap_classic_interface_DecodeTLVData, METH_NOARGS, "" },
  { "FNGetImplementation", _wrap_classic_interface_FNGetImplementation, METH_NOARGS, "" },
  { "FNGetOSUSupportStatus", _wrap_classic_interface_FNGetOSUSupportStatus, METH_NOARGS, "" },
  { "FNGetDocumentSize", _wrap_classic_interface_FNGetDocumentSize, METH_NOARGS, "" },
  { "FNReadFiscalBarcode", _wrap_classic_interface_FNReadFiscalBarcode, METH_NOARGS, "" },
  { "PrintStringWithWrap", _wrap_classic_interface_PrintStringWithWrap, METH_NOARGS, "" },
  { "FNCheckItemBarcodeCrpt", _wrap_classic_interface_FNCheckItemBarcodeCrpt, METH_NOARGS, "" },
  { "setPropertyChangedCallback", _wrap_classic_interface_setPropertyChangedCallback, METH_O, "" },
  { "setPropertyTouchedCallback", _wrap_classic_interface_setPropertyTouchedCallback, METH_O, "" },
  { "setLogCallback", (PyCFunction)(void(*)(void))_wrap_classic_interface_setLogCallback, METH_STATIC|METH_O, "" },
  { "setLogCallback_v2", (PyCFunction)(void(*)(void))_wrap_classic_interface_setLogCallback_v2, METH_STATIC|METH_O, "" },
  { NULL, NULL, 0, NULL } /* Sentinel */
};

static PyHeapTypeObject SwigPyBuiltin__kkt_driver__classic_interface_type = {
  {
#if PY_VERSION_HEX >= 0x03000000
    PyVarObject_HEAD_INIT(NULL, 0)
#else
    PyObject_HEAD_INIT(NULL)
    0,                                        /* ob_size */
#endif
    "fr_drv_ngx.classic_interface",           /* tp_name */
    sizeof(SwigPyObject),                     /* tp_basicsize */
    0,                                        /* tp_itemsize */
    _wrap_delete_classic_interface_destructor_closure,            /* tp_dealloc */
    (printfunc) 0,                            /* tp_print */
    (getattrfunc) 0,                          /* tp_getattr */
    (setattrfunc) 0,                          /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
    0,                                        /* tp_compare */
#else
    (cmpfunc) 0,                              /* tp_compare */
#endif
    (reprfunc) 0,                             /* tp_repr */
    &SwigPyBuiltin__kkt_driver__classic_interface_type.as_number, /* tp_as_number */
    &SwigPyBuiltin__kkt_driver__classic_interface_type.as_sequence,/* tp_as_sequence */
    &SwigPyBuiltin__kkt_driver__classic_interface_type.as_mapping,/* tp_as_mapping */
    SwigPyObject_hash,                        /* tp_hash */
    (ternaryfunc) 0,                          /* tp_call */
    (reprfunc) 0,                             /* tp_str */
    (getattrofunc) 0,                         /* tp_getattro */
    (setattrofunc) 0,                         /* tp_setattro */
    &SwigPyBuiltin__kkt_driver__classic_interface_type.as_buffer, /* tp_as_buffer */
#if PY_VERSION_HEX >= 0x03000000
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE,   /* tp_flags */
#else
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_CHECKTYPES, /* tp_flags */
#endif
    "kkt_driver::classic_interface",          /* tp_doc */
    (traverseproc) 0,                         /* tp_traverse */
    (inquiry) 0,                              /* tp_clear */
    SwigPyBuiltin__kkt_driver__classic_interface_richcompare,     /* tp_richcompare */
    0,                                        /* tp_weaklistoffset */
    (getiterfunc) 0,                          /* tp_iter */
    (iternextfunc) 0,                         /* tp_iternext */
    SwigPyBuiltin__kkt_driver__classic_interface_methods,         /* tp_methods */
    0,                                        /* tp_members */
    SwigPyBuiltin__kkt_driver__classic_interface_getset,          /* tp_getset */
    0,                                        /* tp_base */
    0,                                        /* tp_dict */
    (descrgetfunc) 0,                         /* tp_descr_get */
    (descrsetfunc) 0,                         /* tp_descr_set */
    offsetof(SwigPyObject, dict),             /* tp_dictoffset */
    _wrap_new_classic_interface,              /* tp_init */
    (allocfunc) 0,                            /* tp_alloc */
    (newfunc) 0,                              /* tp_new */
    (freefunc) 0,                             /* tp_free */
    (inquiry) 0,                              /* tp_is_gc */
    (PyObject *) 0,                           /* tp_bases */
    (PyObject *) 0,                           /* tp_mro */
    (PyObject *) 0,                           /* tp_cache */
    (PyObject *) 0,                           /* tp_subclasses */
    (PyObject *) 0,                           /* tp_weaklist */
    (destructor) 0,                           /* tp_del */
    (int) 0,                                  /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
    (destructor) 0,                           /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
    (vectorcallfunc) 0,                       /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
    0,                                        /* tp_print */
#endif
#ifdef COUNT_ALLOCS
    (Py_ssize_t) 0,                           /* tp_allocs */
    (Py_ssize_t) 0,                           /* tp_frees */
    (Py_ssize_t) 0,                           /* tp_maxalloc */
    0,                                        /* tp_prev */
    0,                                        /* tp_next */
#endif
  },
#if PY_VERSION_HEX >= 0x03050000
  {
    (unaryfunc) 0,                            /* am_await */
    (unaryfunc) 0,                            /* am_aiter */
    (unaryfunc) 0,                            /* am_anext */
  },
#endif
  {
    (binaryfunc) 0,                           /* nb_add */
    (binaryfunc) 0,                           /* nb_subtract */
    (binaryfunc) 0,                           /* nb_multiply */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc) 0,                           /* nb_divide */
#endif
    (binaryfunc) 0,                           /* nb_remainder */
    (binaryfunc) 0,                           /* nb_divmod */
    (ternaryfunc) 0,                          /* nb_power */
    (unaryfunc) 0,                            /* nb_negative */
    (unaryfunc) 0,                            /* nb_positive */
    (unaryfunc) 0,                            /* nb_absolute */
    (inquiry) 0,                              /* nb_nonzero */
    (unaryfunc) 0,                            /* nb_invert */
    (binaryfunc) 0,                           /* nb_lshift */
    (binaryfunc) 0,                           /* nb_rshift */
    (binaryfunc) 0,                           /* nb_and */
    (binaryfunc) 0,                           /* nb_xor */
    (binaryfunc) 0,                           /* nb_or */
#if PY_VERSION_HEX < 0x03000000
    (coercion) 0,                             /* nb_coerce */
#endif
    (unaryfunc) 0,                            /* nb_int */
#if PY_VERSION_HEX >= 0x03000000
    (void *) 0,                               /* nb_reserved */
#else
    (unaryfunc) 0,                            /* nb_long */
#endif
    (unaryfunc) 0,                            /* nb_float */
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc) 0,                            /* nb_oct */
    (unaryfunc) 0,                            /* nb_hex */
#endif
    (binaryfunc) 0,                           /* nb_inplace_add */
    (binaryfunc) 0,                           /* nb_inplace_subtract */
    (binaryfunc) 0,                           /* nb_inplace_multiply */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc) 0,                           /* nb_inplace_divide */
#endif
    (binaryfunc) 0,                           /* nb_inplace_remainder */
    (ternaryfunc) 0,                          /* nb_inplace_power */
    (binaryfunc) 0,                           /* nb_inplace_lshift */
    (binaryfunc) 0,                           /* nb_inplace_rshift */
    (binaryfunc) 0,                           /* nb_inplace_and */
    (binaryfunc) 0,                           /* nb_inplace_xor */
    (binaryfunc) 0,                           /* nb_inplace_or */
    (binaryfunc) 0,                           /* nb_floor_divide */
    (binaryfunc) 0,                           /* nb_true_divide */
    (binaryfunc) 0,                           /* nb_inplace_floor_divide */
    (binaryfunc) 0,                           /* nb_inplace_true_divide */
    (unaryfunc) 0,                            /* nb_index */
#if PY_VERSION_HEX >= 0x03050000
    (binaryfunc) 0,                           /* nb_matrix_multiply */
    (binaryfunc) 0,                           /* nb_inplace_matrix_multiply */
#endif
  },
  {
    (lenfunc) 0,                              /* mp_length */
    (binaryfunc) 0,                           /* mp_subscript */
    (objobjargproc) 0,                        /* mp_ass_subscript */
  },
  {
    (lenfunc) 0,                              /* sq_length */
    (binaryfunc) 0,                           /* sq_concat */
    (ssizeargfunc) 0,                         /* sq_repeat */
    (ssizeargfunc) 0,                         /* sq_item */
#if PY_VERSION_HEX >= 0x03000000
    (void *) 0,                               /* was_sq_slice */
#else
    (ssizessizeargfunc) 0,                    /* sq_slice */
#endif
    (ssizeobjargproc) 0,                      /* sq_ass_item */
#if PY_VERSION_HEX >= 0x03000000
    (void *) 0,                               /* was_sq_ass_slice */
#else
    (ssizessizeobjargproc) 0,                 /* sq_ass_slice */
#endif
    (objobjproc) 0,                           /* sq_contains */
    (binaryfunc) 0,                           /* sq_inplace_concat */
    (ssizeargfunc) 0,                         /* sq_inplace_repeat */
  },
  {
#if PY_VERSION_HEX < 0x03000000
    (readbufferproc) 0,                       /* bf_getreadbuffer */
    (writebufferproc) 0,                      /* bf_getwritebuffer */
    (segcountproc) 0,                         /* bf_getsegcount */
    (charbufferproc) 0,                       /* bf_getcharbuffer */
#endif
    (getbufferproc) 0,                        /* bf_getbuffer */
    (releasebufferproc) 0,                    /* bf_releasebuffer */
  },
    (PyObject *) 0,                           /* ht_name */
    (PyObject *) 0,                           /* ht_slots */
#if PY_VERSION_HEX >= 0x03030000
    (PyObject *) 0,                           /* ht_qualname */
    0,                                        /* ht_cached_keys */
#endif
};

SWIGINTERN SwigPyClientData SwigPyBuiltin__kkt_driver__classic_interface_clientdata = {0, 0, 0, 0, 0, 0, (PyTypeObject *)&SwigPyBuiltin__kkt_driver__classic_interface_type};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static swig_type_info _swigt__p_SwigPyObject = {"_p_SwigPyObject", "SwigPyObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_allocator_type = {"_p_allocator_type", "allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_difference_type = {"_p_difference_type", "difference_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_p_q_const__char_size_t_p_q_const__char_size_t__void = {"_p_f_int_p_q_const__char_size_t_p_q_const__char_size_t__void", "void (*)(int,char const *,size_t,char const *,size_t)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_r_q_const__std__string__void = {"_p_f_r_q_const__std__string__void", "void (*)(std::string const &)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "intptr_t *|int *|int_least32_t *|int_fast32_t *|int32_t *|int_fast16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kkt_driver__classic_interface = {"_p_kkt_driver__classic_interface", "kkt_driver::classic_interface *", 0, 0, (void*)&SwigPyBuiltin__kkt_driver__classic_interface_clientdata, 0};
static swig_type_info _swigt__p_long_long = {"_p_long_long", "int_least64_t *|int_fast64_t *|int64_t *|long long *|intmax_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_PyObject = {"_p_p_PyObject", "PyObject **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_short = {"_p_short", "short *|int_least16_t *|int16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_signed_char = {"_p_signed_char", "signed char *|int_least8_t *|int_fast8_t *|int8_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_type = {"_p_size_type", "size_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_unsigned_char_t = {"_p_std__allocatorT_unsigned_char_t", "std::vector< unsigned char >::allocator_type *|std::allocator< unsigned char > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__functionT_void_fstd__string_const_RF_t = {"_p_std__functionT_void_fstd__string_const_RF_t", "std::function< void (std::string const &) > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__invalid_argument = {"_p_std__invalid_argument", "std::invalid_argument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t = {"_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t", "std::vector< uint8_t,std::allocator< uint8_t > > *|std::vector< unsigned char > *|std::vector< unsigned char,std::allocator< unsigned char > > *|std::vector< uint8_t > *", 0, 0, (void*)&SwigPyBuiltin__std__vectorT_uint8_t_t_clientdata, 0};
static swig_type_info _swigt__p_swig__SwigPyIterator = {"_p_swig__SwigPyIterator", "swig::SwigPyIterator *", 0, 0, (void*)&SwigPyBuiltin__swig__SwigPyIterator_clientdata, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "unsigned char *|uint_least8_t *|uint_fast8_t *|uint8_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "uintptr_t *|uint_least32_t *|uint_fast32_t *|uint32_t *|unsigned int *|uint_fast16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long_long = {"_p_unsigned_long_long", "uint_least64_t *|uint_fast64_t *|uint64_t *|unsigned long long *|uintmax_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_short = {"_p_unsigned_short", "unsigned short *|uint_least16_t *|uint16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_value_type = {"_p_value_type", "value_type *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_SwigPyObject,
  &_swigt__p_allocator_type,
  &_swigt__p_char,
  &_swigt__p_difference_type,
  &_swigt__p_f_int_p_q_const__char_size_t_p_q_const__char_size_t__void,
  &_swigt__p_f_r_q_const__std__string__void,
  &_swigt__p_int,
  &_swigt__p_kkt_driver__classic_interface,
  &_swigt__p_long_long,
  &_swigt__p_p_PyObject,
  &_swigt__p_short,
  &_swigt__p_signed_char,
  &_swigt__p_size_type,
  &_swigt__p_std__allocatorT_unsigned_char_t,
  &_swigt__p_std__functionT_void_fstd__string_const_RF_t,
  &_swigt__p_std__invalid_argument,
  &_swigt__p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t,
  &_swigt__p_swig__SwigPyIterator,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long_long,
  &_swigt__p_unsigned_short,
  &_swigt__p_value_type,
};

static swig_cast_info _swigc__p_SwigPyObject[] = {  {&_swigt__p_SwigPyObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_allocator_type[] = {  {&_swigt__p_allocator_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_difference_type[] = {  {&_swigt__p_difference_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_p_q_const__char_size_t_p_q_const__char_size_t__void[] = {  {&_swigt__p_f_int_p_q_const__char_size_t_p_q_const__char_size_t__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_q_const__std__string__void[] = {  {&_swigt__p_f_r_q_const__std__string__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kkt_driver__classic_interface[] = {  {&_swigt__p_kkt_driver__classic_interface, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long_long[] = {  {&_swigt__p_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_PyObject[] = {  {&_swigt__p_p_PyObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_short[] = {  {&_swigt__p_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_signed_char[] = {  {&_swigt__p_signed_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_type[] = {  {&_swigt__p_size_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_unsigned_char_t[] = {  {&_swigt__p_std__allocatorT_unsigned_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__functionT_void_fstd__string_const_RF_t[] = {  {&_swigt__p_std__functionT_void_fstd__string_const_RF_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__invalid_argument[] = {  {&_swigt__p_std__invalid_argument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t[] = {  {&_swigt__p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_swig__SwigPyIterator[] = {  {&_swigt__p_swig__SwigPyIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long_long[] = {  {&_swigt__p_unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_short[] = {  {&_swigt__p_unsigned_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_value_type[] = {  {&_swigt__p_value_type, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_SwigPyObject,
  _swigc__p_allocator_type,
  _swigc__p_char,
  _swigc__p_difference_type,
  _swigc__p_f_int_p_q_const__char_size_t_p_q_const__char_size_t__void,
  _swigc__p_f_r_q_const__std__string__void,
  _swigc__p_int,
  _swigc__p_kkt_driver__classic_interface,
  _swigc__p_long_long,
  _swigc__p_p_PyObject,
  _swigc__p_short,
  _swigc__p_signed_char,
  _swigc__p_size_type,
  _swigc__p_std__allocatorT_unsigned_char_t,
  _swigc__p_std__functionT_void_fstd__string_const_RF_t,
  _swigc__p_std__invalid_argument,
  _swigc__p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t,
  _swigc__p_swig__SwigPyIterator,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long_long,
  _swigc__p_unsigned_short,
  _swigc__p_value_type,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
static PyTypeObject *builtin_bases[2];

/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int init;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    iter=module_head;
    do {
      if (iter==&swig_module) {
        /* Our module is already in the list, so there's nothing more to do. */
        return;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* otherwise we must add our module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpreters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %lu\n", (unsigned long)swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %lu %s\n", (unsigned long)i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %lu %s\n", (unsigned long)i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
    return PyUnicode_InternFromString("<Swig global variables>");
#else
    return PyString_FromString("<Swig global variables>");
#endif
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *str = PyUnicode_InternFromString("(");
    PyObject *tail;
    PyObject *joined;
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      tail = PyUnicode_FromString(var->name);
      joined = PyUnicode_Concat(str, tail);
      Py_DecRef(str);
      Py_DecRef(tail);
      str = joined;
      if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
      }
    }
    tail = PyUnicode_InternFromString(")");
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
#else
    PyObject *str = PyString_FromString("(");
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
    return str;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;
    if (!type_init) {
      const PyTypeObject tmp = {
#if PY_VERSION_HEX >= 0x03000000
        PyVarObject_HEAD_INIT(NULL, 0)
#else
        PyObject_HEAD_INIT(NULL)
        0,                                  /* ob_size */
#endif
        "swigvarlink",                      /* tp_name */
        sizeof(swig_varlinkobject),         /* tp_basicsize */
        0,                                  /* tp_itemsize */
        (destructor) swig_varlink_dealloc,  /* tp_dealloc */
        0,                                  /* tp_print */
        (getattrfunc) swig_varlink_getattr, /* tp_getattr */
        (setattrfunc) swig_varlink_setattr, /* tp_setattr */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc) swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
        0,                                  /* tp_del */
        0,                                  /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
        0,                                  /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
        0,                                  /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
        0,                                  /* tp_print */
#endif
#ifdef COUNT_ALLOCS
        0,                                  /* tp_allocs */
        0,                                  /* tp_frees */
        0,                                  /* tp_maxalloc */
        0,                                  /* tp_prev */
        0                                   /* tp_next */
#endif
      };
      varlink_type = tmp;
      type_init = 1;
      if (PyType_Ready(&varlink_type) < 0)
      return NULL;
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, const char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        memcpy(gv->name, name, size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *globals = 0;
    if (!globals) {
      globals = SWIG_newvarlink();
    }
    return globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_InternalNewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (!c) continue;
      c = strstr(c, "swig_ptr: ");
      if (c) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
          if (ptr) {
            size_t shift = (ci->ptype) - types;
            swig_type_info *ty = types_initial[shift];
            size_t ldoc = (c - methods[i].ml_doc);
            size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
            char *ndoc = (char*)malloc(ldoc + lptr + 10);
            if (ndoc) {
              char *buff = ndoc;
              memcpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              memcpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
  /* -----------------------------------------------------------------------------
   * Method creation and docstring support functions
   * ----------------------------------------------------------------------------- */
  
  /* -----------------------------------------------------------------------------
   * Function to find the method definition with the correct docstring for the
   * proxy module as opposed to the low-level API
   * ----------------------------------------------------------------------------- */
  
  SWIGINTERN PyMethodDef *SWIG_PythonGetProxyDoc(const char *name) {
    /* Find the function in the modified method table */
    size_t offset = 0;
    int found = 0;
    while (SwigMethods_proxydocs[offset].ml_meth != NULL) {
      if (strcmp(SwigMethods_proxydocs[offset].ml_name, name) == 0) {
        found = 1;
        break;
      }
      offset++;
    }
    /* Use the copy with the modified docstring if available */
    return found ? &SwigMethods_proxydocs[offset] : NULL;
  }
  
  /* -----------------------------------------------------------------------------
   * Wrapper of PyInstanceMethod_New() used in Python 3
   * It is exported to the generated module, used for -fastproxy
   * ----------------------------------------------------------------------------- */
  
  SWIGINTERN PyObject *SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func) {
    if (PyCFunction_Check(func)) {
      PyCFunctionObject *funcobj = (PyCFunctionObject *)func;
      PyMethodDef *ml = SWIG_PythonGetProxyDoc(funcobj->m_ml->ml_name);
      if (ml)
      func = PyCFunction_NewEx(ml, funcobj->m_self, funcobj->m_module);
    }
#if PY_VERSION_HEX >= 0x03000000
    return PyInstanceMethod_New(func);
#else
    return PyMethod_New(func, NULL, NULL);
#endif
  }
  
  /* -----------------------------------------------------------------------------
   * Wrapper of PyStaticMethod_New()
   * It is exported to the generated module, used for -fastproxy
   * ----------------------------------------------------------------------------- */
  
  SWIGINTERN PyObject *SWIG_PyStaticMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func) {
    if (PyCFunction_Check(func)) {
      PyCFunctionObject *funcobj = (PyCFunctionObject *)func;
      PyMethodDef *ml = SWIG_PythonGetProxyDoc(funcobj->m_ml->ml_name);
      if (ml)
      func = PyCFunction_NewEx(ml, funcobj->m_self, funcobj->m_module);
    }
    return PyStaticMethod_New(func);
  }
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d, *md, *globals;
  
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
    PyModuleDef_HEAD_INIT,
    SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
#if defined(SWIGPYTHON_BUILTIN)
  static SwigPyClientData SwigPyObject_clientdata = {
    0, 0, 0, 0, 0, 0, 0
  };
  static PyGetSetDef this_getset_def = {
    (char *)"this", &SwigPyBuiltin_ThisClosure, NULL, NULL, NULL
  };
  static SwigPyGetSet thisown_getset_closure = {
    SwigPyObject_own,
    SwigPyObject_own
  };
  static PyGetSetDef thisown_getset_def = {
    (char *)"thisown", SwigPyBuiltin_GetterClosure, SwigPyBuiltin_SetterClosure, NULL, &thisown_getset_closure
  };
  PyTypeObject *builtin_pytype;
  int builtin_base_count;
  swig_type_info *builtin_basetype;
  PyObject *tuple;
  PyGetSetDescrObject *static_getset;
  PyTypeObject *metatype;
  PyTypeObject *swigpyobject;
  SwigPyClientData *cd;
  PyObject *public_interface, *public_symbol;
  PyObject *this_descr;
  PyObject *thisown_descr;
  PyObject *self = 0;
  int i;
  
  (void)builtin_pytype;
  (void)builtin_base_count;
  (void)builtin_basetype;
  (void)tuple;
  (void)static_getset;
  (void)self;
  
  /* Metaclass is used to implement static member variables */
  metatype = SwigPyObjectType();
  assert(metatype);
#endif
  
  (void)globals;
  
  /* Create singletons now to avoid potential deadlocks with multi-threaded usage after module initialization */
  SWIG_This();
  SWIG_Python_TypeCache();
  SwigPyPacked_type();
#ifndef SWIGPYTHON_BUILTIN
  SwigPyObject_type();
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule(SWIG_name, SwigMethods);
#endif
  
  md = d = PyModule_GetDict(m);
  (void)md;
  
  SWIG_InitializeModule(0);
  
#ifdef SWIGPYTHON_BUILTIN
  swigpyobject = SwigPyObject_TypeOnce();
  
  SwigPyObject_stype = SWIG_MangledTypeQuery("_p_SwigPyObject");
  assert(SwigPyObject_stype);
  cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
  if (!cd) {
    SwigPyObject_stype->clientdata = &SwigPyObject_clientdata;
    SwigPyObject_clientdata.pytype = swigpyobject;
  } else if (swigpyobject->tp_basicsize != cd->pytype->tp_basicsize) {
    PyErr_SetString(PyExc_RuntimeError, "Import error: attempted to load two incompatible swig-generated modules.");
# if PY_VERSION_HEX >= 0x03000000
    return NULL;
# else
    return;
# endif
  }
  
  /* All objects have a 'this' attribute */
  this_descr = PyDescr_NewGetSet(SwigPyObject_type(), &this_getset_def);
  (void)this_descr;
  
  /* All objects have a 'thisown' attribute */
  thisown_descr = PyDescr_NewGetSet(SwigPyObject_type(), &thisown_getset_def);
  (void)thisown_descr;
  
  public_interface = PyList_New(0);
  public_symbol = 0;
  (void)public_symbol;
  
  PyDict_SetItemString(md, "__all__", public_interface);
  Py_DECREF(public_interface);
  for (i = 0; SwigMethods[i].ml_name != NULL; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, SwigMethods[i].ml_name);
  for (i = 0; swig_const_table[i].name != 0; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, swig_const_table[i].name);
#endif
  
  SWIG_InstallConstants(d,swig_const_table);
  
  
  /* type 'swig::SwigPyIterator' */
  builtin_pytype = (PyTypeObject *)&SwigPyBuiltin__swig__SwigPyIterator_type;
  builtin_pytype->tp_dict = d = PyDict_New();
  SwigPyBuiltin_SetMetaType(builtin_pytype, metatype);
  builtin_pytype->tp_new = PyType_GenericNew;
  builtin_base_count = 0;
  builtin_bases[builtin_base_count] = NULL;
  SwigPyBuiltin_InitBases(builtin_pytype, builtin_bases);
  PyDict_SetItemString(d, "this", this_descr);
  PyDict_SetItemString(d, "thisown", thisown_descr);
  if (PyType_Ready(builtin_pytype) < 0) {
    PyErr_SetString(PyExc_TypeError, "Could not create type 'SwigPyIterator'.");
#if PY_VERSION_HEX >= 0x03000000
    return NULL;
#else
    return;
#endif
  }
  Py_INCREF(builtin_pytype);
  PyModule_AddObject(m, "SwigPyIterator", (PyObject *)builtin_pytype);
  SwigPyBuiltin_AddPublicSymbol(public_interface, "SwigPyIterator");
  d = md;
  
  /* type 'std::vector< uint8_t >' */
  builtin_pytype = (PyTypeObject *)&SwigPyBuiltin__std__vectorT_uint8_t_t_type;
  builtin_pytype->tp_dict = d = PyDict_New();
  
  // thread safe initialization
  swig::container_owner_attribute();
  
  SwigPyBuiltin_SetMetaType(builtin_pytype, metatype);
  builtin_pytype->tp_new = PyType_GenericNew;
  builtin_base_count = 0;
  builtin_bases[builtin_base_count] = NULL;
  SwigPyBuiltin_InitBases(builtin_pytype, builtin_bases);
  PyDict_SetItemString(d, "this", this_descr);
  PyDict_SetItemString(d, "thisown", thisown_descr);
  if (PyType_Ready(builtin_pytype) < 0) {
    PyErr_SetString(PyExc_TypeError, "Could not create type 'VectorOfBytes'.");
#if PY_VERSION_HEX >= 0x03000000
    return NULL;
#else
    return;
#endif
  }
  Py_INCREF(builtin_pytype);
  PyModule_AddObject(m, "VectorOfBytes", (PyObject *)builtin_pytype);
  SwigPyBuiltin_AddPublicSymbol(public_interface, "VectorOfBytes");
  d = md;
  
  /* type 'kkt_driver::classic_interface' */
  builtin_pytype = (PyTypeObject *)&SwigPyBuiltin__kkt_driver__classic_interface_type;
  builtin_pytype->tp_dict = d = PyDict_New();
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TBarcodeAlignment_baCenter",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TBarcodeAlignment::baCenter)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TBarcodeAlignment_baLeft",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TBarcodeAlignment::baLeft)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TBarcodeAlignment_baRight",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TBarcodeAlignment::baRight)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TFinishDocumentMode_fdmTrailerDisabled",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TFinishDocumentMode::fdmTrailerDisabled)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TFinishDocumentMode_fdmTrailerEnabled",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TFinishDocumentMode::fdmTrailerEnabled)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TBinaryConversion_BINARY_CONVERSION_NONE",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TBinaryConversion::BINARY_CONVERSION_NONE)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TBinaryConversion_BINARY_CONVERSION_HEX",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TBinaryConversion::BINARY_CONVERSION_HEX)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TCodePage_CODE_PAGE_DEFAULT",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TCodePage::CODE_PAGE_DEFAULT)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TCodePage_CODE_PAGE_RUSSIAN",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TCodePage::CODE_PAGE_RUSSIAN)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TCodePage_CODE_PAGE_ARMENIAN_UNICODE",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TCodePage::CODE_PAGE_ARMENIAN_UNICODE)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TCodePage_CODE_PAGE_ARMENIAN_ANSI",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TCodePage::CODE_PAGE_ARMENIAN_ANSI)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TCodePage_CODE_PAGE_KAZAKH_UNICODE",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TCodePage::CODE_PAGE_KAZAKH_UNICODE)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TCodePage_CODE_PAGE_TURKMEN_UNICODE",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TCodePage::CODE_PAGE_TURKMEN_UNICODE)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TConnectionType_Local",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TConnectionType::Local)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TConnectionType_ServerTcp",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TConnectionType::ServerTcp)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TConnectionType_ServerDCOM",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TConnectionType::ServerDCOM)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TConnectionType_ESCAPE",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TConnectionType::ESCAPE)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TConnectionType_NotUsed",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TConnectionType::NotUsed)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TConnectionType_Emulator",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TConnectionType::Emulator)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TConnectionType_Tcp",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TConnectionType::Tcp)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "BCT_None",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::BCT_None)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "BCT_Below",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::BCT_Below)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "BCT_Above",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::BCT_Above)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "BCT_Both",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::BCT_Both)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "BC1D_Code128A",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::BC1D_Code128A)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "BC1D_Code128B",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::BC1D_Code128B)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "BC1D_Code128C",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::BC1D_Code128C)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "BC1D_ReservedForQR",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::BC1D_ReservedForQR)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "BC1D_Code39",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::BC1D_Code39)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "BC1D_EAN13",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::BC1D_EAN13)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "BC2D_PDF417",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::BC2D_PDF417)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "BC2D_DATAMATRIX",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::BC2D_DATAMATRIX)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "BC2D_AZTEC",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::BC2D_AZTEC)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "BC2D_QRCODE",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::BC2D_QRCODE)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f00_journal_weight_sensor",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f00_journal_weight_sensor)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f01_receipt_weight_sensor",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f01_receipt_weight_sensor)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f02_journal_opt_sensor",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f02_journal_opt_sensor)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f03_receipt_opt_sensor",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f03_receipt_opt_sensor)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f04_cover_sensor",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f04_cover_sensor)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f05_journal_lever",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f05_journal_lever)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f06_receipt_lever",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f06_receipt_lever)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f07_hi_slip_sensor",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f07_hi_slip_sensor)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f08_low_slip_sensor",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f08_low_slip_sensor)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f09_presenter",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f09_presenter)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f10_presenter_commands",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f10_presenter_commands)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f11_ej_overflow_flag",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f11_ej_overflow_flag)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f12_ej",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f12_ej)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f13_cutter",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f13_cutter)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f14_drawer_status_as_presenter_paper_sensor",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f14_drawer_status_as_presenter_paper_sensor)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f15_drawer_sensor",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f15_drawer_sensor)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f16_presenter_in_paper_sensor",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f16_presenter_in_paper_sensor)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f17_presenter_out_paper_sensor",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f17_presenter_out_paper_sensor)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f18_bill_acceptor",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f18_bill_acceptor)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f19_tax_keyboard",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f19_tax_keyboard)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f20_journal",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f20_journal)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f21_slip",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f21_slip)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f22_non_fiscal_doc_commands",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f22_non_fiscal_doc_commands)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f23_cashcore",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f23_cashcore)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f24_inn_leading_zeros",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f24_inn_leading_zeros)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f25_rnm_leading_zeros",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f25_rnm_leading_zeros)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f26_line_printing_bytes_swapping",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f26_line_printing_bytes_swapping)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f27_wrong_tax_password_blocking",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f27_wrong_tax_password_blocking)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f28_alt_protocol",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f28_alt_protocol)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f29_string_printing_commands_wrap_strings_by_n",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f29_string_printing_commands_wrap_strings_by_n)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f30_string_printing_commands_wrap_strings_by_font",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f30_string_printing_commands_wrap_strings_by_font)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f31_fisc_commands_wrap_strings_by_n",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f31_fisc_commands_wrap_strings_by_n)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f32_fisc_commands_wrap_strings_by_font",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f32_fisc_commands_wrap_strings_by_font)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f33_senior_cashier",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f33_senior_cashier)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f34_slip_receipt_bit3",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f34_slip_receipt_bit3)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f35_block_graphic_loading",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f35_block_graphic_loading)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f36_error_description_command",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f36_error_description_command)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f37_print_flags_for_print_ext_graphics_print_line",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f37_print_flags_for_print_ext_graphics_print_line)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f38_skno",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f38_skno)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f39_mfp",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f39_mfp)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f40_ej5",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f40_ej5)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f41_print_scaled_graphics",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f41_print_scaled_graphics)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f42_print_ext_graphics_512",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f42_print_ext_graphics_512)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f43_fs",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f43_fs)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f44_eod",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f44_eod)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f45_tag_autoprint_support",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f45_tag_autoprint_support)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f46_qr_in_footer_support",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f46_qr_in_footer_support)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f47_fs_1_1_support",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f47_fs_1_1_support)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f48_correction_new_support",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f48_correction_new_support)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f49_error_description_command_extended",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f49_error_description_command_extended)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f50_fd_answers_extended",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f50_fd_answers_extended)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f51_fd_authorization_req",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f51_fd_authorization_req)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f52_plain_protocolv1_transfer",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f52_plain_protocolv1_transfer)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_f53_blocking_mode_available",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_f53_blocking_mode_available)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_reserved",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_reserved)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_Font1Width",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_Font1Width)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_Font2Width",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_Font2Width)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_FirstDrawLine",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_FirstDrawLine)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_InnDigitCount",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_InnDigitCount)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_RnmDigitCount",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_RnmDigitCount)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_LongRnmDigitCount",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_LongRnmDigitCount)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_LongSerialDigitCount",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_LongSerialDigitCount)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_DefaultTaxPassword",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_DefaultTaxPassword)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_DefaultAdminPassword",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_DefaultAdminPassword)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_BluetoothTableNumber",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_BluetoothTableNumber)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_TaxFieldNumber",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_TaxFieldNumber)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_MaxCmdLength",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_MaxCmdLength)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_MaxDrawLineWidth",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_MaxDrawLineWidth)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_MaxDrawLineWidth512",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_MaxDrawLineWidth512)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_MaxDrawLineCount512",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_MaxDrawLineCount512)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_FsTableNumber",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_FsTableNumber)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_OfdTableNmb",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_OfdTableNmb)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_EmbeddedTableNumber",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_EmbeddedTableNumber)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_FFDVersionTableNumber",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_FFDVersionTableNumber)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPE_FFDVersionFieldNumber",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPE_FFDVersionFieldNumber)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "SBM_Swap",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::SBM_Swap)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "SBM_NoSwap",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::SBM_NoSwap)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "SBM_Prop",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::SBM_Prop)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "SBM_Model",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::SBM_Model)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_UnknownMode",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_UnknownMode)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_DumpMode",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_DumpMode)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_SessionOpen",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_SessionOpen)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_SessionOpenOver24h",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_SessionOpenOver24h)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_SessionClosed",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_SessionClosed)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_TaxmanPasswordError",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_TaxmanPasswordError)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_DateConfirmWaiting",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_DateConfirmWaiting)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_PointModificationAllowed",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_PointModificationAllowed)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_OpenedDocument",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_OpenedDocument)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_TechnologicalResetAllowed",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_TechnologicalResetAllowed)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_TestRun",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_TestRun)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_FullFiscalReportInProgress",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_FullFiscalReportInProgress)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_CryptoJournalReportInProgress",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_CryptoJournalReportInProgress)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_FiscalSlipMode",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_FiscalSlipMode)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_SlipPrintingInProgress",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_SlipPrintingInProgress)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_FiscalSlipIsReady",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_FiscalSlipIsReady)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_OpenedDocumentBuy",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_OpenedDocumentBuy)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_OpenedSlipDocumentBuy",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_OpenedSlipDocumentBuy)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_LoadingAndPositioningSlip",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_LoadingAndPositioningSlip)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_OpenedDocumentSaleReturn",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_OpenedDocumentSaleReturn)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_OpenedSlipDocumentSaleReturn",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_OpenedSlipDocumentSaleReturn)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_PositioningSlip",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_PositioningSlip)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_OpenedDocumentBuyReturn",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_OpenedDocumentBuyReturn)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_OpenedSlipDocumentBuyReturn",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_OpenedSlipDocumentBuyReturn)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_PrintingSlip",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_PrintingSlip)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_OpenedDocumentNonFiscal",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_OpenedDocumentNonFiscal)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_SlipPrinted",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_SlipPrinted)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_DocumentPrinted",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_DocumentPrinted)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_EjectingSlip",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_EjectingSlip)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PM_WaitingSlipRemoval",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PM_WaitingSlipRemoval)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PSM_PaperPresent",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PSM_PaperPresent)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PSM_PassivePaperAbsense",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PSM_PassivePaperAbsense)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PSM_ActivePaperAbsense",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PSM_ActivePaperAbsense)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PSM_AfterAvtivePaperAbsense",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PSM_AfterAvtivePaperAbsense)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PSM_ReportPrintingInProgress",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PSM_ReportPrintingInProgress)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "PSM_OperationPrintingInProgress",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::PSM_OperationPrintingInProgress)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DFE_SkipAllPrinting",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DFE_SkipAllPrinting)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DFE_AutoReadDetailedErrorDescription",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DFE_AutoReadDetailedErrorDescription)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DFE_DataPresentation",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DFE_DataPresentation)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DFE_PlainTransfer",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DFE_PlainTransfer)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DFE_BlockingMode",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DFE_BlockingMode)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DFE_SkipRequisitePrint",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DFE_SkipRequisitePrint)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DFE_UseDefaultPropertyIfNotSetByUser",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DFE_UseDefaultPropertyIfNotSetByUser)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPF_ClassicText",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPF_ClassicText)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "DPF_ClassicJson",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::DPF_ClassicJson)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TT_Byte",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TT_Byte)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TT_Uint16",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TT_Uint16)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TT_Uint32",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TT_Uint32)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TT_VLN",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TT_VLN)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TT_FVLN",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TT_FVLN)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TT_BitMask",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TT_BitMask)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TT_UnixTime",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TT_UnixTime)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TT_String",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TT_String)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TT_STLV",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TT_STLV)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "TT_ByteArray",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::TT_ByteArray)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "MU_Item",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::MU_Item)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "MU_Gram",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::MU_Gram)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "MU_Kilogram",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::MU_Kilogram)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "MU_Ton",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::MU_Ton)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "MU_Centimeter",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::MU_Centimeter)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "MU_Decimeter",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::MU_Decimeter)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "MU_Meter",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::MU_Meter)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "MU_SquareCentimeter",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::MU_SquareCentimeter)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "MU_SquareDecimeter",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::MU_SquareDecimeter)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "MU_SquareMeter",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::MU_SquareMeter)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "MU_Milliliter",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::MU_Milliliter)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "MU_Liter",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::MU_Liter)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "MU_CubicMeter",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::MU_CubicMeter)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "MU_KilowattHour",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::MU_KilowattHour)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "MU_Gigacalorie",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::MU_Gigacalorie)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "MU_Day",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::MU_Day)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "MU_Hour",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::MU_Hour)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "MU_Minute",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::MU_Minute)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "MU_Second",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::MU_Second)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "MU_Kilobyte",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::MU_Kilobyte)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "MU_Megabyte",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::MU_Megabyte)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "MU_Gigabyte",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::MU_Gigabyte)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "MU_Terabyte",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::MU_Terabyte)));
  SWIG_Python_SetConstant(d, d == md ? public_interface : NULL, "MU_Other",SWIG_From_int(static_cast< int >(kkt_driver::classic_interface::MU_Other)));
  SwigPyBuiltin_SetMetaType(builtin_pytype, metatype);
  builtin_pytype->tp_new = PyType_GenericNew;
  builtin_base_count = 0;
  builtin_bases[builtin_base_count] = NULL;
  SwigPyBuiltin_InitBases(builtin_pytype, builtin_bases);
  PyDict_SetItemString(d, "this", this_descr);
  PyDict_SetItemString(d, "thisown", thisown_descr);
  if (PyType_Ready(builtin_pytype) < 0) {
    PyErr_SetString(PyExc_TypeError, "Could not create type 'classic_interface'.");
#if PY_VERSION_HEX >= 0x03000000
    return NULL;
#else
    return;
#endif
  }
  Py_INCREF(builtin_pytype);
  PyModule_AddObject(m, "classic_interface", (PyObject *)builtin_pytype);
  SwigPyBuiltin_AddPublicSymbol(public_interface, "classic_interface");
  d = md;
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

